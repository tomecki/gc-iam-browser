{"roles/owner": ["accessapproval.requests.approve", "accessapproval.requests.dismiss", "accessapproval.requests.get", "accessapproval.requests.list", "accessapproval.settings.delete", "accessapproval.settings.get", "accessapproval.settings.update", "accesscontextmanager.accessLevels.create", "accesscontextmanager.accessLevels.delete", "accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessLevels.replaceAll", "accesscontextmanager.accessLevels.update", "accesscontextmanager.accessPolicies.create", "accesscontextmanager.accessPolicies.delete", "accesscontextmanager.accessPolicies.get", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessPolicies.setIamPolicy", "accesscontextmanager.accessPolicies.update", "accesscontextmanager.accessZones.create", "accesscontextmanager.accessZones.delete", "accesscontextmanager.accessZones.get", "accesscontextmanager.accessZones.list", "accesscontextmanager.accessZones.update", "accesscontextmanager.gcpUserAccessBindings.create", "accesscontextmanager.gcpUserAccessBindings.delete", "accesscontextmanager.gcpUserAccessBindings.get", "accesscontextmanager.gcpUserAccessBindings.list", "accesscontextmanager.gcpUserAccessBindings.update", "accesscontextmanager.policies.create", "accesscontextmanager.policies.delete", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.policies.setIamPolicy", "accesscontextmanager.policies.update", "accesscontextmanager.servicePerimeters.commit", "accesscontextmanager.servicePerimeters.create", "accesscontextmanager.servicePerimeters.delete", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "accesscontextmanager.servicePerimeters.replaceAll", "accesscontextmanager.servicePerimeters.update", "actions.agent.claimContentProvider", "actions.agent.get", "actions.agent.update", "actions.agentVersions.create", "actions.agentVersions.delete", "actions.agentVersions.deploy", "actions.agentVersions.get", "actions.agentVersions.list", "aiplatform.annotationSpecs.create", "aiplatform.annotationSpecs.delete", "aiplatform.annotationSpecs.get", "aiplatform.annotationSpecs.list", "aiplatform.annotationSpecs.update", "aiplatform.annotations.create", "aiplatform.annotations.delete", "aiplatform.annotations.get", "aiplatform.annotations.list", "aiplatform.annotations.update", "aiplatform.batchPredictionJobs.cancel", "aiplatform.batchPredictionJobs.create", "aiplatform.batchPredictionJobs.delete", "aiplatform.batchPredictionJobs.get", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.cancel", "aiplatform.customJobs.create", "aiplatform.customJobs.delete", "aiplatform.customJobs.get", "aiplatform.customJobs.list", "aiplatform.dataItems.create", "aiplatform.dataItems.delete", "aiplatform.dataItems.get", "aiplatform.dataItems.list", "aiplatform.dataItems.update", "aiplatform.dataLabelingJobs.cancel", "aiplatform.dataLabelingJobs.create", "aiplatform.dataLabelingJobs.delete", "aiplatform.dataLabelingJobs.get", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.create", "aiplatform.datasets.delete", "aiplatform.datasets.export", "aiplatform.datasets.get", "aiplatform.datasets.import", "aiplatform.datasets.list", "aiplatform.datasets.update", "aiplatform.endpoints.create", "aiplatform.endpoints.delete", "aiplatform.endpoints.deploy", "aiplatform.endpoints.explain", "aiplatform.endpoints.get", "aiplatform.endpoints.list", "aiplatform.endpoints.predict", "aiplatform.endpoints.undeploy", "aiplatform.endpoints.update", "aiplatform.hyperparameterTuningJobs.cancel", "aiplatform.hyperparameterTuningJobs.create", "aiplatform.hyperparameterTuningJobs.delete", "aiplatform.hyperparameterTuningJobs.get", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.get", "aiplatform.locations.list", "aiplatform.migratableResources.migrate", "aiplatform.migratableResources.search", "aiplatform.modelEvaluationSlices.get", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.exportEvaluatedDataItems", "aiplatform.modelEvaluations.get", "aiplatform.modelEvaluations.list", "aiplatform.models.delete", "aiplatform.models.export", "aiplatform.models.get", "aiplatform.models.list", "aiplatform.models.upload", "aiplatform.operations.list", "aiplatform.specialistPools.create", "aiplatform.specialistPools.delete", "aiplatform.specialistPools.get", "aiplatform.specialistPools.list", "aiplatform.specialistPools.update", "aiplatform.trainingPipelines.cancel", "aiplatform.trainingPipelines.create", "aiplatform.trainingPipelines.delete", "aiplatform.trainingPipelines.get", "aiplatform.trainingPipelines.list", "androidmanagement.enterprises.manage", "apigateway.apiconfigs.create", "apigateway.apiconfigs.delete", "apigateway.apiconfigs.get", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apiconfigs.setIamPolicy", "apigateway.apiconfigs.update", "apigateway.apis.create", "apigateway.apis.delete", "apigateway.apis.get", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.apis.setIamPolicy", "apigateway.apis.update", "apigateway.gateways.create", "apigateway.gateways.delete", "apigateway.gateways.get", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.gateways.setIamPolicy", "apigateway.gateways.update", "apigateway.locations.get", "apigateway.locations.list", "apigateway.operations.cancel", "apigateway.operations.delete", "apigateway.operations.get", "apigateway.operations.list", "apigee.apiproductattributes.createOrUpdateAll", "apigee.apiproductattributes.delete", "apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproductattributes.update", "apigee.apiproducts.create", "apigee.apiproducts.delete", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.apiproducts.update", "apigee.appkeys.create", "apigee.appkeys.delete", "apigee.appkeys.get", "apigee.appkeys.manage", "apigee.apps.get", "apigee.apps.list", "apigee.caches.delete", "apigee.caches.list", "apigee.canaryevaluations.create", "apigee.canaryevaluations.get", "apigee.datacollectors.create", "apigee.datacollectors.delete", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datacollectors.update", "apigee.datastores.create", "apigee.datastores.delete", "apigee.datastores.get", "apigee.datastores.list", "apigee.datastores.update", "apigee.deployments.create", "apigee.deployments.delete", "apigee.deployments.get", "apigee.deployments.list", "apigee.deployments.update", "apigee.developerappattributes.createOrUpdateAll", "apigee.developerappattributes.delete", "apigee.developerappattributes.get", "apigee.developerappattributes.list", "apigee.developerappattributes.update", "apigee.developerapps.create", "apigee.developerapps.delete", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerapps.manage", "apigee.developerattributes.createOrUpdateAll", "apigee.developerattributes.delete", "apigee.developerattributes.get", "apigee.developerattributes.list", "apigee.developerattributes.update", "apigee.developers.create", "apigee.developers.delete", "apigee.developers.get", "apigee.developers.list", "apigee.developers.update", "apigee.envgroupattachments.create", "apigee.envgroupattachments.delete", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.create", "apigee.envgroups.delete", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.envgroups.update", "apigee.environments.create", "apigee.environments.delete", "apigee.environments.get", "apigee.environments.getDataLocation", "apigee.environments.getIamPolicy", "apigee.environments.getStats", "apigee.environments.list", "apigee.environments.manageRuntime", "apigee.environments.setIamPolicy", "apigee.environments.update", "apigee.exports.create", "apigee.exports.get", "apigee.exports.list", "apigee.flowhooks.attachSharedFlow", "apigee.flowhooks.detachSharedFlow", "apigee.flowhooks.getSharedFlow", "apigee.flowhooks.list", "apigee.hostqueries.create", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.ingressconfigs.get", "apigee.instanceattachments.create", "apigee.instanceattachments.delete", "apigee.instanceattachments.get", "apigee.instanceattachments.list", "apigee.instances.create", "apigee.instances.delete", "apigee.instances.get", "apigee.instances.list", "apigee.instances.reportStatus", "apigee.keystorealiases.create", "apigee.keystorealiases.delete", "apigee.keystorealiases.exportCertificate", "apigee.keystorealiases.generateCSR", "apigee.keystorealiases.get", "apigee.keystorealiases.list", "apigee.keystorealiases.update", "apigee.keystores.create", "apigee.keystores.delete", "apigee.keystores.export", "apigee.keystores.get", "apigee.keystores.list", "apigee.keyvaluemaps.create", "apigee.keyvaluemaps.delete", "apigee.keyvaluemaps.list", "apigee.maskconfigs.get", "apigee.maskconfigs.update", "apigee.operations.get", "apigee.operations.list", "apigee.organizations.create", "apigee.organizations.get", "apigee.organizations.list", "apigee.organizations.update", "apigee.projects.update", "apigee.proxies.create", "apigee.proxies.delete", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.delete", "apigee.proxyrevisions.deploy", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.proxyrevisions.undeploy", "apigee.proxyrevisions.update", "apigee.queries.create", "apigee.queries.get", "apigee.queries.list", "apigee.references.create", "apigee.references.delete", "apigee.references.get", "apigee.references.list", "apigee.references.update", "apigee.reports.create", "apigee.reports.delete", "apigee.reports.get", "apigee.reports.list", "apigee.reports.update", "apigee.resourcefiles.create", "apigee.resourcefiles.delete", "apigee.resourcefiles.get", "apigee.resourcefiles.list", "apigee.resourcefiles.update", "apigee.sharedflowrevisions.delete", "apigee.sharedflowrevisions.deploy", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflowrevisions.undeploy", "apigee.sharedflowrevisions.update", "apigee.sharedflows.create", "apigee.sharedflows.delete", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.targetservers.create", "apigee.targetservers.delete", "apigee.targetservers.get", "apigee.targetservers.list", "apigee.targetservers.update", "apigee.tracesessions.create", "apigee.tracesessions.delete", "apigee.tracesessions.get", "apigee.tracesessions.list", "apigeeconnect.connections.list", "apigeeconnect.endpoints.connect", "apikeys.keys.create", "apikeys.keys.delete", "apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "apikeys.keys.update", "appengine.applications.create", "appengine.applications.get", "appengine.applications.update", "appengine.instances.delete", "appengine.instances.get", "appengine.instances.list", "appengine.memcache.addKey", "appengine.memcache.flush", "appengine.memcache.get", "appengine.memcache.getKey", "appengine.memcache.list", "appengine.memcache.update", "appengine.operations.get", "appengine.operations.list", "appengine.runtimes.actAsAdmin", "appengine.services.delete", "appengine.services.get", "appengine.services.list", "appengine.services.update", "appengine.versions.create", "appengine.versions.delete", "appengine.versions.get", "appengine.versions.getFileContents", "appengine.versions.list", "appengine.versions.update", "artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.delete", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.create", "artifactregistry.repositories.delete", "artifactregistry.repositories.deleteArtifacts", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.repositories.setIamPolicy", "artifactregistry.repositories.update", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.delete", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.delete", "artifactregistry.versions.get", "artifactregistry.versions.list", "assuredworkloads.operations.get", "assuredworkloads.operations.list", "assuredworkloads.workload.delete", "assuredworkloads.workload.get", "assuredworkloads.workload.list", "assuredworkloads.workload.update", "automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.getIamPolicy", "automl.datasets.import", "automl.datasets.list", "automl.datasets.setIamPolicy", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.getIamPolicy", "automl.locations.list", "automl.locations.setIamPolicy", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.getIamPolicy", "automl.models.list", "automl.models.predict", "automl.models.setIamPolicy", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "automlrecommendations.apiKeys.create", "automlrecommendations.apiKeys.delete", "automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.create", "automlrecommendations.catalogItems.delete", "automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogItems.update", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.catalogs.update", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.create", "automlrecommendations.events.list", "automlrecommendations.events.purge", "automlrecommendations.events.rejoin", "automlrecommendations.placements.create", "automlrecommendations.placements.delete", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.create", "automlrecommendations.recommendations.delete", "automlrecommendations.recommendations.list", "automlrecommendations.recommendations.pause", "automlrecommendations.recommendations.resume", "automlrecommendations.recommendations.update", "bigquery.bireservations.get", "bigquery.bireservations.update", "bigquery.capacityCommitments.create", "bigquery.capacityCommitments.delete", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.capacityCommitments.update", "bigquery.config.get", "bigquery.config.update", "bigquery.connections.create", "bigquery.connections.delete", "bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.setIamPolicy", "bigquery.connections.update", "bigquery.connections.use", "bigquery.datasets.create", "bigquery.datasets.delete", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.datasets.update", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.listAll", "bigquery.jobs.update", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.create", "bigquery.reservationAssignments.delete", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.create", "bigquery.reservations.delete", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.reservations.update", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.savedqueries.create", "bigquery.savedqueries.delete", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.savedqueries.update", "bigquery.tables.getIamPolicy", "bigquery.tables.setIamPolicy", "bigquery.transfers.get", "bigquery.transfers.update", "bigtable.appProfiles.create", "bigtable.appProfiles.delete", "bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.appProfiles.update", "bigtable.backups.create", "bigtable.backups.delete", "bigtable.backups.get", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.backups.restore", "bigtable.backups.setIamPolicy", "bigtable.backups.update", "bigtable.clusters.create", "bigtable.clusters.delete", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.clusters.update", "bigtable.instances.create", "bigtable.instances.delete", "bigtable.instances.get", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.instances.setIamPolicy", "bigtable.instances.update", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.create", "bigtable.tables.delete", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "bigtable.tables.mutateRows", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "bigtable.tables.setIamPolicy", "bigtable.tables.update", "billing.resourceCosts.get", "binaryauthorization.attestors.create", "binaryauthorization.attestors.delete", "binaryauthorization.attestors.get", "binaryauthorization.attestors.getIamPolicy", "binaryauthorization.attestors.list", "binaryauthorization.attestors.setIamPolicy", "binaryauthorization.attestors.update", "binaryauthorization.attestors.verifyImageAttested", "binaryauthorization.policy.get", "binaryauthorization.policy.getIamPolicy", "binaryauthorization.policy.setIamPolicy", "binaryauthorization.policy.update", "chat.bots.get", "chat.bots.update", "clientauthconfig.brands.create", "clientauthconfig.brands.delete", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.brands.update", "clientauthconfig.clients.create", "clientauthconfig.clients.createSecret", "clientauthconfig.clients.delete", "clientauthconfig.clients.get", "clientauthconfig.clients.getWithSecret", "clientauthconfig.clients.list", "clientauthconfig.clients.listWithSecrets", "clientauthconfig.clients.undelete", "clientauthconfig.clients.update", "cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAccessLevel", "cloudasset.assets.exportAccessPolicy", "cloudasset.assets.exportAllAccessPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportBigtableCluster", "cloudasset.assets.exportBigtableInstance", "cloudasset.assets.exportBigtableTable", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsImportJobs", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalAddress", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionAutoscaler", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRegionDisk", "cloudasset.assets.exportComputeRegionInstanceGroup", "cloudasset.assets.exportComputeRegionInstanceGroupManager", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusterrole", "cloudasset.assets.exportContainerClusterrolebinding", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportContainerNamespace", "cloudasset.assets.exportContainerNode", "cloudasset.assets.exportContainerNodepool", "cloudasset.assets.exportContainerPod", "cloudasset.assets.exportContainerRole", "cloudasset.assets.exportContainerRolebinding", "cloudasset.assets.exportContainerregistryImage", "cloudasset.assets.exportDatafusionInstance", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamPolicy", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportManagedidentitiesDomain", "cloudasset.assets.exportOrgPolicy", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportResource", "cloudasset.assets.exportServicePerimeter", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudasset.feeds.create", "cloudasset.feeds.delete", "cloudasset.feeds.get", "cloudasset.feeds.list", "cloudasset.feeds.update", "cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "cloudconfig.configs.get", "cloudconfig.configs.update", "clouddebugger.breakpoints.create", "clouddebugger.breakpoints.delete", "clouddebugger.breakpoints.get", "clouddebugger.breakpoints.list", "clouddebugger.breakpoints.listActive", "clouddebugger.breakpoints.update", "clouddebugger.debuggees.create", "clouddebugger.debuggees.list", "cloudfunctions.functions.call", "cloudfunctions.functions.create", "cloudfunctions.functions.delete", "cloudfunctions.functions.get", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.invoke", "cloudfunctions.functions.list", "cloudfunctions.functions.setIamPolicy", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.functions.sourceCodeSet", "cloudfunctions.functions.update", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudiot.devices.bindGateway", "cloudiot.devices.create", "cloudiot.devices.delete", "cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.devices.sendCommand", "cloudiot.devices.unbindGateway", "cloudiot.devices.update", "cloudiot.devices.updateConfig", "cloudiot.registries.create", "cloudiot.registries.delete", "cloudiot.registries.get", "cloudiot.registries.getIamPolicy", "cloudiot.registries.list", "cloudiot.registries.setIamPolicy", "cloudiot.registries.update", "cloudiottoken.tokensettings.get", "cloudiottoken.tokensettings.update", "cloudjobdiscovery.companies.create", "cloudjobdiscovery.companies.delete", "cloudjobdiscovery.companies.get", "cloudjobdiscovery.companies.list", "cloudjobdiscovery.companies.update", "cloudjobdiscovery.events.create", "cloudjobdiscovery.jobs.create", "cloudjobdiscovery.jobs.delete", "cloudjobdiscovery.jobs.get", "cloudjobdiscovery.jobs.search", "cloudjobdiscovery.jobs.update", "cloudjobdiscovery.profiles.create", "cloudjobdiscovery.profiles.delete", "cloudjobdiscovery.profiles.get", "cloudjobdiscovery.profiles.search", "cloudjobdiscovery.profiles.update", "cloudjobdiscovery.tenants.create", "cloudjobdiscovery.tenants.delete", "cloudjobdiscovery.tenants.get", "cloudjobdiscovery.tenants.update", "cloudjobdiscovery.tools.access", "cloudkms.cryptoKeyVersions.create", "cloudkms.cryptoKeyVersions.destroy", "cloudkms.cryptoKeyVersions.get", "cloudkms.cryptoKeyVersions.list", "cloudkms.cryptoKeyVersions.restore", "cloudkms.cryptoKeyVersions.update", "cloudkms.cryptoKeyVersions.useToDecrypt", "cloudkms.cryptoKeyVersions.useToEncrypt", "cloudkms.cryptoKeyVersions.useToSign", "cloudkms.cryptoKeyVersions.viewPublicKey", "cloudkms.cryptoKeys.create", "cloudkms.cryptoKeys.get", "cloudkms.cryptoKeys.getIamPolicy", "cloudkms.cryptoKeys.list", "cloudkms.cryptoKeys.setIamPolicy", "cloudkms.cryptoKeys.update", "cloudkms.importJobs.create", "cloudkms.importJobs.get", "cloudkms.importJobs.getIamPolicy", "cloudkms.importJobs.list", "cloudkms.importJobs.setIamPolicy", "cloudkms.importJobs.useToImport", "cloudkms.keyRings.create", "cloudkms.keyRings.get", "cloudkms.keyRings.getIamPolicy", "cloudkms.keyRings.list", "cloudkms.keyRings.setIamPolicy", "cloudmessaging.messages.create", "cloudmigration.velostrataendpoints.connect", "cloudnotifications.activities.list", "cloudonefs.isiloncloud.com/clusters.create", "cloudonefs.isiloncloud.com/clusters.delete", "cloudonefs.isiloncloud.com/clusters.get", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/clusters.update", "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings", "cloudonefs.isiloncloud.com/fileshares.create", "cloudonefs.isiloncloud.com/fileshares.delete", "cloudonefs.isiloncloud.com/fileshares.get", "cloudonefs.isiloncloud.com/fileshares.list", "cloudonefs.isiloncloud.com/fileshares.update", "cloudprivatecatalog.targets.get", "cloudprivatecatalogproducer.associations.create", "cloudprivatecatalogproducer.associations.delete", "cloudprivatecatalogproducer.associations.get", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.create", "cloudprivatecatalogproducer.catalogs.delete", "cloudprivatecatalogproducer.catalogs.get", "cloudprivatecatalogproducer.catalogs.getIamPolicy", "cloudprivatecatalogproducer.catalogs.list", "cloudprivatecatalogproducer.catalogs.setIamPolicy", "cloudprivatecatalogproducer.catalogs.undelete", "cloudprivatecatalogproducer.catalogs.update", "cloudprivatecatalogproducer.targets.associate", "cloudprivatecatalogproducer.targets.unassociate", "cloudprofiler.profiles.create", "cloudprofiler.profiles.list", "cloudprofiler.profiles.update", "cloudscheduler.jobs.create", "cloudscheduler.jobs.delete", "cloudscheduler.jobs.enable", "cloudscheduler.jobs.fullView", "cloudscheduler.jobs.get", "cloudscheduler.jobs.list", "cloudscheduler.jobs.pause", "cloudscheduler.jobs.run", "cloudscheduler.jobs.update", "cloudscheduler.locations.get", "cloudscheduler.locations.list", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "cloudsql.backupRuns.create", "cloudsql.backupRuns.delete", "cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.create", "cloudsql.databases.delete", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.databases.update", "cloudsql.instances.addServerCa", "cloudsql.instances.clone", "cloudsql.instances.connect", "cloudsql.instances.create", "cloudsql.instances.delete", "cloudsql.instances.demoteMaster", "cloudsql.instances.export", "cloudsql.instances.failover", "cloudsql.instances.get", "cloudsql.instances.import", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.instances.login", "cloudsql.instances.promoteReplica", "cloudsql.instances.resetSslConfig", "cloudsql.instances.restart", "cloudsql.instances.restoreBackup", "cloudsql.instances.rotateServerCa", "cloudsql.instances.startReplica", "cloudsql.instances.stopReplica", "cloudsql.instances.truncateLog", "cloudsql.instances.update", "cloudsql.sslCerts.create", "cloudsql.sslCerts.createEphemeral", "cloudsql.sslCerts.delete", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.create", "cloudsql.users.delete", "cloudsql.users.list", "cloudsql.users.update", "cloudsupport.accounts.create", "cloudsupport.accounts.delete", "cloudsupport.accounts.get", "cloudsupport.accounts.getIamPolicy", "cloudsupport.accounts.getUserRoles", "cloudsupport.accounts.list", "cloudsupport.accounts.setIamPolicy", "cloudsupport.accounts.update", "cloudsupport.accounts.updateUserRoles", "cloudsupport.operations.get", "cloudsupport.properties.get", "cloudsupport.techCases.create", "cloudsupport.techCases.escalate", "cloudsupport.techCases.get", "cloudsupport.techCases.list", "cloudsupport.techCases.update", "cloudtasks.locations.get", "cloudtasks.locations.list", "cloudtasks.queues.create", "cloudtasks.queues.delete", "cloudtasks.queues.get", "cloudtasks.queues.getIamPolicy", "cloudtasks.queues.list", "cloudtasks.queues.pause", "cloudtasks.queues.purge", "cloudtasks.queues.resume", "cloudtasks.queues.setIamPolicy", "cloudtasks.queues.update", "cloudtasks.tasks.create", "cloudtasks.tasks.delete", "cloudtasks.tasks.fullView", "cloudtasks.tasks.get", "cloudtasks.tasks.list", "cloudtasks.tasks.run", "cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.create", "cloudtestservice.matrices.get", "cloudtestservice.matrices.update", "cloudtoolresults.executions.create", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.executions.update", "cloudtoolresults.histories.create", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.create", "cloudtoolresults.settings.get", "cloudtoolresults.settings.update", "cloudtoolresults.steps.create", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "cloudtoolresults.steps.update", "cloudtrace.insights.get", "cloudtrace.insights.list", "cloudtrace.stats.get", "cloudtrace.tasks.create", "cloudtrace.tasks.delete", "cloudtrace.tasks.get", "cloudtrace.tasks.list", "cloudtrace.traces.get", "cloudtrace.traces.list", "cloudtrace.traces.patch", "cloudtranslate.generalModels.batchPredict", "cloudtranslate.generalModels.get", "cloudtranslate.generalModels.predict", "cloudtranslate.glossaries.batchPredict", "cloudtranslate.glossaries.create", "cloudtranslate.glossaries.delete", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.glossaries.predict", "cloudtranslate.languageDetectionModels.predict", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.cancel", "cloudtranslate.operations.delete", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "cloudvolumesgcp-api.netapp.com/activeDirectories.create", "cloudvolumesgcp-api.netapp.com/activeDirectories.delete", "cloudvolumesgcp-api.netapp.com/activeDirectories.get", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/activeDirectories.update", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.get", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.create", "cloudvolumesgcp-api.netapp.com/snapshots.delete", "cloudvolumesgcp-api.netapp.com/snapshots.get", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/snapshots.update", "cloudvolumesgcp-api.netapp.com/volumes.create", "cloudvolumesgcp-api.netapp.com/volumes.delete", "cloudvolumesgcp-api.netapp.com/volumes.get", "cloudvolumesgcp-api.netapp.com/volumes.list", "cloudvolumesgcp-api.netapp.com/volumes.update", "composer.environments.create", "composer.environments.delete", "composer.environments.get", "composer.environments.list", "composer.environments.update", "composer.imageversions.list", "composer.operations.delete", "composer.operations.get", "composer.operations.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.commitments.create", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.delete", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.globalPublicDelegatedPrefixes.create", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.globalPublicDelegatedPrefixes.use", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.create", "compute.maintenancePolicies.delete", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.maintenancePolicies.setIamPolicy", "compute.maintenancePolicies.use", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.addNodes", "compute.nodeGroups.create", "compute.nodeGroups.delete", "compute.nodeGroups.deleteNodes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeGroups.setIamPolicy", "compute.nodeGroups.setNodeTemplate", "compute.nodeGroups.update", "compute.nodeTemplates.create", "compute.nodeTemplates.delete", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTemplates.setIamPolicy", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.organizations.setSecurityPolicy", "compute.oslogin.updateExternalUser", "compute.packetMirrorings.update", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.projects.setDefaultNetworkTier", "compute.projects.setDefaultServiceAccount", "compute.projects.setUsageExportBucket", "compute.publicAdvertisedPrefixes.create", "compute.publicAdvertisedPrefixes.delete", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicAdvertisedPrefixes.update", "compute.publicAdvertisedPrefixes.updatePolicy", "compute.publicAdvertisedPrefixes.use", "compute.publicDelegatedPrefixes.create", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.publicDelegatedPrefixes.use", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.delete", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionOperations.setIamPolicy", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.create", "compute.reservations.delete", "compute.reservations.get", "compute.reservations.list", "compute.reservations.resize", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.setIamPolicy", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.delete", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zoneOperations.setIamPolicy", "compute.zones.get", "compute.zones.list", "consumerprocurement.accounts.create", "consumerprocurement.accounts.delete", "consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.entitlements.get", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.create", "consumerprocurement.freeTrials.get", "consumerprocurement.freeTrials.list", "consumerprocurement.orders.cancel", "consumerprocurement.orders.get", "consumerprocurement.orders.list", "consumerprocurement.orders.modify", "consumerprocurement.orders.place", "container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.approve", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusterRoles.update", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.create", "container.roleBindings.delete", "container.roleBindings.get", "container.roleBindings.list", "container.roleBindings.update", "container.roles.bind", "container.roles.create", "container.roles.delete", "container.roles.get", "container.roles.list", "container.roles.update", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "containeranalysis.notes.attachOccurrence", "containeranalysis.notes.create", "containeranalysis.notes.delete", "containeranalysis.notes.get", "containeranalysis.notes.getIamPolicy", "containeranalysis.notes.list", "containeranalysis.notes.listOccurrences", "containeranalysis.notes.setIamPolicy", "containeranalysis.notes.update", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.getIamPolicy", "containeranalysis.occurrences.list", "containeranalysis.occurrences.setIamPolicy", "containeranalysis.occurrences.update", "datacatalog.categories.getIamPolicy", "datacatalog.categories.setIamPolicy", "datacatalog.entries.create", "datacatalog.entries.delete", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entries.setIamPolicy", "datacatalog.entries.update", "datacatalog.entries.updateTag", "datacatalog.entryGroups.create", "datacatalog.entryGroups.delete", "datacatalog.entryGroups.get", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.entryGroups.setIamPolicy", "datacatalog.entryGroups.update", "datacatalog.tagTemplates.create", "datacatalog.tagTemplates.delete", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.setIamPolicy", "datacatalog.tagTemplates.update", "datacatalog.tagTemplates.use", "datacatalog.taxonomies.create", "datacatalog.taxonomies.delete", "datacatalog.taxonomies.get", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "datacatalog.taxonomies.setIamPolicy", "datacatalog.taxonomies.update", "dataflow.jobs.cancel", "dataflow.jobs.create", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.jobs.snapshot", "dataflow.jobs.updateContents", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.delete", "dataflow.snapshots.get", "dataflow.snapshots.list", "datafusion.instances.create", "datafusion.instances.delete", "datafusion.instances.get", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.restart", "datafusion.instances.runtime", "datafusion.instances.setIamPolicy", "datafusion.instances.update", "datafusion.instances.upgrade", "datafusion.locations.get", "datafusion.locations.list", "datafusion.operations.cancel", "datafusion.operations.get", "datafusion.operations.list", "datalabeling.annotateddatasets.delete", "datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.label", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.create", "datalabeling.annotationspecsets.delete", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.create", "datalabeling.datasets.delete", "datalabeling.datasets.export", "datalabeling.datasets.get", "datalabeling.datasets.import", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.create", "datalabeling.instructions.delete", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.cancel", "datalabeling.operations.get", "datalabeling.operations.list", "datamigration.connectionprofiles.create", "datamigration.connectionprofiles.delete", "datamigration.connectionprofiles.get", "datamigration.connectionprofiles.getIamPolicy", "datamigration.connectionprofiles.list", "datamigration.connectionprofiles.setIamPolicy", "datamigration.connectionprofiles.update", "datamigration.locations.get", "datamigration.locations.list", "datamigration.migrationjobs.create", "datamigration.migrationjobs.delete", "datamigration.migrationjobs.generateSshScript", "datamigration.migrationjobs.get", "datamigration.migrationjobs.getIamPolicy", "datamigration.migrationjobs.list", "datamigration.migrationjobs.promote", "datamigration.migrationjobs.restart", "datamigration.migrationjobs.resume", "datamigration.migrationjobs.setIamPolicy", "datamigration.migrationjobs.start", "datamigration.migrationjobs.stop", "datamigration.migrationjobs.update", "datamigration.migrationjobs.verify", "datamigration.operations.cancel", "datamigration.operations.delete", "datamigration.operations.get", "datamigration.operations.list", "dataprep.projects.use", "dataproc.agents.create", "dataproc.agents.delete", "dataproc.agents.get", "dataproc.agents.list", "dataproc.agents.update", "dataproc.autoscalingPolicies.create", "dataproc.autoscalingPolicies.delete", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.getIamPolicy", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.setIamPolicy", "dataproc.autoscalingPolicies.update", "dataproc.autoscalingPolicies.use", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.clusters.setIamPolicy", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.jobs.setIamPolicy", "dataproc.jobs.update", "dataproc.operations.cancel", "dataproc.operations.delete", "dataproc.operations.get", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.operations.setIamPolicy", "dataproc.tasks.lease", "dataproc.tasks.listInvalidatedLeases", "dataproc.tasks.reportStatus", "dataproc.workflowTemplates.create", "dataproc.workflowTemplates.delete", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.instantiate", "dataproc.workflowTemplates.instantiateInline", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.setIamPolicy", "dataproc.workflowTemplates.update", "dataprocessing.featurecontrols.list", "dataprocessing.featurecontrols.update", "dataprocessing.groupcontrols.list", "dataprocessing.groupcontrols.update", "datastore.databases.create", "datastore.databases.delete", "datastore.databases.export", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.import", "datastore.databases.list", "datastore.databases.setIamPolicy", "datastore.databases.update", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.create", "datastore.indexes.delete", "datastore.indexes.get", "datastore.indexes.list", "datastore.indexes.update", "datastore.locations.get", "datastore.locations.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.namespaces.setIamPolicy", "datastore.operations.cancel", "datastore.operations.delete", "datastore.operations.get", "datastore.operations.list", "datastore.statistics.get", "datastore.statistics.list", "deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.deployments.cancelPreview", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.getIamPolicy", "deploymentmanager.deployments.list", "deploymentmanager.deployments.setIamPolicy", "deploymentmanager.deployments.stop", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.typeProviders.update", "deploymentmanager.types.create", "deploymentmanager.types.delete", "deploymentmanager.types.get", "deploymentmanager.types.list", "deploymentmanager.types.update", "dialogflow.agents.create", "dialogflow.agents.delete", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.import", "dialogflow.agents.list", "dialogflow.agents.restore", "dialogflow.agents.search", "dialogflow.agents.train", "dialogflow.agents.update", "dialogflow.agents.validate", "dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.documents.create", "dialogflow.documents.delete", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.create", "dialogflow.entityTypes.createEntity", "dialogflow.entityTypes.delete", "dialogflow.entityTypes.deleteEntity", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.entityTypes.update", "dialogflow.entityTypes.updateEntity", "dialogflow.environments.create", "dialogflow.environments.delete", "dialogflow.environments.get", "dialogflow.environments.getHistory", "dialogflow.environments.list", "dialogflow.environments.lookupHistory", "dialogflow.environments.update", "dialogflow.flows.create", "dialogflow.flows.delete", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.flows.train", "dialogflow.flows.update", "dialogflow.flows.validate", "dialogflow.fulfillments.get", "dialogflow.fulfillments.update", "dialogflow.intents.create", "dialogflow.intents.delete", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.intents.update", "dialogflow.knowledgeBases.create", "dialogflow.knowledgeBases.delete", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.create", "dialogflow.pages.delete", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.pages.update", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dialogflow.transitionRouteGroups.create", "dialogflow.transitionRouteGroups.delete", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.transitionRouteGroups.update", "dialogflow.versions.create", "dialogflow.versions.delete", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.versions.load", "dialogflow.versions.update", "dialogflow.webhooks.create", "dialogflow.webhooks.delete", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "dialogflow.webhooks.update", "dlp.analyzeRiskTemplates.create", "dlp.analyzeRiskTemplates.delete", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.analyzeRiskTemplates.update", "dlp.deidentifyTemplates.create", "dlp.deidentifyTemplates.delete", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.deidentifyTemplates.update", "dlp.inspectFindings.list", "dlp.inspectTemplates.create", "dlp.inspectTemplates.delete", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.inspectTemplates.update", "dlp.jobTriggers.create", "dlp.jobTriggers.delete", "dlp.jobTriggers.get", "dlp.jobTriggers.hybridInspect", "dlp.jobTriggers.list", "dlp.jobTriggers.update", "dlp.jobs.cancel", "dlp.jobs.create", "dlp.jobs.delete", "dlp.jobs.get", "dlp.jobs.hybridInspect", "dlp.jobs.list", "dlp.kms.encrypt", "dlp.storedInfoTypes.create", "dlp.storedInfoTypes.delete", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list", "dlp.storedInfoTypes.update", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.create", "dns.managedZones.delete", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSPolicy", "dns.networks.bindPrivateDNSZone", "dns.networks.targetWithPeeringZone", "dns.policies.create", "dns.policies.delete", "dns.policies.get", "dns.policies.getIamPolicy", "dns.policies.list", "dns.policies.setIamPolicy", "dns.policies.update", "dns.projects.get", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "documentai.humanReviewConfigs.get", "documentai.humanReviewConfigs.review", "documentai.humanReviewConfigs.update", "documentai.labelerPools.create", "documentai.labelerPools.delete", "documentai.labelerPools.get", "documentai.labelerPools.list", "documentai.labelerPools.update", "documentai.locations.get", "documentai.locations.list", "documentai.operations.getLegacy", "documentai.processorTypes.list", "documentai.processorVersions.create", "documentai.processorVersions.delete", "documentai.processorVersions.get", "documentai.processorVersions.list", "documentai.processors.create", "documentai.processors.delete", "documentai.processors.fetchHumanReviewDetails", "documentai.processors.get", "documentai.processors.list", "documentai.processors.processBatch", "documentai.processors.processOnline", "documentai.processors.update", "domains.locations.get", "domains.locations.list", "domains.operations.cancel", "domains.operations.get", "domains.operations.list", "domains.registrations.configureContact", "domains.registrations.configureDns", "domains.registrations.configureManagement", "domains.registrations.create", "domains.registrations.delete", "domains.registrations.get", "domains.registrations.getIamPolicy", "domains.registrations.list", "domains.registrations.setIamPolicy", "domains.registrations.update", "earlyaccesscenter.campaigns.enroll", "earlyaccesscenter.campaigns.get", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.get", "earlyaccesscenter.customerWhitelists.list", "endpoints.portals.attachCustomDomain", "endpoints.portals.detachCustomDomain", "endpoints.portals.listCustomDomains", "endpoints.portals.update", "errorreporting.applications.list", "errorreporting.errorEvents.create", "errorreporting.errorEvents.delete", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groupMetadata.update", "errorreporting.groups.list", "essentialcontacts.contacts.create", "essentialcontacts.contacts.delete", "essentialcontacts.contacts.get", "essentialcontacts.contacts.list", "essentialcontacts.contacts.update", "eventarc.events.receiveAuditLogWritten", "eventarc.locations.get", "eventarc.locations.list", "eventarc.operations.cancel", "eventarc.operations.delete", "eventarc.operations.get", "eventarc.operations.list", "eventarc.triggers.create", "eventarc.triggers.delete", "eventarc.triggers.get", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "eventarc.triggers.setIamPolicy", "eventarc.triggers.undelete", "eventarc.triggers.update", "file.backups.create", "file.backups.delete", "file.backups.get", "file.backups.list", "file.backups.update", "file.instances.create", "file.instances.delete", "file.instances.get", "file.instances.list", "file.instances.restore", "file.instances.update", "file.locations.get", "file.locations.list", "file.operations.cancel", "file.operations.delete", "file.operations.get", "file.operations.list", "firebase.billingPlans.get", "firebase.billingPlans.update", "firebase.clients.create", "firebase.clients.delete", "firebase.clients.get", "firebase.links.create", "firebase.links.delete", "firebase.links.list", "firebase.links.update", "firebase.projects.delete", "firebase.projects.get", "firebase.projects.update", "firebaseabt.experimentresults.get", "firebaseabt.experiments.create", "firebaseabt.experiments.delete", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.experiments.update", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "firebasecrash.issues.update", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.config.update", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.issues.update", "firebasecrashlytics.sessions.get", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.destinations.update", "firebasedynamiclinks.domains.create", "firebasedynamiclinks.domains.delete", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.domains.update", "firebasedynamiclinks.links.create", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.links.update", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.create", "firebaseextensions.configs.delete", "firebaseextensions.configs.list", "firebaseextensions.configs.update", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "firebaseinappmessaging.campaigns.create", "firebaseinappmessaging.campaigns.delete", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseinappmessaging.campaigns.update", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "firebaseperformance.config.create", "firebaseperformance.config.delete", "firebaseperformance.config.update", "firebaseperformance.data.get", "firebasepredictions.predictions.create", "firebasepredictions.predictions.delete", "firebasepredictions.predictions.list", "firebasepredictions.predictions.update", "firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "firebaserules.rulesets.test", "gameservices.gameServerClusters.create", "gameservices.gameServerClusters.delete", "gameservices.gameServerClusters.get", "gameservices.gameServerClusters.list", "gameservices.gameServerClusters.update", "gameservices.gameServerConfigs.create", "gameservices.gameServerConfigs.delete", "gameservices.gameServerConfigs.get", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.create", "gameservices.gameServerDeployments.delete", "gameservices.gameServerDeployments.get", "gameservices.gameServerDeployments.list", "gameservices.gameServerDeployments.rollout", "gameservices.gameServerDeployments.update", "gameservices.locations.get", "gameservices.locations.list", "gameservices.operations.cancel", "gameservices.operations.delete", "gameservices.operations.get", "gameservices.operations.list", "gameservices.realms.create", "gameservices.realms.delete", "gameservices.realms.get", "gameservices.realms.list", "gameservices.realms.update", "gcp.redisenterprise.com/databases.create", "gcp.redisenterprise.com/databases.delete", "gcp.redisenterprise.com/databases.get", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/databases.update", "gcp.redisenterprise.com/subscriptions.create", "gcp.redisenterprise.com/subscriptions.delete", "gcp.redisenterprise.com/subscriptions.get", "gcp.redisenterprise.com/subscriptions.list", "gcp.redisenterprise.com/subscriptions.update", "genomics.datasets.create", "genomics.datasets.delete", "genomics.datasets.get", "genomics.datasets.getIamPolicy", "genomics.datasets.list", "genomics.datasets.setIamPolicy", "genomics.datasets.update", "genomics.operations.cancel", "genomics.operations.create", "genomics.operations.get", "genomics.operations.list", "gkehub.endpoints.connect", "gkehub.features.create", "gkehub.features.delete", "gkehub.features.get", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.features.setIamPolicy", "gkehub.features.update", "gkehub.gateway.delete", "gkehub.gateway.get", "gkehub.gateway.getIamPolicy", "gkehub.gateway.patch", "gkehub.gateway.post", "gkehub.gateway.put", "gkehub.gateway.setIamPolicy", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.create", "gkehub.memberships.delete", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.memberships.setIamPolicy", "gkehub.memberships.update", "gkehub.operations.cancel", "gkehub.operations.delete", "gkehub.operations.get", "gkehub.operations.list", "healthcare.annotationStores.create", "healthcare.annotationStores.delete", "healthcare.annotationStores.evaluate", "healthcare.annotationStores.export", "healthcare.annotationStores.get", "healthcare.annotationStores.getIamPolicy", "healthcare.annotationStores.import", "healthcare.annotationStores.list", "healthcare.annotationStores.setIamPolicy", "healthcare.annotationStores.update", "healthcare.annotations.create", "healthcare.annotations.delete", "healthcare.annotations.get", "healthcare.annotations.list", "healthcare.annotations.update", "healthcare.attributeDefinitions.create", "healthcare.attributeDefinitions.delete", "healthcare.attributeDefinitions.get", "healthcare.attributeDefinitions.list", "healthcare.attributeDefinitions.update", "healthcare.consentArtifacts.create", "healthcare.consentArtifacts.delete", "healthcare.consentArtifacts.get", "healthcare.consentArtifacts.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.create", "healthcare.consentStores.delete", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.getIamPolicy", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.consentStores.setIamPolicy", "healthcare.consentStores.update", "healthcare.consents.activate", "healthcare.consents.create", "healthcare.consents.delete", "healthcare.consents.get", "healthcare.consents.list", "healthcare.consents.reject", "healthcare.consents.revoke", "healthcare.consents.update", "healthcare.datasets.create", "healthcare.datasets.deidentify", "healthcare.datasets.delete", "healthcare.datasets.get", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.datasets.setIamPolicy", "healthcare.datasets.update", "healthcare.dicomStores.create", "healthcare.dicomStores.deidentify", "healthcare.dicomStores.delete", "healthcare.dicomStores.dicomWebDelete", "healthcare.dicomStores.dicomWebRead", "healthcare.dicomStores.dicomWebWrite", "healthcare.dicomStores.export", "healthcare.dicomStores.get", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.import", "healthcare.dicomStores.list", "healthcare.dicomStores.setIamPolicy", "healthcare.dicomStores.update", "healthcare.fhirResources.create", "healthcare.fhirResources.delete", "healthcare.fhirResources.get", "healthcare.fhirResources.patch", "healthcare.fhirResources.purge", "healthcare.fhirResources.translateConceptMap", "healthcare.fhirResources.update", "healthcare.fhirStores.create", "healthcare.fhirStores.deidentify", "healthcare.fhirStores.delete", "healthcare.fhirStores.executeBundle", "healthcare.fhirStores.export", "healthcare.fhirStores.get", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.import", "healthcare.fhirStores.list", "healthcare.fhirStores.searchResources", "healthcare.fhirStores.setIamPolicy", "healthcare.fhirStores.update", "healthcare.hl7V2Messages.create", "healthcare.hl7V2Messages.delete", "healthcare.hl7V2Messages.get", "healthcare.hl7V2Messages.ingest", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Messages.update", "healthcare.hl7V2Stores.create", "healthcare.hl7V2Stores.delete", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.import", "healthcare.hl7V2Stores.list", "healthcare.hl7V2Stores.setIamPolicy", "healthcare.hl7V2Stores.update", "healthcare.locations.get", "healthcare.locations.list", "healthcare.nlpservice.analyzeEntities", "healthcare.operations.cancel", "healthcare.operations.get", "healthcare.operations.list", "healthcare.userDataMappings.archive", "healthcare.userDataMappings.create", "healthcare.userDataMappings.delete", "healthcare.userDataMappings.get", "healthcare.userDataMappings.list", "healthcare.userDataMappings.update", "iam.googleapis.com/workloadIdentityPoolProviders.create", "iam.googleapis.com/workloadIdentityPoolProviders.delete", "iam.googleapis.com/workloadIdentityPoolProviders.get", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPoolProviders.undelete", "iam.googleapis.com/workloadIdentityPoolProviders.update", "iam.googleapis.com/workloadIdentityPools.create", "iam.googleapis.com/workloadIdentityPools.delete", "iam.googleapis.com/workloadIdentityPools.get", "iam.googleapis.com/workloadIdentityPools.list", "iam.googleapis.com/workloadIdentityPools.undelete", "iam.googleapis.com/workloadIdentityPools.update", "iam.roles.create", "iam.roles.delete", "iam.roles.get", "iam.roles.list", "iam.roles.undelete", "iam.roles.update", "iam.serviceAccountKeys.create", "iam.serviceAccountKeys.delete", "iam.serviceAccountKeys.get", "iam.serviceAccountKeys.list", "iam.serviceAccounts.actAs", "iam.serviceAccounts.create", "iam.serviceAccounts.delete", "iam.serviceAccounts.disable", "iam.serviceAccounts.enable", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iam.serviceAccounts.setIamPolicy", "iam.serviceAccounts.undelete", "iam.serviceAccounts.update", "iap.projects.getSettings", "iap.projects.updateSettings", "iap.tunnel.getIamPolicy", "iap.tunnel.setIamPolicy", "iap.tunnelInstances.accessViaIAP", "iap.tunnelInstances.getIamPolicy", "iap.tunnelInstances.setIamPolicy", "iap.tunnelZones.getIamPolicy", "iap.tunnelZones.setIamPolicy", "iap.web.getIamPolicy", "iap.web.getSettings", "iap.web.setIamPolicy", "iap.web.updateSettings", "iap.webServiceVersions.getIamPolicy", "iap.webServiceVersions.getSettings", "iap.webServiceVersions.setIamPolicy", "iap.webServiceVersions.updateSettings", "iap.webServices.getIamPolicy", "iap.webServices.getSettings", "iap.webServices.setIamPolicy", "iap.webServices.updateSettings", "iap.webTypes.getIamPolicy", "iap.webTypes.getSettings", "iap.webTypes.setIamPolicy", "iap.webTypes.updateSettings", "identityplatform.workloadPoolProviders.create", "identityplatform.workloadPoolProviders.delete", "identityplatform.workloadPoolProviders.get", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPoolProviders.undelete", "identityplatform.workloadPoolProviders.update", "identityplatform.workloadPools.create", "identityplatform.workloadPools.delete", "identityplatform.workloadPools.get", "identityplatform.workloadPools.list", "identityplatform.workloadPools.undelete", "identityplatform.workloadPools.update", "lifesciences.operations.cancel", "lifesciences.operations.get", "lifesciences.operations.list", "lifesciences.workflows.run", "logging.buckets.create", "logging.buckets.delete", "logging.buckets.get", "logging.buckets.list", "logging.buckets.undelete", "logging.buckets.update", "logging.cmekSettings.get", "logging.cmekSettings.update", "logging.exclusions.create", "logging.exclusions.delete", "logging.exclusions.get", "logging.exclusions.list", "logging.exclusions.update", "logging.locations.get", "logging.locations.list", "logging.logEntries.create", "logging.logEntries.download", "logging.logEntries.list", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.delete", "logging.logs.list", "logging.privateLogEntries.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.create", "logging.sinks.delete", "logging.sinks.get", "logging.sinks.list", "logging.sinks.update", "logging.usage.get", "logging.views.access", "managedidentities.domains.attachTrust", "managedidentities.domains.create", "managedidentities.domains.delete", "managedidentities.domains.detachTrust", "managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.domains.reconfigureTrust", "managedidentities.domains.resetpassword", "managedidentities.domains.setIamPolicy", "managedidentities.domains.update", "managedidentities.domains.validateTrust", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.cancel", "managedidentities.operations.delete", "managedidentities.operations.get", "managedidentities.operations.list", "memcache.instances.applyParameters", "memcache.instances.create", "memcache.instances.delete", "memcache.instances.get", "memcache.instances.list", "memcache.instances.update", "memcache.instances.updateParameters", "memcache.locations.get", "memcache.locations.list", "memcache.operations.cancel", "memcache.operations.delete", "memcache.operations.get", "memcache.operations.list", "ml.jobs.cancel", "ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.jobs.setIamPolicy", "ml.jobs.update", "ml.locations.get", "ml.locations.list", "ml.models.create", "ml.models.delete", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.models.setIamPolicy", "ml.models.update", "ml.operations.cancel", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.create", "ml.studies.delete", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.studies.setIamPolicy", "ml.trials.create", "ml.trials.delete", "ml.trials.get", "ml.trials.list", "ml.trials.update", "ml.versions.create", "ml.versions.delete", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "ml.versions.update", "monitoring.alertPolicies.create", "monitoring.alertPolicies.delete", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.alertPolicies.update", "monitoring.dashboards.create", "monitoring.dashboards.delete", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.dashboards.update", "monitoring.groups.create", "monitoring.groups.delete", "monitoring.groups.get", "monitoring.groups.list", "monitoring.groups.update", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.delete", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.create", "monitoring.notificationChannels.delete", "monitoring.notificationChannels.get", "monitoring.notificationChannels.getVerificationCode", "monitoring.notificationChannels.list", "monitoring.notificationChannels.sendVerificationCode", "monitoring.notificationChannels.update", "monitoring.notificationChannels.verify", "monitoring.publicWidgets.create", "monitoring.publicWidgets.delete", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.publicWidgets.update", "monitoring.services.create", "monitoring.services.delete", "monitoring.services.get", "monitoring.services.list", "monitoring.services.update", "monitoring.slos.create", "monitoring.slos.delete", "monitoring.slos.get", "monitoring.slos.list", "monitoring.slos.update", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.create", "monitoring.uptimeCheckConfigs.delete", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "monitoring.uptimeCheckConfigs.update", "networkmanagement.connectivitytests.create", "networkmanagement.connectivitytests.delete", "networkmanagement.connectivitytests.get", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.connectivitytests.rerun", "networkmanagement.connectivitytests.setIamPolicy", "networkmanagement.connectivitytests.update", "networkmanagement.locations.get", "networkmanagement.locations.list", "networkmanagement.operations.get", "networkmanagement.operations.list", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "notebooks.environments.create", "notebooks.environments.delete", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.environments.setIamPolicy", "notebooks.instances.checkUpgradability", "notebooks.instances.create", "notebooks.instances.delete", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.reset", "notebooks.instances.setAccelerator", "notebooks.instances.setIamPolicy", "notebooks.instances.setLabels", "notebooks.instances.setMachineType", "notebooks.instances.start", "notebooks.instances.stop", "notebooks.instances.update", "notebooks.instances.updateConfig", "notebooks.instances.upgrade", "notebooks.instances.use", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.cancel", "notebooks.operations.delete", "notebooks.operations.get", "notebooks.operations.list", "oauthconfig.clientpolicy.get", "oauthconfig.testusers.get", "oauthconfig.testusers.update", "oauthconfig.verification.get", "oauthconfig.verification.submit", "oauthconfig.verification.update", "opsconfigmonitoring.resourceMetadata.write", "orgpolicy.policy.get", "osconfig.guestPolicies.create", "osconfig.guestPolicies.delete", "osconfig.guestPolicies.get", "osconfig.guestPolicies.list", "osconfig.guestPolicies.update", "osconfig.patchDeployments.create", "osconfig.patchDeployments.delete", "osconfig.patchDeployments.execute", "osconfig.patchDeployments.get", "osconfig.patchDeployments.list", "osconfig.patchDeployments.update", "osconfig.patchJobs.exec", "osconfig.patchJobs.get", "osconfig.patchJobs.list", "privateca.certificateAuthorities.create", "privateca.certificateAuthorities.delete", "privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateAuthorities.setIamPolicy", "privateca.certificateAuthorities.update", "privateca.certificateRevocationLists.create", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificateRevocationLists.setIamPolicy", "privateca.certificateRevocationLists.update", "privateca.certificates.create", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.certificates.setIamPolicy", "privateca.certificates.update", "privateca.locations.get", "privateca.locations.list", "privateca.operations.cancel", "privateca.operations.delete", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.create", "privateca.reusableConfigs.delete", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "privateca.reusableConfigs.setIamPolicy", "privateca.reusableConfigs.update", "proximitybeacon.attachments.create", "proximitybeacon.attachments.delete", "proximitybeacon.attachments.get", "proximitybeacon.attachments.list", "proximitybeacon.beacons.attach", "proximitybeacon.beacons.create", "proximitybeacon.beacons.get", "proximitybeacon.beacons.getIamPolicy", "proximitybeacon.beacons.list", "proximitybeacon.beacons.setIamPolicy", "proximitybeacon.beacons.update", "proximitybeacon.namespaces.create", "proximitybeacon.namespaces.delete", "proximitybeacon.namespaces.get", "proximitybeacon.namespaces.getIamPolicy", "proximitybeacon.namespaces.list", "proximitybeacon.namespaces.setIamPolicy", "proximitybeacon.namespaces.update", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.setIamPolicy", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.setIamPolicy", "pubsub.topics.update", "pubsub.topics.updateTag", "pubsublite.subscriptions.create", "pubsublite.subscriptions.delete", "pubsublite.subscriptions.get", "pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.list", "pubsublite.subscriptions.setCursor", "pubsublite.subscriptions.subscribe", "pubsublite.subscriptions.update", "pubsublite.topics.computeMessageStats", "pubsublite.topics.create", "pubsublite.topics.delete", "pubsublite.topics.get", "pubsublite.topics.getPartitions", "pubsublite.topics.list", "pubsublite.topics.listSubscriptions", "pubsublite.topics.publish", "pubsublite.topics.subscribe", "pubsublite.topics.update", "recaptchaenterprise.assessments.annotate", "recaptchaenterprise.assessments.create", "recaptchaenterprise.keys.create", "recaptchaenterprise.keys.delete", "recaptchaenterprise.keys.get", "recaptchaenterprise.keys.list", "recaptchaenterprise.keys.update", "recaptchaenterprise.metrics.get", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.commitmentUtilizationInsights.update", "recommender.computeDiskIdleResourceInsights.get", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceInsights.update", "recommender.computeDiskIdleResourceRecommendations.get", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeDiskIdleResourceRecommendations.update", "recommender.computeFirewallInsights.get", "recommender.computeFirewallInsights.list", "recommender.computeFirewallInsights.update", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update", "recommender.computeInstanceIdleResourceRecommendations.get", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.update", "recommender.computeInstanceMachineTypeRecommendations.get", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.update", "recommender.iamPolicyInsights.get", "recommender.iamPolicyInsights.list", "recommender.iamPolicyInsights.update", "recommender.iamPolicyRecommendations.get", "recommender.iamPolicyRecommendations.list", "recommender.iamPolicyRecommendations.update", "recommender.iamServiceAccountInsights.get", "recommender.iamServiceAccountInsights.list", "recommender.iamServiceAccountInsights.update", "recommender.locations.get", "recommender.locations.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "recommender.usageCommitmentRecommendations.update", "redis.instances.create", "redis.instances.delete", "redis.instances.export", "redis.instances.failover", "redis.instances.get", "redis.instances.getAuthString", "redis.instances.import", "redis.instances.list", "redis.instances.update", "redis.instances.updateAuth", "redis.instances.upgrade", "redis.locations.get", "redis.locations.list", "redis.operations.cancel", "redis.operations.delete", "redis.operations.get", "redis.operations.list", "remotebuildexecution.actions.create", "remotebuildexecution.actions.delete", "remotebuildexecution.actions.get", "remotebuildexecution.actions.update", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.botsessions.create", "remotebuildexecution.botsessions.update", "remotebuildexecution.instances.create", "remotebuildexecution.instances.delete", "remotebuildexecution.instances.get", "remotebuildexecution.instances.list", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.get", "remotebuildexecution.logstreams.update", "remotebuildexecution.workerpools.create", "remotebuildexecution.workerpools.delete", "remotebuildexecution.workerpools.get", "remotebuildexecution.workerpools.list", "remotebuildexecution.workerpools.update", "resourcemanager.projects.createBillingAssignment", "resourcemanager.projects.delete", "resourcemanager.projects.deleteBillingAssignment", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "resourcemanager.projects.move", "resourcemanager.projects.setIamPolicy", "resourcemanager.projects.undelete", "resourcemanager.projects.update", "resourcemanager.projects.updateLiens", "run.configurations.get", "run.configurations.list", "run.locations.list", "run.revisions.delete", "run.revisions.get", "run.revisions.list", "run.routes.get", "run.routes.invoke", "run.routes.list", "run.services.create", "run.services.delete", "run.services.get", "run.services.getIamPolicy", "run.services.list", "run.services.setIamPolicy", "run.services.update", "runtimeconfig.configs.create", "runtimeconfig.configs.delete", "runtimeconfig.configs.get", "runtimeconfig.configs.getIamPolicy", "runtimeconfig.configs.list", "runtimeconfig.configs.setIamPolicy", "runtimeconfig.configs.update", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.create", "runtimeconfig.variables.delete", "runtimeconfig.variables.get", "runtimeconfig.variables.getIamPolicy", "runtimeconfig.variables.list", "runtimeconfig.variables.setIamPolicy", "runtimeconfig.variables.update", "runtimeconfig.variables.watch", "runtimeconfig.waiters.create", "runtimeconfig.waiters.delete", "runtimeconfig.waiters.get", "runtimeconfig.waiters.getIamPolicy", "runtimeconfig.waiters.list", "runtimeconfig.waiters.setIamPolicy", "runtimeconfig.waiters.update", "secretmanager.locations.get", "secretmanager.locations.list", "secretmanager.secrets.create", "secretmanager.secrets.delete", "secretmanager.secrets.get", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.secrets.setIamPolicy", "secretmanager.secrets.update", "secretmanager.versions.access", "secretmanager.versions.add", "secretmanager.versions.destroy", "secretmanager.versions.disable", "secretmanager.versions.enable", "secretmanager.versions.get", "secretmanager.versions.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.containerthreatdetectionsettings.update", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.update", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.organizationsettings.update", "securitycenter.securitycentersettings.get", "securitycenter.securitycentersettings.update", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.securityhealthanalyticssettings.update", "securitycenter.sources.get", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "securitycenter.sources.setIamPolicy", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "securitycenter.websecurityscannersettings.update", "servicebroker.bindingoperations.get", "servicebroker.bindingoperations.list", "servicebroker.bindings.create", "servicebroker.bindings.delete", "servicebroker.bindings.get", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.bindings.setIamPolicy", "servicebroker.catalogs.create", "servicebroker.catalogs.delete", "servicebroker.catalogs.get", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.catalogs.setIamPolicy", "servicebroker.catalogs.validate", "servicebroker.instanceoperations.get", "servicebroker.instanceoperations.list", "servicebroker.instances.create", "servicebroker.instances.delete", "servicebroker.instances.get", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "servicebroker.instances.setIamPolicy", "servicebroker.instances.update", "serviceconsumermanagement.consumers.get", "serviceconsumermanagement.quota.get", "serviceconsumermanagement.quota.update", "serviceconsumermanagement.tenancyu.addResource", "serviceconsumermanagement.tenancyu.create", "serviceconsumermanagement.tenancyu.delete", "serviceconsumermanagement.tenancyu.list", "serviceconsumermanagement.tenancyu.removeResource", "servicedirectory.endpoints.create", "servicedirectory.endpoints.delete", "servicedirectory.endpoints.get", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.endpoints.setIamPolicy", "servicedirectory.endpoints.update", "servicedirectory.locations.get", "servicedirectory.locations.list", "servicedirectory.namespaces.associatePrivateZone", "servicedirectory.namespaces.create", "servicedirectory.namespaces.delete", "servicedirectory.namespaces.get", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.namespaces.setIamPolicy", "servicedirectory.namespaces.update", "servicedirectory.services.create", "servicedirectory.services.delete", "servicedirectory.services.get", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.resolve", "servicedirectory.services.setIamPolicy", "servicedirectory.services.update", "servicemanagement.consumerSettings.get", "servicemanagement.consumerSettings.getIamPolicy", "servicemanagement.consumerSettings.list", "servicemanagement.consumerSettings.setIamPolicy", "servicemanagement.consumerSettings.update", "servicemanagement.services.bind", "servicemanagement.services.check", "servicemanagement.services.create", "servicemanagement.services.delete", "servicemanagement.services.get", "servicemanagement.services.getIamPolicy", "servicemanagement.services.list", "servicemanagement.services.quota", "servicemanagement.services.report", "servicemanagement.services.setIamPolicy", "servicemanagement.services.update", "servicenetworking.operations.cancel", "servicenetworking.operations.delete", "servicenetworking.operations.get", "servicenetworking.operations.list", "servicenetworking.services.addPeering", "servicenetworking.services.addSubnetwork", "servicenetworking.services.get", "serviceusage.apiKeys.regenerate", "serviceusage.apiKeys.revert", "serviceusage.operations.cancel", "serviceusage.operations.delete", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.quotas.update", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use", "source.repos.create", "source.repos.delete", "source.repos.get", "source.repos.getIamPolicy", "source.repos.getProjectConfig", "source.repos.list", "source.repos.setIamPolicy", "source.repos.update", "source.repos.updateProjectConfig", "source.repos.updateRepoConfig", "spanner.backupOperations.cancel", "spanner.backupOperations.get", "spanner.backupOperations.list", "spanner.backups.create", "spanner.backups.delete", "spanner.backups.get", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.backups.restoreDatabase", "spanner.backups.setIamPolicy", "spanner.backups.update", "spanner.databaseOperations.cancel", "spanner.databaseOperations.delete", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginPartitionedDmlTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.create", "spanner.databases.createBackup", "spanner.databases.drop", "spanner.databases.get", "spanner.databases.getDdl", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.databases.setIamPolicy", "spanner.databases.update", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instanceOperations.cancel", "spanner.instanceOperations.delete", "spanner.instanceOperations.get", "spanner.instanceOperations.list", "spanner.instances.create", "spanner.instances.delete", "spanner.instances.get", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.instances.setIamPolicy", "spanner.instances.update", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list", "stackdriver.projects.edit", "stackdriver.projects.get", "stackdriver.resourceMetadata.write", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.list", "storage.hmacKeys.create", "storage.hmacKeys.delete", "storage.hmacKeys.get", "storage.hmacKeys.list", "storage.hmacKeys.update", "storagetransfer.jobs.create", "storagetransfer.jobs.delete", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.jobs.update", "storagetransfer.operations.cancel", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.operations.pause", "storagetransfer.operations.resume", "storagetransfer.projects.getServiceAccount", "subscribewithgoogledeveloper.tools.get", "threatdetection.detectorSettings.clear", "threatdetection.detectorSettings.get", "threatdetection.detectorSettings.update", "threatdetection.sinkSettings.get", "threatdetection.sinkSettings.update", "threatdetection.sourceSettings.get", "threatdetection.sourceSettings.update", "tpu.acceleratortypes.get", "tpu.acceleratortypes.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.create", "tpu.nodes.delete", "tpu.nodes.get", "tpu.nodes.list", "tpu.nodes.reimage", "tpu.nodes.reset", "tpu.nodes.start", "tpu.nodes.stop", "tpu.operations.get", "tpu.operations.list", "tpu.tensorflowversions.get", "tpu.tensorflowversions.list", "trafficdirector.networks.getConfigs", "trafficdirector.networks.reportMetrics", "transcoder.jobTemplates.create", "transcoder.jobTemplates.delete", "transcoder.jobTemplates.get", "transcoder.jobTemplates.list", "transcoder.jobs.create", "transcoder.jobs.delete", "transcoder.jobs.get", "transcoder.jobs.list", "vmmigration.deployments.create", "vmmigration.deployments.get", "vmmigration.deployments.list", "vmwareengine.services.use", "vmwareengine.services.view", "vpcaccess.connectors.create", "vpcaccess.connectors.delete", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.connectors.use", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list", "workflows.executions.cancel", "workflows.executions.create", "workflows.executions.get", "workflows.executions.list", "workflows.locations.get", "workflows.locations.list", "workflows.operations.cancel", "workflows.operations.get", "workflows.operations.list", "workflows.workflows.create", "workflows.workflows.delete", "workflows.workflows.get", "workflows.workflows.getIamPolicy", "workflows.workflows.list", "workflows.workflows.setIamPolicy", "workflows.workflows.update"], "roles/accessapproval.approver": ["accessapproval.requests.approve", "accessapproval.requests.dismiss", "accessapproval.requests.get", "accessapproval.requests.list", "accessapproval.settings.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/editor": ["accessapproval.requests.get", "accessapproval.requests.list", "accessapproval.settings.get", "accesscontextmanager.accessLevels.create", "accesscontextmanager.accessLevels.delete", "accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessLevels.replaceAll", "accesscontextmanager.accessLevels.update", "accesscontextmanager.accessPolicies.create", "accesscontextmanager.accessPolicies.delete", "accesscontextmanager.accessPolicies.get", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessPolicies.update", "accesscontextmanager.accessZones.create", "accesscontextmanager.accessZones.delete", "accesscontextmanager.accessZones.get", "accesscontextmanager.accessZones.list", "accesscontextmanager.accessZones.update", "accesscontextmanager.gcpUserAccessBindings.create", "accesscontextmanager.gcpUserAccessBindings.delete", "accesscontextmanager.gcpUserAccessBindings.get", "accesscontextmanager.gcpUserAccessBindings.list", "accesscontextmanager.gcpUserAccessBindings.update", "accesscontextmanager.policies.create", "accesscontextmanager.policies.delete", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.policies.update", "accesscontextmanager.servicePerimeters.commit", "accesscontextmanager.servicePerimeters.create", "accesscontextmanager.servicePerimeters.delete", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "accesscontextmanager.servicePerimeters.replaceAll", "accesscontextmanager.servicePerimeters.update", "actions.agent.claimContentProvider", "actions.agent.get", "actions.agent.update", "actions.agentVersions.create", "actions.agentVersions.delete", "actions.agentVersions.deploy", "actions.agentVersions.get", "actions.agentVersions.list", "aiplatform.annotationSpecs.create", "aiplatform.annotationSpecs.delete", "aiplatform.annotationSpecs.get", "aiplatform.annotationSpecs.list", "aiplatform.annotationSpecs.update", "aiplatform.annotations.create", "aiplatform.annotations.delete", "aiplatform.annotations.get", "aiplatform.annotations.list", "aiplatform.annotations.update", "aiplatform.batchPredictionJobs.cancel", "aiplatform.batchPredictionJobs.create", "aiplatform.batchPredictionJobs.delete", "aiplatform.batchPredictionJobs.get", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.cancel", "aiplatform.customJobs.create", "aiplatform.customJobs.delete", "aiplatform.customJobs.get", "aiplatform.customJobs.list", "aiplatform.dataItems.create", "aiplatform.dataItems.delete", "aiplatform.dataItems.get", "aiplatform.dataItems.list", "aiplatform.dataItems.update", "aiplatform.dataLabelingJobs.cancel", "aiplatform.dataLabelingJobs.create", "aiplatform.dataLabelingJobs.delete", "aiplatform.dataLabelingJobs.get", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.create", "aiplatform.datasets.delete", "aiplatform.datasets.export", "aiplatform.datasets.get", "aiplatform.datasets.import", "aiplatform.datasets.list", "aiplatform.datasets.update", "aiplatform.endpoints.create", "aiplatform.endpoints.delete", "aiplatform.endpoints.deploy", "aiplatform.endpoints.explain", "aiplatform.endpoints.get", "aiplatform.endpoints.list", "aiplatform.endpoints.predict", "aiplatform.endpoints.undeploy", "aiplatform.endpoints.update", "aiplatform.hyperparameterTuningJobs.cancel", "aiplatform.hyperparameterTuningJobs.create", "aiplatform.hyperparameterTuningJobs.delete", "aiplatform.hyperparameterTuningJobs.get", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.get", "aiplatform.locations.list", "aiplatform.migratableResources.migrate", "aiplatform.migratableResources.search", "aiplatform.modelEvaluationSlices.get", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.exportEvaluatedDataItems", "aiplatform.modelEvaluations.get", "aiplatform.modelEvaluations.list", "aiplatform.models.delete", "aiplatform.models.export", "aiplatform.models.get", "aiplatform.models.list", "aiplatform.models.upload", "aiplatform.operations.list", "aiplatform.specialistPools.create", "aiplatform.specialistPools.delete", "aiplatform.specialistPools.get", "aiplatform.specialistPools.list", "aiplatform.specialistPools.update", "aiplatform.trainingPipelines.cancel", "aiplatform.trainingPipelines.create", "aiplatform.trainingPipelines.delete", "aiplatform.trainingPipelines.get", "aiplatform.trainingPipelines.list", "androidmanagement.enterprises.manage", "apigateway.apiconfigs.create", "apigateway.apiconfigs.delete", "apigateway.apiconfigs.get", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apiconfigs.update", "apigateway.apis.create", "apigateway.apis.delete", "apigateway.apis.get", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.apis.update", "apigateway.gateways.create", "apigateway.gateways.delete", "apigateway.gateways.get", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.gateways.update", "apigateway.locations.get", "apigateway.locations.list", "apigateway.operations.cancel", "apigateway.operations.delete", "apigateway.operations.get", "apigateway.operations.list", "apigee.apiproductattributes.createOrUpdateAll", "apigee.apiproductattributes.delete", "apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproductattributes.update", "apigee.apiproducts.create", "apigee.apiproducts.delete", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.apiproducts.update", "apigee.appkeys.create", "apigee.appkeys.delete", "apigee.appkeys.get", "apigee.appkeys.manage", "apigee.apps.get", "apigee.apps.list", "apigee.caches.delete", "apigee.caches.list", "apigee.canaryevaluations.create", "apigee.canaryevaluations.get", "apigee.datacollectors.create", "apigee.datacollectors.delete", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datacollectors.update", "apigee.datastores.create", "apigee.datastores.delete", "apigee.datastores.get", "apigee.datastores.list", "apigee.datastores.update", "apigee.deployments.create", "apigee.deployments.delete", "apigee.deployments.get", "apigee.deployments.list", "apigee.deployments.update", "apigee.developerappattributes.createOrUpdateAll", "apigee.developerappattributes.delete", "apigee.developerappattributes.get", "apigee.developerappattributes.list", "apigee.developerappattributes.update", "apigee.developerapps.create", "apigee.developerapps.delete", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerapps.manage", "apigee.developerattributes.createOrUpdateAll", "apigee.developerattributes.delete", "apigee.developerattributes.get", "apigee.developerattributes.list", "apigee.developerattributes.update", "apigee.developers.create", "apigee.developers.delete", "apigee.developers.get", "apigee.developers.list", "apigee.developers.update", "apigee.envgroupattachments.create", "apigee.envgroupattachments.delete", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.create", "apigee.envgroups.delete", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.envgroups.update", "apigee.environments.create", "apigee.environments.delete", "apigee.environments.get", "apigee.environments.getDataLocation", "apigee.environments.getIamPolicy", "apigee.environments.getStats", "apigee.environments.list", "apigee.environments.manageRuntime", "apigee.environments.update", "apigee.exports.create", "apigee.exports.get", "apigee.exports.list", "apigee.flowhooks.attachSharedFlow", "apigee.flowhooks.detachSharedFlow", "apigee.flowhooks.getSharedFlow", "apigee.flowhooks.list", "apigee.hostqueries.create", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.ingressconfigs.get", "apigee.instanceattachments.create", "apigee.instanceattachments.delete", "apigee.instanceattachments.get", "apigee.instanceattachments.list", "apigee.instances.create", "apigee.instances.delete", "apigee.instances.get", "apigee.instances.list", "apigee.instances.reportStatus", "apigee.keystorealiases.create", "apigee.keystorealiases.delete", "apigee.keystorealiases.exportCertificate", "apigee.keystorealiases.generateCSR", "apigee.keystorealiases.get", "apigee.keystorealiases.list", "apigee.keystorealiases.update", "apigee.keystores.create", "apigee.keystores.delete", "apigee.keystores.export", "apigee.keystores.get", "apigee.keystores.list", "apigee.keyvaluemaps.create", "apigee.keyvaluemaps.delete", "apigee.keyvaluemaps.list", "apigee.maskconfigs.get", "apigee.maskconfigs.update", "apigee.operations.get", "apigee.operations.list", "apigee.organizations.create", "apigee.organizations.get", "apigee.organizations.list", "apigee.organizations.update", "apigee.projects.update", "apigee.proxies.create", "apigee.proxies.delete", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.delete", "apigee.proxyrevisions.deploy", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.proxyrevisions.undeploy", "apigee.proxyrevisions.update", "apigee.queries.create", "apigee.queries.get", "apigee.queries.list", "apigee.references.create", "apigee.references.delete", "apigee.references.get", "apigee.references.list", "apigee.references.update", "apigee.reports.create", "apigee.reports.delete", "apigee.reports.get", "apigee.reports.list", "apigee.reports.update", "apigee.resourcefiles.create", "apigee.resourcefiles.delete", "apigee.resourcefiles.get", "apigee.resourcefiles.list", "apigee.resourcefiles.update", "apigee.sharedflowrevisions.delete", "apigee.sharedflowrevisions.deploy", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflowrevisions.undeploy", "apigee.sharedflowrevisions.update", "apigee.sharedflows.create", "apigee.sharedflows.delete", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.targetservers.create", "apigee.targetservers.delete", "apigee.targetservers.get", "apigee.targetservers.list", "apigee.targetservers.update", "apigee.tracesessions.create", "apigee.tracesessions.delete", "apigee.tracesessions.get", "apigee.tracesessions.list", "apigeeconnect.connections.list", "apigeeconnect.endpoints.connect", "apikeys.keys.create", "apikeys.keys.delete", "apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "apikeys.keys.update", "appengine.applications.get", "appengine.applications.update", "appengine.instances.delete", "appengine.instances.get", "appengine.instances.list", "appengine.memcache.addKey", "appengine.memcache.flush", "appengine.memcache.get", "appengine.memcache.getKey", "appengine.memcache.list", "appengine.memcache.update", "appengine.operations.get", "appengine.operations.list", "appengine.runtimes.actAsAdmin", "appengine.services.delete", "appengine.services.get", "appengine.services.list", "appengine.services.update", "appengine.versions.create", "appengine.versions.delete", "appengine.versions.get", "appengine.versions.list", "appengine.versions.update", "artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.delete", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.create", "artifactregistry.repositories.delete", "artifactregistry.repositories.deleteArtifacts", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.repositories.update", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.delete", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.delete", "artifactregistry.versions.get", "artifactregistry.versions.list", "assuredworkloads.operations.get", "assuredworkloads.operations.list", "assuredworkloads.workload.delete", "assuredworkloads.workload.get", "assuredworkloads.workload.list", "assuredworkloads.workload.update", "automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.getIamPolicy", "automl.datasets.import", "automl.datasets.list", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.getIamPolicy", "automl.locations.list", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.getIamPolicy", "automl.models.list", "automl.models.predict", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "automlrecommendations.apiKeys.create", "automlrecommendations.apiKeys.delete", "automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.create", "automlrecommendations.catalogItems.delete", "automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogItems.update", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.catalogs.update", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.create", "automlrecommendations.events.list", "automlrecommendations.placements.create", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.create", "automlrecommendations.recommendations.delete", "automlrecommendations.recommendations.list", "automlrecommendations.recommendations.pause", "automlrecommendations.recommendations.resume", "automlrecommendations.recommendations.update", "bigquery.bireservations.get", "bigquery.bireservations.update", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.capacityCommitments.update", "bigquery.config.get", "bigquery.connections.create", "bigquery.connections.delete", "bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.update", "bigquery.connections.use", "bigquery.datasets.create", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.create", "bigquery.reservationAssignments.delete", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.create", "bigquery.reservations.delete", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.reservations.update", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.savedqueries.create", "bigquery.savedqueries.delete", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.savedqueries.update", "bigquery.tables.getIamPolicy", "bigquery.transfers.get", "bigquery.transfers.update", "bigtable.appProfiles.create", "bigtable.appProfiles.delete", "bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.appProfiles.update", "bigtable.backups.create", "bigtable.backups.delete", "bigtable.backups.get", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.backups.restore", "bigtable.backups.update", "bigtable.clusters.create", "bigtable.clusters.delete", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.clusters.update", "bigtable.instances.create", "bigtable.instances.delete", "bigtable.instances.get", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.instances.update", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.create", "bigtable.tables.delete", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "bigtable.tables.mutateRows", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "bigtable.tables.update", "billing.resourceCosts.get", "binaryauthorization.attestors.create", "binaryauthorization.attestors.delete", "binaryauthorization.attestors.get", "binaryauthorization.attestors.getIamPolicy", "binaryauthorization.attestors.list", "binaryauthorization.attestors.update", "binaryauthorization.attestors.verifyImageAttested", "binaryauthorization.policy.get", "binaryauthorization.policy.getIamPolicy", "binaryauthorization.policy.update", "chat.bots.get", "chat.bots.update", "clientauthconfig.brands.create", "clientauthconfig.brands.delete", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.brands.update", "clientauthconfig.clients.create", "clientauthconfig.clients.createSecret", "clientauthconfig.clients.delete", "clientauthconfig.clients.get", "clientauthconfig.clients.getWithSecret", "clientauthconfig.clients.list", "clientauthconfig.clients.listWithSecrets", "clientauthconfig.clients.undelete", "clientauthconfig.clients.update", "cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "cloudconfig.configs.get", "cloudconfig.configs.update", "clouddebugger.breakpoints.create", "clouddebugger.breakpoints.delete", "clouddebugger.breakpoints.get", "clouddebugger.breakpoints.list", "clouddebugger.breakpoints.listActive", "clouddebugger.breakpoints.update", "clouddebugger.debuggees.create", "clouddebugger.debuggees.list", "cloudfunctions.functions.call", "cloudfunctions.functions.create", "cloudfunctions.functions.delete", "cloudfunctions.functions.get", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.invoke", "cloudfunctions.functions.list", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.functions.sourceCodeSet", "cloudfunctions.functions.update", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudiot.devices.bindGateway", "cloudiot.devices.create", "cloudiot.devices.delete", "cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.devices.sendCommand", "cloudiot.devices.unbindGateway", "cloudiot.devices.update", "cloudiot.devices.updateConfig", "cloudiot.registries.create", "cloudiot.registries.delete", "cloudiot.registries.get", "cloudiot.registries.getIamPolicy", "cloudiot.registries.list", "cloudiot.registries.update", "cloudiottoken.tokensettings.get", "cloudiottoken.tokensettings.update", "cloudjobdiscovery.companies.create", "cloudjobdiscovery.companies.delete", "cloudjobdiscovery.companies.get", "cloudjobdiscovery.companies.list", "cloudjobdiscovery.companies.update", "cloudjobdiscovery.events.create", "cloudjobdiscovery.jobs.create", "cloudjobdiscovery.jobs.delete", "cloudjobdiscovery.jobs.get", "cloudjobdiscovery.jobs.search", "cloudjobdiscovery.jobs.update", "cloudjobdiscovery.profiles.create", "cloudjobdiscovery.profiles.delete", "cloudjobdiscovery.profiles.get", "cloudjobdiscovery.profiles.search", "cloudjobdiscovery.profiles.update", "cloudjobdiscovery.tenants.create", "cloudjobdiscovery.tenants.delete", "cloudjobdiscovery.tenants.get", "cloudjobdiscovery.tenants.update", "cloudjobdiscovery.tools.access", "cloudkms.cryptoKeyVersions.create", "cloudkms.cryptoKeyVersions.get", "cloudkms.cryptoKeyVersions.list", "cloudkms.cryptoKeyVersions.update", "cloudkms.cryptoKeys.create", "cloudkms.cryptoKeys.get", "cloudkms.cryptoKeys.getIamPolicy", "cloudkms.cryptoKeys.list", "cloudkms.cryptoKeys.update", "cloudkms.importJobs.create", "cloudkms.importJobs.get", "cloudkms.importJobs.getIamPolicy", "cloudkms.importJobs.list", "cloudkms.importJobs.useToImport", "cloudkms.keyRings.create", "cloudkms.keyRings.get", "cloudkms.keyRings.getIamPolicy", "cloudkms.keyRings.list", "cloudmessaging.messages.create", "cloudnotifications.activities.list", "cloudonefs.isiloncloud.com/clusters.create", "cloudonefs.isiloncloud.com/clusters.delete", "cloudonefs.isiloncloud.com/clusters.get", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/clusters.update", "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings", "cloudonefs.isiloncloud.com/fileshares.create", "cloudonefs.isiloncloud.com/fileshares.delete", "cloudonefs.isiloncloud.com/fileshares.get", "cloudonefs.isiloncloud.com/fileshares.list", "cloudonefs.isiloncloud.com/fileshares.update", "cloudprivatecatalog.targets.get", "cloudprivatecatalogproducer.associations.create", "cloudprivatecatalogproducer.associations.delete", "cloudprivatecatalogproducer.associations.get", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.create", "cloudprivatecatalogproducer.catalogs.delete", "cloudprivatecatalogproducer.catalogs.get", "cloudprivatecatalogproducer.catalogs.getIamPolicy", "cloudprivatecatalogproducer.catalogs.list", "cloudprivatecatalogproducer.catalogs.undelete", "cloudprivatecatalogproducer.catalogs.update", "cloudprivatecatalogproducer.targets.associate", "cloudprivatecatalogproducer.targets.unassociate", "cloudprofiler.profiles.create", "cloudprofiler.profiles.list", "cloudprofiler.profiles.update", "cloudscheduler.jobs.create", "cloudscheduler.jobs.delete", "cloudscheduler.jobs.enable", "cloudscheduler.jobs.fullView", "cloudscheduler.jobs.get", "cloudscheduler.jobs.list", "cloudscheduler.jobs.pause", "cloudscheduler.jobs.run", "cloudscheduler.jobs.update", "cloudscheduler.locations.get", "cloudscheduler.locations.list", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "cloudsql.backupRuns.create", "cloudsql.backupRuns.delete", "cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.create", "cloudsql.databases.delete", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.databases.update", "cloudsql.instances.addServerCa", "cloudsql.instances.clone", "cloudsql.instances.connect", "cloudsql.instances.create", "cloudsql.instances.delete", "cloudsql.instances.demoteMaster", "cloudsql.instances.export", "cloudsql.instances.failover", "cloudsql.instances.get", "cloudsql.instances.import", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.instances.login", "cloudsql.instances.promoteReplica", "cloudsql.instances.resetSslConfig", "cloudsql.instances.restart", "cloudsql.instances.restoreBackup", "cloudsql.instances.rotateServerCa", "cloudsql.instances.startReplica", "cloudsql.instances.stopReplica", "cloudsql.instances.truncateLog", "cloudsql.instances.update", "cloudsql.sslCerts.create", "cloudsql.sslCerts.createEphemeral", "cloudsql.sslCerts.delete", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.create", "cloudsql.users.delete", "cloudsql.users.list", "cloudsql.users.update", "cloudsupport.accounts.get", "cloudsupport.accounts.getIamPolicy", "cloudsupport.accounts.getUserRoles", "cloudsupport.accounts.list", "cloudsupport.accounts.update", "cloudsupport.accounts.updateUserRoles", "cloudsupport.operations.get", "cloudsupport.properties.get", "cloudsupport.techCases.create", "cloudsupport.techCases.escalate", "cloudsupport.techCases.get", "cloudsupport.techCases.list", "cloudsupport.techCases.update", "cloudtasks.locations.get", "cloudtasks.locations.list", "cloudtasks.queues.create", "cloudtasks.queues.delete", "cloudtasks.queues.get", "cloudtasks.queues.list", "cloudtasks.queues.pause", "cloudtasks.queues.purge", "cloudtasks.queues.resume", "cloudtasks.queues.update", "cloudtasks.tasks.create", "cloudtasks.tasks.delete", "cloudtasks.tasks.fullView", "cloudtasks.tasks.get", "cloudtasks.tasks.list", "cloudtasks.tasks.run", "cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.create", "cloudtestservice.matrices.get", "cloudtestservice.matrices.update", "cloudtoolresults.executions.create", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.executions.update", "cloudtoolresults.histories.create", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.create", "cloudtoolresults.settings.get", "cloudtoolresults.settings.update", "cloudtoolresults.steps.create", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "cloudtoolresults.steps.update", "cloudtrace.insights.get", "cloudtrace.insights.list", "cloudtrace.stats.get", "cloudtrace.tasks.create", "cloudtrace.tasks.delete", "cloudtrace.tasks.get", "cloudtrace.tasks.list", "cloudtrace.traces.get", "cloudtrace.traces.list", "cloudtrace.traces.patch", "cloudtranslate.generalModels.batchPredict", "cloudtranslate.generalModels.get", "cloudtranslate.generalModels.predict", "cloudtranslate.glossaries.batchPredict", "cloudtranslate.glossaries.create", "cloudtranslate.glossaries.delete", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.glossaries.predict", "cloudtranslate.languageDetectionModels.predict", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.cancel", "cloudtranslate.operations.delete", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "cloudvolumesgcp-api.netapp.com/activeDirectories.create", "cloudvolumesgcp-api.netapp.com/activeDirectories.delete", "cloudvolumesgcp-api.netapp.com/activeDirectories.get", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/activeDirectories.update", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.get", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.create", "cloudvolumesgcp-api.netapp.com/snapshots.delete", "cloudvolumesgcp-api.netapp.com/snapshots.get", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/snapshots.update", "cloudvolumesgcp-api.netapp.com/volumes.create", "cloudvolumesgcp-api.netapp.com/volumes.delete", "cloudvolumesgcp-api.netapp.com/volumes.get", "cloudvolumesgcp-api.netapp.com/volumes.list", "cloudvolumesgcp-api.netapp.com/volumes.update", "composer.environments.create", "composer.environments.delete", "composer.environments.get", "composer.environments.list", "composer.environments.update", "composer.imageversions.list", "composer.operations.delete", "composer.operations.get", "composer.operations.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.commitments.create", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.delete", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.create", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.globalPublicDelegatedPrefixes.use", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.create", "compute.maintenancePolicies.delete", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.maintenancePolicies.use", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.addNodes", "compute.nodeGroups.create", "compute.nodeGroups.delete", "compute.nodeGroups.deleteNodes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeGroups.setNodeTemplate", "compute.nodeGroups.update", "compute.nodeTemplates.create", "compute.nodeTemplates.delete", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.organizations.setSecurityPolicy", "compute.packetMirrorings.update", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.projects.setDefaultNetworkTier", "compute.projects.setDefaultServiceAccount", "compute.projects.setUsageExportBucket", "compute.publicAdvertisedPrefixes.create", "compute.publicAdvertisedPrefixes.delete", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicAdvertisedPrefixes.update", "compute.publicAdvertisedPrefixes.updatePolicy", "compute.publicAdvertisedPrefixes.use", "compute.publicDelegatedPrefixes.create", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.publicDelegatedPrefixes.use", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.delete", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.create", "compute.reservations.delete", "compute.reservations.get", "compute.reservations.list", "compute.reservations.resize", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.delete", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "consumerprocurement.accounts.create", "consumerprocurement.accounts.delete", "consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.entitlements.get", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.create", "consumerprocurement.freeTrials.get", "consumerprocurement.freeTrials.list", "consumerprocurement.orders.cancel", "consumerprocurement.orders.get", "consumerprocurement.orders.list", "consumerprocurement.orders.modify", "consumerprocurement.orders.place", "container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "containeranalysis.notes.attachOccurrence", "containeranalysis.notes.create", "containeranalysis.notes.delete", "containeranalysis.notes.get", "containeranalysis.notes.getIamPolicy", "containeranalysis.notes.list", "containeranalysis.notes.listOccurrences", "containeranalysis.notes.update", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.getIamPolicy", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "datacatalog.categories.getIamPolicy", "datacatalog.entries.create", "datacatalog.entries.delete", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entries.update", "datacatalog.entries.updateTag", "datacatalog.entryGroups.create", "datacatalog.entryGroups.delete", "datacatalog.entryGroups.get", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.entryGroups.update", "datacatalog.tagTemplates.create", "datacatalog.tagTemplates.delete", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.update", "datacatalog.tagTemplates.use", "datacatalog.taxonomies.get", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "dataflow.jobs.cancel", "dataflow.jobs.create", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.jobs.snapshot", "dataflow.jobs.updateContents", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.delete", "dataflow.snapshots.get", "dataflow.snapshots.list", "datafusion.instances.create", "datafusion.instances.delete", "datafusion.instances.get", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.restart", "datafusion.instances.runtime", "datafusion.instances.update", "datafusion.instances.upgrade", "datafusion.locations.get", "datafusion.locations.list", "datafusion.operations.cancel", "datafusion.operations.get", "datafusion.operations.list", "datalabeling.annotateddatasets.delete", "datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.label", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.create", "datalabeling.annotationspecsets.delete", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.create", "datalabeling.datasets.delete", "datalabeling.datasets.export", "datalabeling.datasets.get", "datalabeling.datasets.import", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.create", "datalabeling.instructions.delete", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.cancel", "datalabeling.operations.get", "datalabeling.operations.list", "datamigration.connectionprofiles.create", "datamigration.connectionprofiles.delete", "datamigration.connectionprofiles.get", "datamigration.connectionprofiles.getIamPolicy", "datamigration.connectionprofiles.list", "datamigration.connectionprofiles.update", "datamigration.locations.get", "datamigration.locations.list", "datamigration.migrationjobs.create", "datamigration.migrationjobs.delete", "datamigration.migrationjobs.generateSshScript", "datamigration.migrationjobs.get", "datamigration.migrationjobs.getIamPolicy", "datamigration.migrationjobs.list", "datamigration.migrationjobs.promote", "datamigration.migrationjobs.restart", "datamigration.migrationjobs.resume", "datamigration.migrationjobs.start", "datamigration.migrationjobs.stop", "datamigration.migrationjobs.update", "datamigration.migrationjobs.verify", "datamigration.operations.cancel", "datamigration.operations.delete", "datamigration.operations.get", "datamigration.operations.list", "dataprep.projects.use", "dataproc.agents.create", "dataproc.agents.delete", "dataproc.agents.get", "dataproc.agents.list", "dataproc.agents.update", "dataproc.autoscalingPolicies.create", "dataproc.autoscalingPolicies.delete", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.getIamPolicy", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.update", "dataproc.autoscalingPolicies.use", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.jobs.update", "dataproc.operations.cancel", "dataproc.operations.delete", "dataproc.operations.get", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.tasks.lease", "dataproc.tasks.listInvalidatedLeases", "dataproc.tasks.reportStatus", "dataproc.workflowTemplates.create", "dataproc.workflowTemplates.delete", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.instantiate", "dataproc.workflowTemplates.instantiateInline", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.update", "dataprocessing.featurecontrols.list", "dataprocessing.groupcontrols.list", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.list", "datastore.databases.update", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.create", "datastore.indexes.delete", "datastore.indexes.get", "datastore.indexes.list", "datastore.indexes.update", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.deployments.cancelPreview", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.stop", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.typeProviders.update", "deploymentmanager.types.create", "deploymentmanager.types.delete", "deploymentmanager.types.get", "deploymentmanager.types.list", "deploymentmanager.types.update", "dialogflow.agents.create", "dialogflow.agents.delete", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.import", "dialogflow.agents.list", "dialogflow.agents.restore", "dialogflow.agents.search", "dialogflow.agents.train", "dialogflow.agents.update", "dialogflow.agents.validate", "dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.documents.create", "dialogflow.documents.delete", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.create", "dialogflow.entityTypes.createEntity", "dialogflow.entityTypes.delete", "dialogflow.entityTypes.deleteEntity", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.entityTypes.update", "dialogflow.entityTypes.updateEntity", "dialogflow.environments.create", "dialogflow.environments.delete", "dialogflow.environments.get", "dialogflow.environments.getHistory", "dialogflow.environments.list", "dialogflow.environments.lookupHistory", "dialogflow.environments.update", "dialogflow.flows.create", "dialogflow.flows.delete", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.flows.train", "dialogflow.flows.update", "dialogflow.flows.validate", "dialogflow.fulfillments.get", "dialogflow.fulfillments.update", "dialogflow.intents.create", "dialogflow.intents.delete", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.intents.update", "dialogflow.knowledgeBases.create", "dialogflow.knowledgeBases.delete", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.create", "dialogflow.pages.delete", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.pages.update", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dialogflow.transitionRouteGroups.create", "dialogflow.transitionRouteGroups.delete", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.transitionRouteGroups.update", "dialogflow.versions.create", "dialogflow.versions.delete", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.versions.load", "dialogflow.versions.update", "dialogflow.webhooks.create", "dialogflow.webhooks.delete", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "dialogflow.webhooks.update", "dlp.analyzeRiskTemplates.create", "dlp.analyzeRiskTemplates.delete", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.analyzeRiskTemplates.update", "dlp.deidentifyTemplates.create", "dlp.deidentifyTemplates.delete", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.deidentifyTemplates.update", "dlp.inspectFindings.list", "dlp.inspectTemplates.create", "dlp.inspectTemplates.delete", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.inspectTemplates.update", "dlp.jobTriggers.create", "dlp.jobTriggers.delete", "dlp.jobTriggers.get", "dlp.jobTriggers.hybridInspect", "dlp.jobTriggers.list", "dlp.jobTriggers.update", "dlp.jobs.cancel", "dlp.jobs.create", "dlp.jobs.delete", "dlp.jobs.get", "dlp.jobs.hybridInspect", "dlp.jobs.list", "dlp.storedInfoTypes.create", "dlp.storedInfoTypes.delete", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list", "dlp.storedInfoTypes.update", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.create", "dns.managedZones.delete", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSPolicy", "dns.networks.bindPrivateDNSZone", "dns.networks.targetWithPeeringZone", "dns.policies.create", "dns.policies.delete", "dns.policies.get", "dns.policies.list", "dns.policies.update", "dns.projects.get", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "documentai.humanReviewConfigs.get", "documentai.humanReviewConfigs.review", "documentai.humanReviewConfigs.update", "documentai.labelerPools.create", "documentai.labelerPools.delete", "documentai.labelerPools.get", "documentai.labelerPools.list", "documentai.labelerPools.update", "documentai.locations.get", "documentai.locations.list", "documentai.operations.getLegacy", "documentai.processorTypes.list", "documentai.processorVersions.create", "documentai.processorVersions.delete", "documentai.processorVersions.get", "documentai.processorVersions.list", "documentai.processors.create", "documentai.processors.delete", "documentai.processors.fetchHumanReviewDetails", "documentai.processors.get", "documentai.processors.list", "documentai.processors.processBatch", "documentai.processors.processOnline", "documentai.processors.update", "domains.locations.get", "domains.locations.list", "domains.operations.cancel", "domains.operations.get", "domains.operations.list", "domains.registrations.configureContact", "domains.registrations.configureDns", "domains.registrations.configureManagement", "domains.registrations.create", "domains.registrations.delete", "domains.registrations.get", "domains.registrations.getIamPolicy", "domains.registrations.list", "domains.registrations.update", "earlyaccesscenter.campaigns.get", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.get", "earlyaccesscenter.customerWhitelists.list", "endpoints.portals.attachCustomDomain", "endpoints.portals.detachCustomDomain", "endpoints.portals.listCustomDomains", "endpoints.portals.update", "errorreporting.applications.list", "errorreporting.errorEvents.create", "errorreporting.errorEvents.delete", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groupMetadata.update", "errorreporting.groups.list", "essentialcontacts.contacts.create", "essentialcontacts.contacts.delete", "essentialcontacts.contacts.get", "essentialcontacts.contacts.list", "essentialcontacts.contacts.update", "eventarc.locations.get", "eventarc.locations.list", "eventarc.operations.cancel", "eventarc.operations.delete", "eventarc.operations.get", "eventarc.operations.list", "eventarc.triggers.create", "eventarc.triggers.delete", "eventarc.triggers.get", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "eventarc.triggers.undelete", "eventarc.triggers.update", "file.backups.create", "file.backups.delete", "file.backups.get", "file.backups.list", "file.backups.update", "file.instances.create", "file.instances.delete", "file.instances.get", "file.instances.list", "file.instances.restore", "file.instances.update", "file.locations.get", "file.locations.list", "file.operations.cancel", "file.operations.delete", "file.operations.get", "file.operations.list", "firebase.billingPlans.get", "firebase.clients.create", "firebase.clients.delete", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebase.projects.update", "firebaseabt.experimentresults.get", "firebaseabt.experiments.create", "firebaseabt.experiments.delete", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.experiments.update", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "firebasecrash.issues.update", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.config.update", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.issues.update", "firebasecrashlytics.sessions.get", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.create", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.domains.update", "firebasedynamiclinks.links.create", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.links.update", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.list", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "firebaseinappmessaging.campaigns.create", "firebaseinappmessaging.campaigns.delete", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseinappmessaging.campaigns.update", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "firebaseperformance.config.create", "firebaseperformance.config.delete", "firebaseperformance.config.update", "firebaseperformance.data.get", "firebasepredictions.predictions.create", "firebasepredictions.predictions.delete", "firebasepredictions.predictions.list", "firebasepredictions.predictions.update", "firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "firebaserules.rulesets.test", "gameservices.gameServerClusters.create", "gameservices.gameServerClusters.delete", "gameservices.gameServerClusters.get", "gameservices.gameServerClusters.list", "gameservices.gameServerClusters.update", "gameservices.gameServerConfigs.create", "gameservices.gameServerConfigs.delete", "gameservices.gameServerConfigs.get", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.create", "gameservices.gameServerDeployments.delete", "gameservices.gameServerDeployments.get", "gameservices.gameServerDeployments.list", "gameservices.gameServerDeployments.rollout", "gameservices.gameServerDeployments.update", "gameservices.locations.get", "gameservices.locations.list", "gameservices.operations.cancel", "gameservices.operations.delete", "gameservices.operations.get", "gameservices.operations.list", "gameservices.realms.create", "gameservices.realms.delete", "gameservices.realms.get", "gameservices.realms.list", "gameservices.realms.update", "gcp.redisenterprise.com/databases.create", "gcp.redisenterprise.com/databases.delete", "gcp.redisenterprise.com/databases.get", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/databases.update", "gcp.redisenterprise.com/subscriptions.create", "gcp.redisenterprise.com/subscriptions.delete", "gcp.redisenterprise.com/subscriptions.get", "gcp.redisenterprise.com/subscriptions.list", "gcp.redisenterprise.com/subscriptions.update", "genomics.datasets.create", "genomics.datasets.delete", "genomics.datasets.get", "genomics.datasets.list", "genomics.datasets.update", "genomics.operations.cancel", "genomics.operations.create", "genomics.operations.get", "genomics.operations.list", "gkehub.features.create", "gkehub.features.delete", "gkehub.features.get", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.features.update", "gkehub.gateway.delete", "gkehub.gateway.get", "gkehub.gateway.getIamPolicy", "gkehub.gateway.patch", "gkehub.gateway.post", "gkehub.gateway.put", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.create", "gkehub.memberships.delete", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.memberships.update", "gkehub.operations.cancel", "gkehub.operations.delete", "gkehub.operations.get", "gkehub.operations.list", "healthcare.annotationStores.create", "healthcare.annotationStores.delete", "healthcare.annotationStores.evaluate", "healthcare.annotationStores.export", "healthcare.annotationStores.get", "healthcare.annotationStores.getIamPolicy", "healthcare.annotationStores.import", "healthcare.annotationStores.list", "healthcare.annotationStores.update", "healthcare.annotations.create", "healthcare.annotations.delete", "healthcare.annotations.get", "healthcare.annotations.list", "healthcare.annotations.update", "healthcare.attributeDefinitions.create", "healthcare.attributeDefinitions.delete", "healthcare.attributeDefinitions.get", "healthcare.attributeDefinitions.list", "healthcare.attributeDefinitions.update", "healthcare.consentArtifacts.create", "healthcare.consentArtifacts.delete", "healthcare.consentArtifacts.get", "healthcare.consentArtifacts.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.create", "healthcare.consentStores.delete", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.getIamPolicy", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.consentStores.update", "healthcare.consents.activate", "healthcare.consents.create", "healthcare.consents.delete", "healthcare.consents.get", "healthcare.consents.list", "healthcare.consents.reject", "healthcare.consents.revoke", "healthcare.consents.update", "healthcare.datasets.create", "healthcare.datasets.deidentify", "healthcare.datasets.delete", "healthcare.datasets.get", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.datasets.update", "healthcare.dicomStores.create", "healthcare.dicomStores.deidentify", "healthcare.dicomStores.delete", "healthcare.dicomStores.dicomWebDelete", "healthcare.dicomStores.dicomWebRead", "healthcare.dicomStores.dicomWebWrite", "healthcare.dicomStores.export", "healthcare.dicomStores.get", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.import", "healthcare.dicomStores.list", "healthcare.dicomStores.update", "healthcare.fhirResources.create", "healthcare.fhirResources.delete", "healthcare.fhirResources.get", "healthcare.fhirResources.patch", "healthcare.fhirResources.purge", "healthcare.fhirResources.translateConceptMap", "healthcare.fhirResources.update", "healthcare.fhirStores.create", "healthcare.fhirStores.deidentify", "healthcare.fhirStores.delete", "healthcare.fhirStores.executeBundle", "healthcare.fhirStores.export", "healthcare.fhirStores.get", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.import", "healthcare.fhirStores.list", "healthcare.fhirStores.searchResources", "healthcare.fhirStores.update", "healthcare.hl7V2Messages.create", "healthcare.hl7V2Messages.delete", "healthcare.hl7V2Messages.get", "healthcare.hl7V2Messages.ingest", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Messages.update", "healthcare.hl7V2Stores.create", "healthcare.hl7V2Stores.delete", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.import", "healthcare.hl7V2Stores.list", "healthcare.hl7V2Stores.update", "healthcare.locations.get", "healthcare.locations.list", "healthcare.nlpservice.analyzeEntities", "healthcare.operations.cancel", "healthcare.operations.get", "healthcare.operations.list", "healthcare.userDataMappings.archive", "healthcare.userDataMappings.create", "healthcare.userDataMappings.delete", "healthcare.userDataMappings.get", "healthcare.userDataMappings.list", "healthcare.userDataMappings.update", "iam.googleapis.com/workloadIdentityPoolProviders.create", "iam.googleapis.com/workloadIdentityPoolProviders.delete", "iam.googleapis.com/workloadIdentityPoolProviders.get", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPoolProviders.undelete", "iam.googleapis.com/workloadIdentityPoolProviders.update", "iam.googleapis.com/workloadIdentityPools.create", "iam.googleapis.com/workloadIdentityPools.delete", "iam.googleapis.com/workloadIdentityPools.get", "iam.googleapis.com/workloadIdentityPools.list", "iam.googleapis.com/workloadIdentityPools.undelete", "iam.googleapis.com/workloadIdentityPools.update", "iam.roles.get", "iam.roles.list", "iam.serviceAccountKeys.create", "iam.serviceAccountKeys.delete", "iam.serviceAccountKeys.get", "iam.serviceAccountKeys.list", "iam.serviceAccounts.actAs", "iam.serviceAccounts.create", "iam.serviceAccounts.delete", "iam.serviceAccounts.disable", "iam.serviceAccounts.enable", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iam.serviceAccounts.update", "iap.projects.getSettings", "iap.projects.updateSettings", "iap.web.getSettings", "iap.web.updateSettings", "iap.webServiceVersions.getSettings", "iap.webServiceVersions.updateSettings", "iap.webServices.getSettings", "iap.webServices.updateSettings", "iap.webTypes.getSettings", "iap.webTypes.updateSettings", "identityplatform.workloadPoolProviders.create", "identityplatform.workloadPoolProviders.delete", "identityplatform.workloadPoolProviders.get", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPoolProviders.undelete", "identityplatform.workloadPoolProviders.update", "identityplatform.workloadPools.create", "identityplatform.workloadPools.delete", "identityplatform.workloadPools.get", "identityplatform.workloadPools.list", "identityplatform.workloadPools.undelete", "identityplatform.workloadPools.update", "lifesciences.operations.cancel", "lifesciences.operations.get", "lifesciences.operations.list", "lifesciences.workflows.run", "logging.buckets.get", "logging.buckets.list", "logging.cmekSettings.get", "logging.cmekSettings.update", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.create", "logging.logEntries.download", "logging.logEntries.list", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.delete", "logging.logs.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "managedidentities.domains.attachTrust", "managedidentities.domains.create", "managedidentities.domains.delete", "managedidentities.domains.detachTrust", "managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.domains.reconfigureTrust", "managedidentities.domains.resetpassword", "managedidentities.domains.update", "managedidentities.domains.validateTrust", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.cancel", "managedidentities.operations.delete", "managedidentities.operations.get", "managedidentities.operations.list", "memcache.instances.applyParameters", "memcache.instances.create", "memcache.instances.delete", "memcache.instances.get", "memcache.instances.list", "memcache.instances.update", "memcache.instances.updateParameters", "memcache.locations.get", "memcache.locations.list", "memcache.operations.cancel", "memcache.operations.delete", "memcache.operations.get", "memcache.operations.list", "ml.jobs.cancel", "ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.jobs.update", "ml.locations.get", "ml.locations.list", "ml.models.create", "ml.models.delete", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.models.update", "ml.operations.cancel", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.create", "ml.studies.delete", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.trials.create", "ml.trials.delete", "ml.trials.get", "ml.trials.list", "ml.trials.update", "ml.versions.create", "ml.versions.delete", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "ml.versions.update", "monitoring.alertPolicies.create", "monitoring.alertPolicies.delete", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.alertPolicies.update", "monitoring.dashboards.create", "monitoring.dashboards.delete", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.dashboards.update", "monitoring.groups.create", "monitoring.groups.delete", "monitoring.groups.get", "monitoring.groups.list", "monitoring.groups.update", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.delete", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.create", "monitoring.notificationChannels.delete", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.notificationChannels.sendVerificationCode", "monitoring.notificationChannels.update", "monitoring.notificationChannels.verify", "monitoring.publicWidgets.create", "monitoring.publicWidgets.delete", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.publicWidgets.update", "monitoring.services.create", "monitoring.services.delete", "monitoring.services.get", "monitoring.services.list", "monitoring.services.update", "monitoring.slos.create", "monitoring.slos.delete", "monitoring.slos.get", "monitoring.slos.list", "monitoring.slos.update", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.create", "monitoring.uptimeCheckConfigs.delete", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "monitoring.uptimeCheckConfigs.update", "networkmanagement.connectivitytests.create", "networkmanagement.connectivitytests.delete", "networkmanagement.connectivitytests.get", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.connectivitytests.rerun", "networkmanagement.connectivitytests.update", "networkmanagement.locations.get", "networkmanagement.locations.list", "networkmanagement.operations.get", "networkmanagement.operations.list", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "notebooks.environments.create", "notebooks.environments.delete", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.checkUpgradability", "notebooks.instances.create", "notebooks.instances.delete", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.reset", "notebooks.instances.setAccelerator", "notebooks.instances.setLabels", "notebooks.instances.setMachineType", "notebooks.instances.start", "notebooks.instances.stop", "notebooks.instances.update", "notebooks.instances.updateConfig", "notebooks.instances.upgrade", "notebooks.instances.use", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.cancel", "notebooks.operations.delete", "notebooks.operations.get", "notebooks.operations.list", "oauthconfig.clientpolicy.get", "oauthconfig.testusers.get", "oauthconfig.testusers.update", "oauthconfig.verification.get", "oauthconfig.verification.submit", "oauthconfig.verification.update", "opsconfigmonitoring.resourceMetadata.write", "orgpolicy.policy.get", "osconfig.guestPolicies.create", "osconfig.guestPolicies.delete", "osconfig.guestPolicies.get", "osconfig.guestPolicies.list", "osconfig.guestPolicies.update", "osconfig.patchDeployments.create", "osconfig.patchDeployments.delete", "osconfig.patchDeployments.execute", "osconfig.patchDeployments.get", "osconfig.patchDeployments.list", "osconfig.patchDeployments.update", "osconfig.patchJobs.exec", "osconfig.patchJobs.get", "osconfig.patchJobs.list", "privateca.certificateAuthorities.create", "privateca.certificateAuthorities.delete", "privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateAuthorities.update", "privateca.certificateRevocationLists.create", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificateRevocationLists.update", "privateca.certificates.create", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.certificates.update", "privateca.locations.get", "privateca.locations.list", "privateca.operations.cancel", "privateca.operations.delete", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.create", "privateca.reusableConfigs.delete", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "privateca.reusableConfigs.update", "proximitybeacon.attachments.create", "proximitybeacon.attachments.delete", "proximitybeacon.attachments.get", "proximitybeacon.attachments.list", "proximitybeacon.beacons.attach", "proximitybeacon.beacons.create", "proximitybeacon.beacons.get", "proximitybeacon.beacons.list", "proximitybeacon.beacons.update", "proximitybeacon.namespaces.create", "proximitybeacon.namespaces.delete", "proximitybeacon.namespaces.get", "proximitybeacon.namespaces.list", "proximitybeacon.namespaces.update", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.update", "pubsub.topics.updateTag", "pubsublite.subscriptions.create", "pubsublite.subscriptions.delete", "pubsublite.subscriptions.get", "pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.list", "pubsublite.subscriptions.setCursor", "pubsublite.subscriptions.subscribe", "pubsublite.subscriptions.update", "pubsublite.topics.computeMessageStats", "pubsublite.topics.create", "pubsublite.topics.delete", "pubsublite.topics.get", "pubsublite.topics.getPartitions", "pubsublite.topics.list", "pubsublite.topics.listSubscriptions", "pubsublite.topics.publish", "pubsublite.topics.subscribe", "pubsublite.topics.update", "recaptchaenterprise.assessments.annotate", "recaptchaenterprise.assessments.create", "recaptchaenterprise.keys.create", "recaptchaenterprise.keys.delete", "recaptchaenterprise.keys.get", "recaptchaenterprise.keys.list", "recaptchaenterprise.keys.update", "recaptchaenterprise.metrics.get", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.commitmentUtilizationInsights.update", "recommender.computeDiskIdleResourceInsights.get", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceInsights.update", "recommender.computeDiskIdleResourceRecommendations.get", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeDiskIdleResourceRecommendations.update", "recommender.computeFirewallInsights.get", "recommender.computeFirewallInsights.list", "recommender.computeFirewallInsights.update", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update", "recommender.computeInstanceIdleResourceRecommendations.get", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.update", "recommender.computeInstanceMachineTypeRecommendations.get", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.update", "recommender.iamPolicyInsights.get", "recommender.iamPolicyInsights.list", "recommender.iamPolicyInsights.update", "recommender.iamPolicyRecommendations.get", "recommender.iamPolicyRecommendations.list", "recommender.iamPolicyRecommendations.update", "recommender.iamServiceAccountInsights.get", "recommender.iamServiceAccountInsights.list", "recommender.iamServiceAccountInsights.update", "recommender.locations.get", "recommender.locations.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "recommender.usageCommitmentRecommendations.update", "redis.instances.create", "redis.instances.delete", "redis.instances.export", "redis.instances.failover", "redis.instances.get", "redis.instances.getAuthString", "redis.instances.import", "redis.instances.list", "redis.instances.update", "redis.instances.updateAuth", "redis.instances.upgrade", "redis.locations.get", "redis.locations.list", "redis.operations.cancel", "redis.operations.delete", "redis.operations.get", "redis.operations.list", "remotebuildexecution.actions.create", "remotebuildexecution.actions.delete", "remotebuildexecution.actions.get", "remotebuildexecution.actions.update", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.botsessions.create", "remotebuildexecution.botsessions.update", "remotebuildexecution.instances.create", "remotebuildexecution.instances.get", "remotebuildexecution.instances.list", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.get", "remotebuildexecution.logstreams.update", "remotebuildexecution.workerpools.create", "remotebuildexecution.workerpools.get", "remotebuildexecution.workerpools.list", "remotebuildexecution.workerpools.update", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "resourcemanager.projects.move", "resourcemanager.projects.update", "run.configurations.get", "run.configurations.list", "run.locations.list", "run.revisions.delete", "run.revisions.get", "run.revisions.list", "run.routes.get", "run.routes.invoke", "run.routes.list", "run.services.create", "run.services.delete", "run.services.get", "run.services.getIamPolicy", "run.services.list", "run.services.update", "runtimeconfig.configs.create", "runtimeconfig.configs.delete", "runtimeconfig.configs.get", "runtimeconfig.configs.list", "runtimeconfig.configs.update", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.create", "runtimeconfig.variables.delete", "runtimeconfig.variables.get", "runtimeconfig.variables.list", "runtimeconfig.variables.update", "runtimeconfig.variables.watch", "runtimeconfig.waiters.create", "runtimeconfig.waiters.delete", "runtimeconfig.waiters.get", "runtimeconfig.waiters.list", "runtimeconfig.waiters.update", "secretmanager.locations.get", "secretmanager.locations.list", "secretmanager.secrets.create", "secretmanager.secrets.delete", "secretmanager.secrets.get", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.secrets.update", "secretmanager.versions.add", "secretmanager.versions.destroy", "secretmanager.versions.disable", "secretmanager.versions.enable", "secretmanager.versions.get", "secretmanager.versions.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.containerthreatdetectionsettings.update", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.update", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.organizationsettings.update", "securitycenter.securitycentersettings.get", "securitycenter.securitycentersettings.update", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.securityhealthanalyticssettings.update", "securitycenter.sources.get", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "securitycenter.websecurityscannersettings.update", "servicebroker.bindingoperations.get", "servicebroker.bindingoperations.list", "servicebroker.bindings.create", "servicebroker.bindings.delete", "servicebroker.bindings.get", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.catalogs.create", "servicebroker.catalogs.delete", "servicebroker.catalogs.get", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.instanceoperations.get", "servicebroker.instanceoperations.list", "servicebroker.instances.create", "servicebroker.instances.delete", "servicebroker.instances.get", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "servicebroker.instances.update", "serviceconsumermanagement.consumers.get", "serviceconsumermanagement.quota.get", "serviceconsumermanagement.quota.update", "serviceconsumermanagement.tenancyu.addResource", "serviceconsumermanagement.tenancyu.create", "serviceconsumermanagement.tenancyu.delete", "serviceconsumermanagement.tenancyu.list", "serviceconsumermanagement.tenancyu.removeResource", "servicedirectory.endpoints.create", "servicedirectory.endpoints.delete", "servicedirectory.endpoints.get", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.endpoints.update", "servicedirectory.locations.get", "servicedirectory.locations.list", "servicedirectory.namespaces.associatePrivateZone", "servicedirectory.namespaces.create", "servicedirectory.namespaces.delete", "servicedirectory.namespaces.get", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.namespaces.update", "servicedirectory.services.create", "servicedirectory.services.delete", "servicedirectory.services.get", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.resolve", "servicedirectory.services.update", "servicemanagement.consumerSettings.get", "servicemanagement.consumerSettings.list", "servicemanagement.consumerSettings.update", "servicemanagement.services.bind", "servicemanagement.services.check", "servicemanagement.services.create", "servicemanagement.services.delete", "servicemanagement.services.get", "servicemanagement.services.list", "servicemanagement.services.quota", "servicemanagement.services.report", "servicemanagement.services.update", "servicenetworking.operations.cancel", "servicenetworking.operations.delete", "servicenetworking.operations.get", "servicenetworking.operations.list", "servicenetworking.services.addSubnetwork", "servicenetworking.services.get", "serviceusage.apiKeys.regenerate", "serviceusage.apiKeys.revert", "serviceusage.operations.cancel", "serviceusage.operations.delete", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.quotas.update", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use", "source.repos.get", "source.repos.getIamPolicy", "source.repos.list", "source.repos.update", "spanner.backupOperations.cancel", "spanner.backupOperations.get", "spanner.backupOperations.list", "spanner.backups.create", "spanner.backups.delete", "spanner.backups.get", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.backups.restoreDatabase", "spanner.backups.update", "spanner.databaseOperations.cancel", "spanner.databaseOperations.delete", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginPartitionedDmlTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.create", "spanner.databases.createBackup", "spanner.databases.drop", "spanner.databases.get", "spanner.databases.getDdl", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.databases.update", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instanceOperations.cancel", "spanner.instanceOperations.delete", "spanner.instanceOperations.get", "spanner.instanceOperations.list", "spanner.instances.create", "spanner.instances.delete", "spanner.instances.get", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.instances.update", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list", "stackdriver.projects.get", "stackdriver.resourceMetadata.write", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.list", "storage.hmacKeys.create", "storage.hmacKeys.delete", "storage.hmacKeys.get", "storage.hmacKeys.list", "storage.hmacKeys.update", "storagetransfer.jobs.create", "storagetransfer.jobs.delete", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.jobs.update", "storagetransfer.operations.cancel", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.operations.pause", "storagetransfer.operations.resume", "storagetransfer.projects.getServiceAccount", "subscribewithgoogledeveloper.tools.get", "tpu.acceleratortypes.get", "tpu.acceleratortypes.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.create", "tpu.nodes.delete", "tpu.nodes.get", "tpu.nodes.list", "tpu.nodes.reimage", "tpu.nodes.reset", "tpu.nodes.start", "tpu.nodes.stop", "tpu.operations.get", "tpu.operations.list", "tpu.tensorflowversions.get", "tpu.tensorflowversions.list", "trafficdirector.networks.getConfigs", "trafficdirector.networks.reportMetrics", "transcoder.jobTemplates.create", "transcoder.jobTemplates.delete", "transcoder.jobTemplates.get", "transcoder.jobTemplates.list", "transcoder.jobs.create", "transcoder.jobs.delete", "transcoder.jobs.get", "transcoder.jobs.list", "vmmigration.deployments.create", "vmmigration.deployments.get", "vmmigration.deployments.list", "vmwareengine.services.use", "vmwareengine.services.view", "vpcaccess.connectors.create", "vpcaccess.connectors.delete", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.connectors.use", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list", "workflows.executions.cancel", "workflows.executions.create", "workflows.executions.get", "workflows.executions.list", "workflows.locations.get", "workflows.locations.list", "workflows.operations.cancel", "workflows.operations.get", "workflows.operations.list", "workflows.workflows.create", "workflows.workflows.delete", "workflows.workflows.get", "workflows.workflows.getIamPolicy", "workflows.workflows.list", "workflows.workflows.update"], "roles/viewer": ["accessapproval.requests.get", "accessapproval.requests.list", "accessapproval.settings.get", "accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessPolicies.get", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessZones.get", "accesscontextmanager.accessZones.list", "accesscontextmanager.gcpUserAccessBindings.get", "accesscontextmanager.gcpUserAccessBindings.list", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "actions.agent.get", "actions.agentVersions.get", "actions.agentVersions.list", "aiplatform.annotationSpecs.get", "aiplatform.annotationSpecs.list", "aiplatform.annotations.get", "aiplatform.annotations.list", "aiplatform.batchPredictionJobs.get", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.get", "aiplatform.customJobs.list", "aiplatform.dataItems.get", "aiplatform.dataItems.list", "aiplatform.dataLabelingJobs.get", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.get", "aiplatform.datasets.list", "aiplatform.endpoints.explain", "aiplatform.endpoints.get", "aiplatform.endpoints.list", "aiplatform.endpoints.predict", "aiplatform.hyperparameterTuningJobs.get", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.get", "aiplatform.locations.list", "aiplatform.migratableResources.search", "aiplatform.modelEvaluationSlices.get", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.get", "aiplatform.modelEvaluations.list", "aiplatform.models.get", "aiplatform.models.list", "aiplatform.operations.list", "aiplatform.specialistPools.get", "aiplatform.specialistPools.list", "aiplatform.trainingPipelines.get", "aiplatform.trainingPipelines.list", "apigateway.apiconfigs.get", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apis.get", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.gateways.get", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.locations.get", "apigateway.locations.list", "apigateway.operations.get", "apigateway.operations.list", "apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.appkeys.get", "apigee.apps.get", "apigee.apps.list", "apigee.caches.list", "apigee.canaryevaluations.get", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datastores.get", "apigee.datastores.list", "apigee.deployments.get", "apigee.deployments.list", "apigee.developerappattributes.get", "apigee.developerappattributes.list", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerattributes.get", "apigee.developerattributes.list", "apigee.developers.get", "apigee.developers.list", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.environments.get", "apigee.environments.getDataLocation", "apigee.environments.getIamPolicy", "apigee.environments.list", "apigee.exports.get", "apigee.exports.list", "apigee.flowhooks.getSharedFlow", "apigee.flowhooks.list", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.ingressconfigs.get", "apigee.instanceattachments.get", "apigee.instanceattachments.list", "apigee.instances.get", "apigee.instances.list", "apigee.keystorealiases.generateCSR", "apigee.keystorealiases.get", "apigee.keystorealiases.list", "apigee.keystores.export", "apigee.keystores.get", "apigee.keystores.list", "apigee.keyvaluemaps.list", "apigee.maskconfigs.get", "apigee.operations.get", "apigee.operations.list", "apigee.organizations.get", "apigee.organizations.list", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.queries.get", "apigee.queries.list", "apigee.references.get", "apigee.references.list", "apigee.reports.get", "apigee.reports.list", "apigee.resourcefiles.get", "apigee.resourcefiles.list", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.targetservers.get", "apigee.targetservers.list", "apigee.tracesessions.get", "apigee.tracesessions.list", "apigeeconnect.connections.list", "apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "appengine.applications.get", "appengine.instances.get", "appengine.instances.list", "appengine.memcache.get", "appengine.memcache.getKey", "appengine.memcache.list", "appengine.operations.get", "appengine.operations.list", "appengine.runtimes.actAsAdmin", "appengine.services.get", "appengine.services.list", "appengine.versions.get", "appengine.versions.list", "artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list", "assuredworkloads.operations.get", "assuredworkloads.operations.list", "assuredworkloads.workload.get", "assuredworkloads.workload.list", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotations.list", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.datasets.export", "automl.datasets.get", "automl.datasets.getIamPolicy", "automl.datasets.list", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.getIamPolicy", "automl.locations.list", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.export", "automl.models.get", "automl.models.getIamPolicy", "automl.models.list", "automl.models.predict", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.list", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.list", "bigquery.bireservations.get", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.config.get", "bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.use", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.routines.get", "bigquery.routines.list", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.tables.getIamPolicy", "bigquery.transfers.get", "bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.backups.get", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.instances.get", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "billing.resourceCosts.get", "binaryauthorization.attestors.get", "binaryauthorization.attestors.getIamPolicy", "binaryauthorization.attestors.list", "binaryauthorization.attestors.verifyImageAttested", "binaryauthorization.policy.get", "binaryauthorization.policy.getIamPolicy", "chat.bots.get", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.clients.get", "clientauthconfig.clients.list", "cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudconfig.configs.get", "cloudfunctions.functions.get", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.list", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.registries.get", "cloudiot.registries.getIamPolicy", "cloudiot.registries.list", "cloudiottoken.tokensettings.get", "cloudjobdiscovery.companies.get", "cloudjobdiscovery.companies.list", "cloudjobdiscovery.jobs.get", "cloudjobdiscovery.jobs.search", "cloudjobdiscovery.profiles.get", "cloudjobdiscovery.profiles.search", "cloudjobdiscovery.tenants.get", "cloudkms.cryptoKeyVersions.get", "cloudkms.cryptoKeyVersions.list", "cloudkms.cryptoKeys.get", "cloudkms.cryptoKeys.getIamPolicy", "cloudkms.cryptoKeys.list", "cloudkms.importJobs.get", "cloudkms.importJobs.getIamPolicy", "cloudkms.importJobs.list", "cloudkms.keyRings.get", "cloudkms.keyRings.getIamPolicy", "cloudkms.keyRings.list", "cloudnotifications.activities.list", "cloudonefs.isiloncloud.com/clusters.get", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/fileshares.get", "cloudonefs.isiloncloud.com/fileshares.list", "cloudprivatecatalog.targets.get", "cloudprivatecatalogproducer.associations.get", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.get", "cloudprivatecatalogproducer.catalogs.getIamPolicy", "cloudprivatecatalogproducer.catalogs.list", "cloudprofiler.profiles.list", "cloudscheduler.jobs.fullView", "cloudscheduler.jobs.get", "cloudscheduler.jobs.list", "cloudscheduler.locations.get", "cloudscheduler.locations.list", "cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.instances.export", "cloudsql.instances.get", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.list", "cloudsupport.accounts.get", "cloudsupport.accounts.getIamPolicy", "cloudsupport.accounts.getUserRoles", "cloudsupport.accounts.list", "cloudsupport.operations.get", "cloudsupport.properties.get", "cloudsupport.techCases.get", "cloudsupport.techCases.list", "cloudtasks.locations.get", "cloudtasks.locations.list", "cloudtasks.queues.get", "cloudtasks.queues.list", "cloudtasks.tasks.fullView", "cloudtasks.tasks.get", "cloudtasks.tasks.list", "cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.get", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.get", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "cloudtrace.insights.get", "cloudtrace.insights.list", "cloudtrace.stats.get", "cloudtrace.tasks.create", "cloudtrace.tasks.get", "cloudtrace.tasks.list", "cloudtrace.traces.get", "cloudtrace.traces.list", "cloudtranslate.generalModels.batchPredict", "cloudtranslate.generalModels.get", "cloudtranslate.generalModels.predict", "cloudtranslate.glossaries.batchPredict", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.glossaries.predict", "cloudtranslate.languageDetectionModels.predict", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "cloudvolumesgcp-api.netapp.com/activeDirectories.get", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.get", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.get", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/volumes.get", "cloudvolumesgcp-api.netapp.com/volumes.list", "composer.environments.get", "composer.environments.list", "composer.imageversions.list", "composer.operations.get", "composer.operations.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.createSnapshot", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.useReadOnly", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.useReadOnly", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.useReadOnly", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.useReadOnly", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.useReadOnly", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.entitlements.get", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.get", "consumerprocurement.freeTrials.list", "consumerprocurement.orders.get", "consumerprocurement.orders.list", "container.apiServices.get", "container.apiServices.list", "container.backendConfigs.get", "container.backendConfigs.list", "container.bindings.get", "container.bindings.list", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.get", "container.clusters.list", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.get", "container.configMaps.list", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiNodes.get", "container.csiNodes.list", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.deployments.get", "container.deployments.getStatus", "container.deployments.list", "container.endpoints.get", "container.endpoints.list", "container.events.get", "container.events.list", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.limitRanges.get", "container.limitRanges.list", "container.localSubjectAccessReviews.list", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.networkPolicies.get", "container.networkPolicies.list", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.petSets.get", "container.petSets.list", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podPresets.get", "container.podPresets.list", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.get", "container.podTemplates.list", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.list", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.services.get", "container.services.getStatus", "container.services.list", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.storageClasses.get", "container.storageClasses.list", "container.subjectAccessReviews.list", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.tokenReviews.create", "containeranalysis.notes.get", "containeranalysis.notes.getIamPolicy", "containeranalysis.notes.list", "containeranalysis.occurrences.get", "containeranalysis.occurrences.getIamPolicy", "containeranalysis.occurrences.list", "datacatalog.categories.getIamPolicy", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entryGroups.get", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.taxonomies.get", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.get", "dataflow.snapshots.list", "datafusion.instances.get", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.runtime", "datafusion.locations.get", "datafusion.locations.list", "datafusion.operations.get", "datafusion.operations.list", "datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.label", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.export", "datalabeling.datasets.get", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.get", "datalabeling.operations.list", "datamigration.connectionprofiles.get", "datamigration.connectionprofiles.getIamPolicy", "datamigration.connectionprofiles.list", "datamigration.locations.get", "datamigration.locations.list", "datamigration.migrationjobs.get", "datamigration.migrationjobs.getIamPolicy", "datamigration.migrationjobs.list", "datamigration.migrationjobs.verify", "datamigration.operations.get", "datamigration.operations.list", "dataproc.agents.get", "dataproc.agents.list", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.getIamPolicy", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.use", "dataproc.clusters.get", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.jobs.get", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.operations.get", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.tasks.listInvalidatedLeases", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.list", "dataprocessing.featurecontrols.list", "dataprocessing.groupcontrols.list", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.list", "datastore.entities.get", "datastore.entities.list", "datastore.indexes.get", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.types.get", "deploymentmanager.types.list", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.list", "dialogflow.agents.search", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.environments.get", "dialogflow.environments.getHistory", "dialogflow.environments.list", "dialogflow.environments.lookupHistory", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.fulfillments.get", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.inspectFindings.list", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.jobTriggers.get", "dlp.jobTriggers.list", "dlp.jobs.get", "dlp.jobs.list", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.get", "dns.managedZones.list", "dns.policies.get", "dns.policies.list", "dns.projects.get", "dns.resourceRecordSets.list", "documentai.humanReviewConfigs.get", "documentai.humanReviewConfigs.review", "documentai.labelerPools.get", "documentai.labelerPools.list", "documentai.locations.get", "documentai.locations.list", "documentai.operations.getLegacy", "documentai.processorTypes.list", "documentai.processorVersions.get", "documentai.processorVersions.list", "documentai.processors.fetchHumanReviewDetails", "documentai.processors.get", "documentai.processors.list", "documentai.processors.processBatch", "documentai.processors.processOnline", "domains.locations.get", "domains.locations.list", "domains.operations.get", "domains.operations.list", "domains.registrations.get", "domains.registrations.getIamPolicy", "domains.registrations.list", "earlyaccesscenter.campaigns.get", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.get", "earlyaccesscenter.customerWhitelists.list", "endpoints.portals.listCustomDomains", "errorreporting.applications.list", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groups.list", "essentialcontacts.contacts.get", "essentialcontacts.contacts.list", "eventarc.locations.get", "eventarc.locations.list", "eventarc.operations.get", "eventarc.operations.list", "eventarc.triggers.get", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "file.backups.get", "file.backups.list", "file.instances.get", "file.instances.list", "file.locations.get", "file.locations.list", "file.operations.get", "file.operations.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseabt.experimentresults.get", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.releases.list", "firebaseappdistro.testers.list", "firebaseauth.configs.get", "firebaseauth.users.get", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.sessions.get", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.list", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebaseperformance.data.get", "firebasepredictions.predictions.list", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.rulesets.list", "gameservices.gameServerClusters.get", "gameservices.gameServerClusters.list", "gameservices.gameServerConfigs.get", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.get", "gameservices.gameServerDeployments.list", "gameservices.locations.get", "gameservices.locations.list", "gameservices.operations.get", "gameservices.operations.list", "gameservices.realms.get", "gameservices.realms.list", "gcp.redisenterprise.com/databases.get", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/subscriptions.get", "gcp.redisenterprise.com/subscriptions.list", "genomics.datasets.get", "genomics.datasets.list", "genomics.operations.get", "genomics.operations.list", "gkehub.features.get", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.gateway.get", "gkehub.gateway.getIamPolicy", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.operations.get", "gkehub.operations.list", "healthcare.annotationStores.evaluate", "healthcare.annotationStores.export", "healthcare.annotationStores.get", "healthcare.annotationStores.getIamPolicy", "healthcare.annotationStores.list", "healthcare.annotations.get", "healthcare.annotations.list", "healthcare.attributeDefinitions.get", "healthcare.attributeDefinitions.list", "healthcare.consentArtifacts.get", "healthcare.consentArtifacts.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.getIamPolicy", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.consents.get", "healthcare.consents.list", "healthcare.datasets.get", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.dicomStores.dicomWebRead", "healthcare.dicomStores.export", "healthcare.dicomStores.get", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.list", "healthcare.fhirResources.get", "healthcare.fhirResources.translateConceptMap", "healthcare.fhirStores.executeBundle", "healthcare.fhirStores.export", "healthcare.fhirStores.get", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.list", "healthcare.fhirStores.searchResources", "healthcare.hl7V2Messages.get", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.nlpservice.analyzeEntities", "healthcare.operations.get", "healthcare.operations.list", "healthcare.userDataMappings.get", "healthcare.userDataMappings.list", "iam.googleapis.com/workloadIdentityPoolProviders.get", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPools.get", "iam.googleapis.com/workloadIdentityPools.list", "iam.roles.get", "iam.roles.list", "iam.serviceAccountKeys.get", "iam.serviceAccountKeys.list", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iap.projects.getSettings", "iap.web.getSettings", "iap.webServiceVersions.getSettings", "iap.webServices.getSettings", "iap.webTypes.getSettings", "identityplatform.workloadPoolProviders.get", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPools.get", "identityplatform.workloadPools.list", "lifesciences.operations.get", "lifesciences.operations.list", "logging.buckets.get", "logging.buckets.list", "logging.cmekSettings.get", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.download", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.domains.validateTrust", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.get", "managedidentities.operations.list", "memcache.instances.get", "memcache.instances.list", "memcache.locations.get", "memcache.locations.list", "memcache.operations.get", "memcache.operations.list", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.locations.get", "ml.locations.list", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.trials.get", "ml.trials.list", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "networkmanagement.connectivitytests.get", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.locations.get", "networkmanagement.locations.list", "networkmanagement.operations.get", "networkmanagement.operations.list", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.get", "networkservices.operations.list", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.checkUpgradability", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.get", "notebooks.operations.list", "oauthconfig.clientpolicy.get", "oauthconfig.testusers.get", "oauthconfig.verification.get", "orgpolicy.policy.get", "osconfig.guestPolicies.get", "osconfig.guestPolicies.list", "osconfig.patchDeployments.get", "osconfig.patchDeployments.list", "osconfig.patchJobs.get", "osconfig.patchJobs.list", "privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.locations.get", "privateca.locations.list", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "proximitybeacon.attachments.get", "proximitybeacon.attachments.list", "proximitybeacon.beacons.get", "proximitybeacon.beacons.list", "proximitybeacon.namespaces.get", "proximitybeacon.namespaces.list", "pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.topics.get", "pubsub.topics.list", "pubsublite.subscriptions.get", "pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.list", "pubsublite.subscriptions.subscribe", "pubsublite.topics.computeMessageStats", "pubsublite.topics.get", "pubsublite.topics.getPartitions", "pubsublite.topics.list", "pubsublite.topics.listSubscriptions", "pubsublite.topics.subscribe", "recaptchaenterprise.keys.get", "recaptchaenterprise.keys.list", "recaptchaenterprise.metrics.get", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.computeDiskIdleResourceInsights.get", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceRecommendations.get", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeFirewallInsights.get", "recommender.computeFirewallInsights.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.get", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.get", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.iamPolicyInsights.get", "recommender.iamPolicyInsights.list", "recommender.iamPolicyRecommendations.get", "recommender.iamPolicyRecommendations.list", "recommender.iamServiceAccountInsights.get", "recommender.iamServiceAccountInsights.list", "recommender.locations.get", "recommender.locations.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "redis.instances.get", "redis.instances.list", "redis.locations.get", "redis.locations.list", "redis.operations.get", "redis.operations.list", "remotebuildexecution.actions.get", "remotebuildexecution.blobs.get", "remotebuildexecution.instances.get", "remotebuildexecution.instances.list", "remotebuildexecution.logstreams.get", "remotebuildexecution.workerpools.get", "remotebuildexecution.workerpools.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "run.configurations.get", "run.configurations.list", "run.locations.list", "run.revisions.get", "run.revisions.list", "run.routes.get", "run.routes.list", "run.services.get", "run.services.getIamPolicy", "run.services.list", "runtimeconfig.configs.get", "runtimeconfig.configs.list", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.get", "runtimeconfig.variables.list", "runtimeconfig.variables.watch", "runtimeconfig.waiters.get", "runtimeconfig.waiters.list", "secretmanager.locations.get", "secretmanager.locations.list", "secretmanager.secrets.get", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.versions.get", "secretmanager.versions.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.sources.get", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "servicebroker.bindingoperations.get", "servicebroker.bindingoperations.list", "servicebroker.bindings.get", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.catalogs.get", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.instanceoperations.get", "servicebroker.instanceoperations.list", "servicebroker.instances.get", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "serviceconsumermanagement.consumers.get", "serviceconsumermanagement.quota.get", "serviceconsumermanagement.tenancyu.list", "servicedirectory.endpoints.get", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.locations.get", "servicedirectory.locations.list", "servicedirectory.namespaces.get", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.services.get", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.resolve", "servicemanagement.consumerSettings.get", "servicemanagement.consumerSettings.list", "servicemanagement.services.get", "servicemanagement.services.list", "servicenetworking.operations.get", "servicenetworking.operations.list", "servicenetworking.services.get", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "source.repos.get", "source.repos.getIamPolicy", "source.repos.list", "spanner.backupOperations.get", "spanner.backupOperations.list", "spanner.backups.get", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.get", "spanner.databases.getDdl", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instanceOperations.get", "spanner.instanceOperations.list", "spanner.instances.get", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list", "stackdriver.projects.get", "storage.buckets.list", "storage.hmacKeys.get", "storage.hmacKeys.list", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.projects.getServiceAccount", "subscribewithgoogledeveloper.tools.get", "tpu.acceleratortypes.get", "tpu.acceleratortypes.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.get", "tpu.nodes.list", "tpu.operations.get", "tpu.operations.list", "tpu.tensorflowversions.get", "tpu.tensorflowversions.list", "trafficdirector.networks.getConfigs", "transcoder.jobTemplates.get", "transcoder.jobTemplates.list", "transcoder.jobs.get", "transcoder.jobs.list", "vmmigration.deployments.get", "vmmigration.deployments.list", "vmwareengine.services.view", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.connectors.use", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list", "workflows.executions.get", "workflows.executions.list", "workflows.locations.get", "workflows.locations.list", "workflows.operations.get", "workflows.operations.list", "workflows.workflows.get", "workflows.workflows.getIamPolicy", "workflows.workflows.list"], "roles/accessapproval.viewer": ["accessapproval.requests.get", "accessapproval.requests.list", "accessapproval.settings.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.securityAdmin": ["accessapproval.requests.list", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessPolicies.setIamPolicy", "accesscontextmanager.accessZones.list", "accesscontextmanager.gcpUserAccessBindings.list", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.policies.setIamPolicy", "accesscontextmanager.servicePerimeters.list", "actions.agentVersions.list", "aiplatform.annotationSpecs.list", "aiplatform.annotations.list", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.list", "aiplatform.dataItems.list", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.list", "aiplatform.endpoints.list", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.list", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.list", "aiplatform.models.list", "aiplatform.operations.list", "aiplatform.specialistPools.list", "aiplatform.trainingPipelines.list", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apiconfigs.setIamPolicy", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.apis.setIamPolicy", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.gateways.setIamPolicy", "apigateway.locations.list", "apigateway.operations.list", "apigee.apiproductattributes.list", "apigee.apiproducts.list", "apigee.apps.list", "apigee.caches.list", "apigee.datacollectors.list", "apigee.datastores.list", "apigee.deployments.list", "apigee.developerappattributes.list", "apigee.developerapps.list", "apigee.developerattributes.list", "apigee.developers.list", "apigee.envgroupattachments.list", "apigee.envgroups.list", "apigee.environments.getIamPolicy", "apigee.environments.list", "apigee.environments.setIamPolicy", "apigee.exports.list", "apigee.flowhooks.list", "apigee.hostqueries.list", "apigee.instanceattachments.list", "apigee.instances.list", "apigee.keystorealiases.list", "apigee.keystores.list", "apigee.keyvaluemaps.list", "apigee.operations.list", "apigee.organizations.list", "apigee.proxies.list", "apigee.proxyrevisions.list", "apigee.queries.list", "apigee.references.list", "apigee.reports.list", "apigee.resourcefiles.list", "apigee.sharedflowrevisions.list", "apigee.sharedflows.list", "apigee.targetservers.list", "apigee.tracesessions.list", "apigeeconnect.connections.list", "apikeys.keys.list", "appengine.instances.list", "appengine.memcache.list", "appengine.operations.list", "appengine.services.list", "appengine.versions.list", "artifactregistry.files.list", "artifactregistry.packages.list", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.repositories.setIamPolicy", "artifactregistry.tags.list", "artifactregistry.versions.list", "assuredworkloads.operations.list", "assuredworkloads.workload.list", "automl.annotationSpecs.list", "automl.annotations.list", "automl.columnSpecs.list", "automl.datasets.getIamPolicy", "automl.datasets.list", "automl.datasets.setIamPolicy", "automl.examples.list", "automl.humanAnnotationTasks.list", "automl.locations.getIamPolicy", "automl.locations.list", "automl.locations.setIamPolicy", "automl.modelEvaluations.list", "automl.models.getIamPolicy", "automl.models.list", "automl.models.setIamPolicy", "automl.operations.list", "automl.tableSpecs.list", "automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogs.list", "automlrecommendations.events.list", "automlrecommendations.placements.list", "automlrecommendations.recommendations.list", "bigquery.capacityCommitments.list", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.setIamPolicy", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.jobs.list", "bigquery.models.list", "bigquery.reservationAssignments.list", "bigquery.reservations.list", "bigquery.routines.list", "bigquery.savedqueries.list", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.setIamPolicy", "bigtable.appProfiles.list", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.backups.setIamPolicy", "bigtable.clusters.list", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.instances.setIamPolicy", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "bigtable.tables.setIamPolicy", "billing.accounts.getIamPolicy", "billing.accounts.list", "billing.accounts.setIamPolicy", "billing.budgets.list", "billing.credits.list", "billing.resourceAssociations.list", "billing.subscriptions.list", "binaryauthorization.attestors.getIamPolicy", "binaryauthorization.attestors.list", "binaryauthorization.attestors.setIamPolicy", "binaryauthorization.policy.getIamPolicy", "binaryauthorization.policy.setIamPolicy", "clientauthconfig.brands.list", "clientauthconfig.clients.list", "cloudasset.feeds.list", "cloudbuild.builds.list", "clouddebugger.breakpoints.list", "clouddebugger.debuggees.list", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.list", "cloudfunctions.functions.setIamPolicy", "cloudfunctions.locations.list", "cloudfunctions.operations.list", "cloudiot.devices.list", "cloudiot.registries.getIamPolicy", "cloudiot.registries.list", "cloudiot.registries.setIamPolicy", "cloudjobdiscovery.companies.list", "cloudkms.cryptoKeyVersions.list", "cloudkms.cryptoKeys.getIamPolicy", "cloudkms.cryptoKeys.list", "cloudkms.cryptoKeys.setIamPolicy", "cloudkms.importJobs.getIamPolicy", "cloudkms.importJobs.list", "cloudkms.importJobs.setIamPolicy", "cloudkms.keyRings.getIamPolicy", "cloudkms.keyRings.list", "cloudkms.keyRings.setIamPolicy", "cloudnotifications.activities.list", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/fileshares.list", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.getIamPolicy", "cloudprivatecatalogproducer.catalogs.list", "cloudprivatecatalogproducer.catalogs.setIamPolicy", "cloudprofiler.profiles.list", "cloudscheduler.jobs.list", "cloudscheduler.locations.list", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scans.list", "cloudsql.backupRuns.list", "cloudsql.databases.list", "cloudsql.instances.list", "cloudsql.sslCerts.list", "cloudsql.users.list", "cloudsupport.accounts.getIamPolicy", "cloudsupport.accounts.list", "cloudsupport.accounts.setIamPolicy", "cloudsupport.techCases.list", "cloudtasks.locations.list", "cloudtasks.queues.getIamPolicy", "cloudtasks.queues.list", "cloudtasks.queues.setIamPolicy", "cloudtasks.tasks.list", "cloudtoolresults.executions.list", "cloudtoolresults.histories.list", "cloudtoolresults.steps.list", "cloudtrace.insights.list", "cloudtrace.tasks.list", "cloudtrace.traces.list", "cloudtranslate.glossaries.list", "cloudtranslate.locations.list", "cloudtranslate.operations.list", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/volumes.list", "composer.environments.list", "composer.imageversions.list", "composer.operations.list", "compute.acceleratorTypes.list", "compute.addresses.list", "compute.autoscalers.list", "compute.backendBuckets.list", "compute.backendServices.list", "compute.commitments.list", "compute.diskTypes.list", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.setIamPolicy", "compute.externalVpnGateways.list", "compute.firewalls.list", "compute.forwardingRules.list", "compute.globalAddresses.list", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.list", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.list", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.instanceGroupManagers.list", "compute.instanceGroups.list", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instances.getIamPolicy", "compute.instances.list", "compute.instances.setIamPolicy", "compute.interconnectAttachments.list", "compute.interconnectLocations.list", "compute.interconnects.list", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineTypes.list", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.maintenancePolicies.setIamPolicy", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networks.list", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeGroups.setIamPolicy", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTemplates.setIamPolicy", "compute.nodeTypes.list", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.list", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionOperations.setIamPolicy", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.list", "compute.regions.list", "compute.reservations.list", "compute.resourcePolicies.list", "compute.routers.list", "compute.routes.list", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.setIamPolicy", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.sslCertificates.list", "compute.sslPolicies.list", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.setIamPolicy", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.list", "compute.targetInstances.list", "compute.targetPools.list", "compute.targetSslProxies.list", "compute.targetTcpProxies.list", "compute.targetVpnGateways.list", "compute.urlMaps.list", "compute.vpnGateways.list", "compute.vpnTunnels.list", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zoneOperations.setIamPolicy", "compute.zones.list", "consumerprocurement.accounts.list", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.list", "consumerprocurement.orders.list", "container.apiServices.list", "container.backendConfigs.list", "container.bindings.list", "container.certificateSigningRequests.list", "container.clusterRoleBindings.list", "container.clusterRoles.list", "container.clusters.list", "container.componentStatuses.list", "container.configMaps.list", "container.controllerRevisions.list", "container.cronJobs.list", "container.csiDrivers.list", "container.csiNodes.list", "container.customResourceDefinitions.list", "container.daemonSets.list", "container.deployments.list", "container.endpoints.list", "container.events.list", "container.horizontalPodAutoscalers.list", "container.ingresses.list", "container.initializerConfigurations.list", "container.jobs.list", "container.limitRanges.list", "container.localSubjectAccessReviews.list", "container.namespaces.list", "container.networkPolicies.list", "container.nodes.list", "container.operations.list", "container.persistentVolumeClaims.list", "container.persistentVolumes.list", "container.petSets.list", "container.podDisruptionBudgets.list", "container.podPresets.list", "container.podSecurityPolicies.list", "container.podTemplates.list", "container.pods.list", "container.replicaSets.list", "container.replicationControllers.list", "container.resourceQuotas.list", "container.roleBindings.list", "container.roles.list", "container.runtimeClasses.list", "container.scheduledJobs.list", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.list", "container.services.list", "container.statefulSets.list", "container.storageClasses.list", "container.subjectAccessReviews.list", "container.thirdPartyObjects.list", "container.thirdPartyResources.list", "containeranalysis.notes.getIamPolicy", "containeranalysis.notes.list", "containeranalysis.notes.setIamPolicy", "containeranalysis.occurrences.getIamPolicy", "containeranalysis.occurrences.list", "containeranalysis.occurrences.setIamPolicy", "datacatalog.categories.getIamPolicy", "datacatalog.categories.setIamPolicy", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entries.setIamPolicy", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.entryGroups.setIamPolicy", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.setIamPolicy", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "datacatalog.taxonomies.setIamPolicy", "dataflow.jobs.list", "dataflow.messages.list", "dataflow.snapshots.list", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.setIamPolicy", "datafusion.locations.list", "datafusion.operations.list", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.list", "datalabeling.datasets.list", "datalabeling.examples.list", "datalabeling.instructions.list", "datalabeling.operations.list", "datamigration.connectionprofiles.getIamPolicy", "datamigration.connectionprofiles.list", "datamigration.connectionprofiles.setIamPolicy", "datamigration.locations.list", "datamigration.migrationjobs.getIamPolicy", "datamigration.migrationjobs.list", "datamigration.migrationjobs.setIamPolicy", "datamigration.operations.list", "dataproc.agents.list", "dataproc.autoscalingPolicies.getIamPolicy", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.setIamPolicy", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.clusters.setIamPolicy", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.jobs.setIamPolicy", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.operations.setIamPolicy", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.setIamPolicy", "dataprocessing.featurecontrols.list", "dataprocessing.groupcontrols.list", "datastore.databases.getIamPolicy", "datastore.databases.list", "datastore.databases.setIamPolicy", "datastore.entities.list", "datastore.indexes.list", "datastore.locations.list", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.namespaces.setIamPolicy", "datastore.operations.list", "datastore.statistics.list", "deploymentmanager.compositeTypes.list", "deploymentmanager.deployments.getIamPolicy", "deploymentmanager.deployments.list", "deploymentmanager.deployments.setIamPolicy", "deploymentmanager.manifests.list", "deploymentmanager.operations.list", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.list", "deploymentmanager.types.list", "dialogflow.agents.list", "dialogflow.contexts.list", "dialogflow.documents.list", "dialogflow.entityTypes.list", "dialogflow.environments.list", "dialogflow.flows.list", "dialogflow.intents.list", "dialogflow.knowledgeBases.list", "dialogflow.pages.list", "dialogflow.sessionEntityTypes.list", "dialogflow.transitionRouteGroups.list", "dialogflow.versions.list", "dialogflow.webhooks.list", "dlp.analyzeRiskTemplates.list", "dlp.deidentifyTemplates.list", "dlp.inspectFindings.list", "dlp.inspectTemplates.list", "dlp.jobTriggers.list", "dlp.jobs.list", "dlp.storedInfoTypes.list", "dns.changes.list", "dns.dnsKeys.list", "dns.managedZoneOperations.list", "dns.managedZones.list", "dns.policies.getIamPolicy", "dns.policies.list", "dns.policies.setIamPolicy", "dns.resourceRecordSets.list", "documentai.labelerPools.list", "documentai.locations.list", "documentai.processorTypes.list", "documentai.processorVersions.list", "documentai.processors.list", "domains.locations.list", "domains.operations.list", "domains.registrations.getIamPolicy", "domains.registrations.list", "domains.registrations.setIamPolicy", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.list", "errorreporting.applications.list", "errorreporting.errorEvents.list", "errorreporting.groups.list", "essentialcontacts.contacts.list", "eventarc.locations.list", "eventarc.operations.list", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "eventarc.triggers.setIamPolicy", "file.backups.list", "file.instances.list", "file.locations.list", "file.operations.list", "firebase.links.list", "firebaseabt.experiments.list", "firebaseappdistro.groups.list", "firebaseappdistro.releases.list", "firebaseappdistro.testers.list", "firebasecrashlytics.issues.list", "firebasedatabase.instances.list", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.links.list", "firebaseextensions.configs.list", "firebasehosting.sites.list", "firebaseinappmessaging.campaigns.list", "firebaseml.compressionjobs.list", "firebaseml.models.list", "firebaseml.modelversions.list", "firebasenotifications.messages.list", "firebasepredictions.predictions.list", "firebaserules.releases.list", "firebaserules.rulesets.list", "gameservices.gameServerClusters.list", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.list", "gameservices.locations.list", "gameservices.operations.list", "gameservices.realms.list", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/subscriptions.list", "genomics.datasets.getIamPolicy", "genomics.datasets.list", "genomics.datasets.setIamPolicy", "genomics.operations.list", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.features.setIamPolicy", "gkehub.gateway.getIamPolicy", "gkehub.gateway.setIamPolicy", "gkehub.locations.list", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.memberships.setIamPolicy", "gkehub.operations.list", "healthcare.annotationStores.getIamPolicy", "healthcare.annotationStores.list", "healthcare.annotationStores.setIamPolicy", "healthcare.annotations.list", "healthcare.attributeDefinitions.list", "healthcare.consentArtifacts.list", "healthcare.consentStores.getIamPolicy", "healthcare.consentStores.list", "healthcare.consentStores.setIamPolicy", "healthcare.consents.list", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.datasets.setIamPolicy", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.list", "healthcare.dicomStores.setIamPolicy", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.list", "healthcare.fhirStores.setIamPolicy", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.list", "healthcare.hl7V2Stores.setIamPolicy", "healthcare.locations.list", "healthcare.operations.list", "healthcare.userDataMappings.list", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPools.list", "iam.roles.get", "iam.roles.list", "iam.serviceAccountKeys.list", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iam.serviceAccounts.setIamPolicy", "iap.tunnel.getIamPolicy", "iap.tunnel.setIamPolicy", "iap.tunnelInstances.getIamPolicy", "iap.tunnelInstances.setIamPolicy", "iap.tunnelZones.getIamPolicy", "iap.tunnelZones.setIamPolicy", "iap.web.getIamPolicy", "iap.web.setIamPolicy", "iap.webServiceVersions.getIamPolicy", "iap.webServiceVersions.setIamPolicy", "iap.webServices.getIamPolicy", "iap.webServices.setIamPolicy", "iap.webTypes.getIamPolicy", "iap.webTypes.setIamPolicy", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPools.list", "lifesciences.operations.list", "logging.buckets.list", "logging.exclusions.list", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.privateLogEntries.list", "logging.queries.list", "logging.sinks.list", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.domains.setIamPolicy", "managedidentities.locations.list", "managedidentities.operations.list", "memcache.instances.list", "memcache.locations.list", "memcache.operations.list", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.jobs.setIamPolicy", "ml.locations.list", "ml.models.getIamPolicy", "ml.models.list", "ml.models.setIamPolicy", "ml.operations.list", "ml.studies.getIamPolicy", "ml.studies.list", "ml.studies.setIamPolicy", "ml.trials.list", "ml.versions.list", "monitoring.alertPolicies.list", "monitoring.dashboards.list", "monitoring.groups.list", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.list", "monitoring.publicWidgets.list", "monitoring.services.list", "monitoring.slos.list", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.list", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.connectivitytests.setIamPolicy", "networkmanagement.locations.list", "networkmanagement.operations.list", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.locations.list", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.locations.list", "networkservices.operations.list", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.environments.setIamPolicy", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.setIamPolicy", "notebooks.locations.list", "notebooks.operations.list", "osconfig.guestPolicies.list", "osconfig.patchDeployments.list", "osconfig.patchJobs.list", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateAuthorities.setIamPolicy", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificateRevocationLists.setIamPolicy", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.certificates.setIamPolicy", "privateca.locations.list", "privateca.operations.list", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "privateca.reusableConfigs.setIamPolicy", "proximitybeacon.attachments.list", "proximitybeacon.beacons.getIamPolicy", "proximitybeacon.beacons.list", "proximitybeacon.beacons.setIamPolicy", "proximitybeacon.namespaces.getIamPolicy", "proximitybeacon.namespaces.list", "proximitybeacon.namespaces.setIamPolicy", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.setIamPolicy", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.setIamPolicy", "pubsublite.subscriptions.list", "pubsublite.topics.list", "recaptchaenterprise.keys.list", "recommender.commitmentUtilizationInsights.list", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeFirewallInsights.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.iamPolicyInsights.list", "recommender.iamPolicyRecommendations.list", "recommender.iamServiceAccountInsights.list", "recommender.locations.list", "recommender.usageCommitmentRecommendations.list", "redis.instances.list", "redis.locations.list", "redis.operations.list", "remotebuildexecution.instances.list", "remotebuildexecution.workerpools.list", "resourcemanager.folders.getIamPolicy", "resourcemanager.folders.list", "resourcemanager.folders.setIamPolicy", "resourcemanager.organizations.getIamPolicy", "resourcemanager.organizations.setIamPolicy", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "resourcemanager.projects.setIamPolicy", "run.configurations.list", "run.locations.list", "run.revisions.list", "run.routes.list", "run.services.getIamPolicy", "run.services.list", "run.services.setIamPolicy", "runtimeconfig.configs.getIamPolicy", "runtimeconfig.configs.list", "runtimeconfig.configs.setIamPolicy", "runtimeconfig.operations.list", "runtimeconfig.variables.getIamPolicy", "runtimeconfig.variables.list", "runtimeconfig.variables.setIamPolicy", "runtimeconfig.waiters.getIamPolicy", "runtimeconfig.waiters.list", "runtimeconfig.waiters.setIamPolicy", "secretmanager.locations.list", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.secrets.setIamPolicy", "secretmanager.versions.list", "securitycenter.assets.list", "securitycenter.findings.list", "securitycenter.notificationconfig.list", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "securitycenter.sources.setIamPolicy", "servicebroker.bindingoperations.list", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.bindings.setIamPolicy", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.catalogs.setIamPolicy", "servicebroker.instanceoperations.list", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "servicebroker.instances.setIamPolicy", "serviceconsumermanagement.tenancyu.list", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.endpoints.setIamPolicy", "servicedirectory.locations.list", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.namespaces.setIamPolicy", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.setIamPolicy", "servicemanagement.consumerSettings.getIamPolicy", "servicemanagement.consumerSettings.list", "servicemanagement.consumerSettings.setIamPolicy", "servicemanagement.services.getIamPolicy", "servicemanagement.services.list", "servicemanagement.services.setIamPolicy", "servicenetworking.operations.list", "serviceusage.operations.list", "serviceusage.services.list", "source.repos.getIamPolicy", "source.repos.list", "source.repos.setIamPolicy", "spanner.backupOperations.list", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.backups.setIamPolicy", "spanner.databaseOperations.list", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.setIamPolicy", "spanner.instanceConfigs.list", "spanner.instanceOperations.list", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.instances.setIamPolicy", "spanner.sessions.list", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.hmacKeys.list", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storagetransfer.jobs.list", "storagetransfer.operations.list", "tpu.acceleratortypes.list", "tpu.locations.list", "tpu.nodes.list", "tpu.operations.list", "tpu.tensorflowversions.list", "transcoder.jobTemplates.list", "transcoder.jobs.list", "vmmigration.deployments.list", "vpcaccess.connectors.list", "vpcaccess.locations.list", "vpcaccess.operations.list", "workflows.executions.list", "workflows.locations.list", "workflows.operations.list", "workflows.workflows.getIamPolicy", "workflows.workflows.list", "workflows.workflows.setIamPolicy"], "roles/iam.securityReviewer": ["accessapproval.requests.list", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessZones.list", "accesscontextmanager.gcpUserAccessBindings.list", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.servicePerimeters.list", "actions.agentVersions.list", "aiplatform.annotationSpecs.list", "aiplatform.annotations.list", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.list", "aiplatform.dataItems.list", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.list", "aiplatform.endpoints.list", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.list", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.list", "aiplatform.models.list", "aiplatform.operations.list", "aiplatform.specialistPools.list", "aiplatform.trainingPipelines.list", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.locations.list", "apigateway.operations.list", "apigee.apiproductattributes.list", "apigee.apiproducts.list", "apigee.apps.list", "apigee.caches.list", "apigee.datacollectors.list", "apigee.datastores.list", "apigee.deployments.list", "apigee.developerappattributes.list", "apigee.developerapps.list", "apigee.developerattributes.list", "apigee.developers.list", "apigee.envgroupattachments.list", "apigee.envgroups.list", "apigee.environments.getIamPolicy", "apigee.environments.list", "apigee.exports.list", "apigee.flowhooks.list", "apigee.hostqueries.list", "apigee.instanceattachments.list", "apigee.instances.list", "apigee.keystorealiases.list", "apigee.keystores.list", "apigee.keyvaluemaps.list", "apigee.operations.list", "apigee.organizations.list", "apigee.proxies.list", "apigee.proxyrevisions.list", "apigee.queries.list", "apigee.references.list", "apigee.reports.list", "apigee.resourcefiles.list", "apigee.sharedflowrevisions.list", "apigee.sharedflows.list", "apigee.targetservers.list", "apigee.tracesessions.list", "apigeeconnect.connections.list", "apikeys.keys.list", "appengine.instances.list", "appengine.memcache.list", "appengine.operations.list", "appengine.services.list", "appengine.versions.list", "artifactregistry.files.list", "artifactregistry.packages.list", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.tags.list", "artifactregistry.versions.list", "assuredworkloads.operations.list", "assuredworkloads.workload.list", "automl.annotationSpecs.list", "automl.annotations.list", "automl.columnSpecs.list", "automl.datasets.getIamPolicy", "automl.datasets.list", "automl.examples.list", "automl.humanAnnotationTasks.list", "automl.locations.getIamPolicy", "automl.locations.list", "automl.modelEvaluations.list", "automl.models.getIamPolicy", "automl.models.list", "automl.operations.list", "automl.tableSpecs.list", "automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogs.list", "automlrecommendations.events.list", "automlrecommendations.placements.list", "automlrecommendations.recommendations.list", "bigquery.capacityCommitments.list", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.datasets.getIamPolicy", "bigquery.jobs.list", "bigquery.models.list", "bigquery.reservationAssignments.list", "bigquery.reservations.list", "bigquery.routines.list", "bigquery.savedqueries.list", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigtable.appProfiles.list", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.clusters.list", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "billing.accounts.getIamPolicy", "billing.accounts.list", "billing.budgets.list", "billing.credits.list", "billing.resourceAssociations.list", "billing.subscriptions.list", "binaryauthorization.attestors.getIamPolicy", "binaryauthorization.attestors.list", "binaryauthorization.policy.getIamPolicy", "clientauthconfig.brands.list", "clientauthconfig.clients.list", "cloudasset.feeds.list", "cloudbuild.builds.list", "clouddebugger.breakpoints.list", "clouddebugger.debuggees.list", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.list", "cloudfunctions.locations.list", "cloudfunctions.operations.list", "cloudiot.devices.list", "cloudiot.registries.getIamPolicy", "cloudiot.registries.list", "cloudjobdiscovery.companies.list", "cloudkms.cryptoKeyVersions.list", "cloudkms.cryptoKeys.getIamPolicy", "cloudkms.cryptoKeys.list", "cloudkms.importJobs.getIamPolicy", "cloudkms.importJobs.list", "cloudkms.keyRings.getIamPolicy", "cloudkms.keyRings.list", "cloudnotifications.activities.list", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/fileshares.list", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.getIamPolicy", "cloudprivatecatalogproducer.catalogs.list", "cloudprofiler.profiles.list", "cloudscheduler.jobs.list", "cloudscheduler.locations.list", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scans.list", "cloudsql.backupRuns.list", "cloudsql.databases.list", "cloudsql.instances.list", "cloudsql.sslCerts.list", "cloudsql.users.list", "cloudsupport.accounts.getIamPolicy", "cloudsupport.accounts.list", "cloudsupport.techCases.list", "cloudtasks.locations.list", "cloudtasks.queues.getIamPolicy", "cloudtasks.queues.list", "cloudtasks.tasks.list", "cloudtoolresults.executions.list", "cloudtoolresults.histories.list", "cloudtoolresults.steps.list", "cloudtrace.insights.list", "cloudtrace.tasks.list", "cloudtrace.traces.list", "cloudtranslate.glossaries.list", "cloudtranslate.locations.list", "cloudtranslate.operations.list", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/volumes.list", "composer.environments.list", "composer.imageversions.list", "composer.operations.list", "compute.acceleratorTypes.list", "compute.addresses.list", "compute.autoscalers.list", "compute.backendBuckets.list", "compute.backendServices.list", "compute.commitments.list", "compute.diskTypes.list", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.list", "compute.firewalls.list", "compute.forwardingRules.list", "compute.globalAddresses.list", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.list", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.list", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.list", "compute.instanceGroups.list", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.getIamPolicy", "compute.instances.list", "compute.interconnectAttachments.list", "compute.interconnectLocations.list", "compute.interconnects.list", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.list", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.list", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.list", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.list", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.list", "compute.regions.list", "compute.reservations.list", "compute.resourcePolicies.list", "compute.routers.list", "compute.routes.list", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.list", "compute.sslPolicies.list", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.list", "compute.targetInstances.list", "compute.targetPools.list", "compute.targetSslProxies.list", "compute.targetTcpProxies.list", "compute.targetVpnGateways.list", "compute.urlMaps.list", "compute.vpnGateways.list", "compute.vpnTunnels.list", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.list", "consumerprocurement.accounts.list", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.list", "consumerprocurement.orders.list", "container.apiServices.list", "container.backendConfigs.list", "container.bindings.list", "container.certificateSigningRequests.list", "container.clusterRoleBindings.list", "container.clusterRoles.list", "container.clusters.list", "container.componentStatuses.list", "container.configMaps.list", "container.controllerRevisions.list", "container.cronJobs.list", "container.csiDrivers.list", "container.csiNodes.list", "container.customResourceDefinitions.list", "container.daemonSets.list", "container.deployments.list", "container.endpoints.list", "container.events.list", "container.horizontalPodAutoscalers.list", "container.ingresses.list", "container.initializerConfigurations.list", "container.jobs.list", "container.limitRanges.list", "container.localSubjectAccessReviews.list", "container.namespaces.list", "container.networkPolicies.list", "container.nodes.list", "container.operations.list", "container.persistentVolumeClaims.list", "container.persistentVolumes.list", "container.petSets.list", "container.podDisruptionBudgets.list", "container.podPresets.list", "container.podSecurityPolicies.list", "container.podTemplates.list", "container.pods.list", "container.replicaSets.list", "container.replicationControllers.list", "container.resourceQuotas.list", "container.roleBindings.list", "container.roles.list", "container.runtimeClasses.list", "container.scheduledJobs.list", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.list", "container.services.list", "container.statefulSets.list", "container.storageClasses.list", "container.subjectAccessReviews.list", "container.thirdPartyObjects.list", "container.thirdPartyResources.list", "containeranalysis.notes.getIamPolicy", "containeranalysis.notes.list", "containeranalysis.occurrences.getIamPolicy", "containeranalysis.occurrences.list", "datacatalog.categories.getIamPolicy", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "dataflow.jobs.list", "dataflow.messages.list", "dataflow.snapshots.list", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.locations.list", "datafusion.operations.list", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.list", "datalabeling.datasets.list", "datalabeling.examples.list", "datalabeling.instructions.list", "datalabeling.operations.list", "datamigration.connectionprofiles.getIamPolicy", "datamigration.connectionprofiles.list", "datamigration.locations.list", "datamigration.migrationjobs.getIamPolicy", "datamigration.migrationjobs.list", "datamigration.operations.list", "dataproc.agents.list", "dataproc.autoscalingPolicies.getIamPolicy", "dataproc.autoscalingPolicies.list", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.list", "dataprocessing.featurecontrols.list", "dataprocessing.groupcontrols.list", "datastore.databases.getIamPolicy", "datastore.databases.list", "datastore.entities.list", "datastore.indexes.list", "datastore.locations.list", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.operations.list", "datastore.statistics.list", "deploymentmanager.compositeTypes.list", "deploymentmanager.deployments.getIamPolicy", "deploymentmanager.deployments.list", "deploymentmanager.manifests.list", "deploymentmanager.operations.list", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.list", "deploymentmanager.types.list", "dialogflow.agents.list", "dialogflow.contexts.list", "dialogflow.documents.list", "dialogflow.entityTypes.list", "dialogflow.environments.list", "dialogflow.flows.list", "dialogflow.intents.list", "dialogflow.knowledgeBases.list", "dialogflow.pages.list", "dialogflow.sessionEntityTypes.list", "dialogflow.transitionRouteGroups.list", "dialogflow.versions.list", "dialogflow.webhooks.list", "dlp.analyzeRiskTemplates.list", "dlp.deidentifyTemplates.list", "dlp.inspectFindings.list", "dlp.inspectTemplates.list", "dlp.jobTriggers.list", "dlp.jobs.list", "dlp.storedInfoTypes.list", "dns.changes.list", "dns.dnsKeys.list", "dns.managedZoneOperations.list", "dns.managedZones.list", "dns.policies.getIamPolicy", "dns.policies.list", "dns.resourceRecordSets.list", "documentai.labelerPools.list", "documentai.locations.list", "documentai.processorTypes.list", "documentai.processorVersions.list", "documentai.processors.list", "domains.locations.list", "domains.operations.list", "domains.registrations.getIamPolicy", "domains.registrations.list", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.list", "errorreporting.applications.list", "errorreporting.errorEvents.list", "errorreporting.groups.list", "essentialcontacts.contacts.list", "eventarc.locations.list", "eventarc.operations.list", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "file.backups.list", "file.instances.list", "file.locations.list", "file.operations.list", "firebase.links.list", "firebaseabt.experiments.list", "firebaseappdistro.groups.list", "firebaseappdistro.releases.list", "firebaseappdistro.testers.list", "firebasecrashlytics.issues.list", "firebasedatabase.instances.list", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.links.list", "firebaseextensions.configs.list", "firebasehosting.sites.list", "firebaseinappmessaging.campaigns.list", "firebaseml.compressionjobs.list", "firebaseml.models.list", "firebaseml.modelversions.list", "firebasenotifications.messages.list", "firebasepredictions.predictions.list", "firebaserules.releases.list", "firebaserules.rulesets.list", "gameservices.gameServerClusters.list", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.list", "gameservices.locations.list", "gameservices.operations.list", "gameservices.realms.list", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/subscriptions.list", "genomics.datasets.getIamPolicy", "genomics.datasets.list", "genomics.operations.list", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.gateway.getIamPolicy", "gkehub.locations.list", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.operations.list", "healthcare.annotationStores.getIamPolicy", "healthcare.annotationStores.list", "healthcare.annotations.list", "healthcare.attributeDefinitions.list", "healthcare.consentArtifacts.list", "healthcare.consentStores.getIamPolicy", "healthcare.consentStores.list", "healthcare.consents.list", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.list", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.list", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.list", "healthcare.locations.list", "healthcare.operations.list", "healthcare.userDataMappings.list", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPools.list", "iam.roles.get", "iam.roles.list", "iam.serviceAccountKeys.list", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iap.tunnel.getIamPolicy", "iap.tunnelInstances.getIamPolicy", "iap.tunnelZones.getIamPolicy", "iap.web.getIamPolicy", "iap.webServiceVersions.getIamPolicy", "iap.webServices.getIamPolicy", "iap.webTypes.getIamPolicy", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPools.list", "lifesciences.operations.list", "logging.buckets.list", "logging.exclusions.list", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.privateLogEntries.list", "logging.queries.list", "logging.sinks.list", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.locations.list", "managedidentities.operations.list", "memcache.instances.list", "memcache.locations.list", "memcache.operations.list", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.locations.list", "ml.models.getIamPolicy", "ml.models.list", "ml.operations.list", "ml.studies.getIamPolicy", "ml.studies.list", "ml.trials.list", "ml.versions.list", "monitoring.alertPolicies.list", "monitoring.dashboards.list", "monitoring.groups.list", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.list", "monitoring.publicWidgets.list", "monitoring.services.list", "monitoring.slos.list", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.list", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.locations.list", "networkmanagement.operations.list", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.locations.list", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.locations.list", "networkservices.operations.list", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.locations.list", "notebooks.operations.list", "osconfig.guestPolicies.list", "osconfig.patchDeployments.list", "osconfig.patchJobs.list", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.locations.list", "privateca.operations.list", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "proximitybeacon.attachments.list", "proximitybeacon.beacons.getIamPolicy", "proximitybeacon.beacons.list", "proximitybeacon.namespaces.getIamPolicy", "proximitybeacon.namespaces.list", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsublite.subscriptions.list", "pubsublite.topics.list", "recaptchaenterprise.keys.list", "recommender.commitmentUtilizationInsights.list", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeFirewallInsights.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.iamPolicyInsights.list", "recommender.iamPolicyRecommendations.list", "recommender.iamServiceAccountInsights.list", "recommender.locations.list", "recommender.usageCommitmentRecommendations.list", "redis.instances.list", "redis.locations.list", "redis.operations.list", "remotebuildexecution.instances.list", "remotebuildexecution.workerpools.list", "resourcemanager.folders.getIamPolicy", "resourcemanager.folders.list", "resourcemanager.organizations.getIamPolicy", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "run.configurations.list", "run.locations.list", "run.revisions.list", "run.routes.list", "run.services.getIamPolicy", "run.services.list", "runtimeconfig.configs.getIamPolicy", "runtimeconfig.configs.list", "runtimeconfig.operations.list", "runtimeconfig.variables.getIamPolicy", "runtimeconfig.variables.list", "runtimeconfig.waiters.getIamPolicy", "runtimeconfig.waiters.list", "secretmanager.locations.list", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.versions.list", "securitycenter.assets.list", "securitycenter.findings.list", "securitycenter.notificationconfig.list", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "servicebroker.bindingoperations.list", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.instanceoperations.list", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "serviceconsumermanagement.tenancyu.list", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.locations.list", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicemanagement.consumerSettings.getIamPolicy", "servicemanagement.consumerSettings.list", "servicemanagement.services.getIamPolicy", "servicemanagement.services.list", "servicenetworking.operations.list", "serviceusage.operations.list", "serviceusage.services.list", "source.repos.getIamPolicy", "source.repos.list", "spanner.backupOperations.list", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.databaseOperations.list", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.instanceConfigs.list", "spanner.instanceOperations.list", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.sessions.list", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.hmacKeys.list", "storage.objects.getIamPolicy", "storage.objects.list", "storagetransfer.jobs.list", "storagetransfer.operations.list", "tpu.acceleratortypes.list", "tpu.locations.list", "tpu.nodes.list", "tpu.operations.list", "tpu.tensorflowversions.list", "transcoder.jobTemplates.list", "transcoder.jobs.list", "vmmigration.deployments.list", "vpcaccess.connectors.list", "vpcaccess.locations.list", "vpcaccess.operations.list", "workflows.executions.list", "workflows.locations.list", "workflows.operations.list", "workflows.workflows.getIamPolicy", "workflows.workflows.list"], "roles/accessapproval.configEditor": ["accessapproval.settings.delete", "accessapproval.settings.get", "accessapproval.settings.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/accesscontextmanager.policyAdmin": ["accesscontextmanager.accessLevels.create", "accesscontextmanager.accessLevels.delete", "accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessLevels.replaceAll", "accesscontextmanager.accessLevels.update", "accesscontextmanager.accessPolicies.create", "accesscontextmanager.accessPolicies.delete", "accesscontextmanager.accessPolicies.get", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessPolicies.setIamPolicy", "accesscontextmanager.accessPolicies.update", "accesscontextmanager.accessZones.create", "accesscontextmanager.accessZones.delete", "accesscontextmanager.accessZones.get", "accesscontextmanager.accessZones.list", "accesscontextmanager.accessZones.update", "accesscontextmanager.policies.create", "accesscontextmanager.policies.delete", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.policies.setIamPolicy", "accesscontextmanager.policies.update", "accesscontextmanager.servicePerimeters.commit", "accesscontextmanager.servicePerimeters.create", "accesscontextmanager.servicePerimeters.delete", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "accesscontextmanager.servicePerimeters.replaceAll", "accesscontextmanager.servicePerimeters.update", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/accesscontextmanager.policyEditor": ["accesscontextmanager.accessLevels.create", "accesscontextmanager.accessLevels.delete", "accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessLevels.replaceAll", "accesscontextmanager.accessLevels.update", "accesscontextmanager.accessPolicies.create", "accesscontextmanager.accessPolicies.delete", "accesscontextmanager.accessPolicies.get", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessPolicies.update", "accesscontextmanager.accessZones.create", "accesscontextmanager.accessZones.delete", "accesscontextmanager.accessZones.get", "accesscontextmanager.accessZones.list", "accesscontextmanager.accessZones.update", "accesscontextmanager.policies.create", "accesscontextmanager.policies.delete", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.policies.update", "accesscontextmanager.servicePerimeters.commit", "accesscontextmanager.servicePerimeters.create", "accesscontextmanager.servicePerimeters.delete", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "accesscontextmanager.servicePerimeters.replaceAll", "accesscontextmanager.servicePerimeters.update", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/accesscontextmanager.policyReader": ["accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.accessPolicies.get", "accesscontextmanager.accessPolicies.getIamPolicy", "accesscontextmanager.accessPolicies.list", "accesscontextmanager.accessZones.get", "accesscontextmanager.accessZones.list", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/accesscontextmanager.": ["accesscontextmanager.accessLevels.get", "accesscontextmanager.accessLevels.list", "accesscontextmanager.policies.get", "accesscontextmanager.policies.getIamPolicy", "accesscontextmanager.policies.list", "accesscontextmanager.servicePerimeters.get", "accesscontextmanager.servicePerimeters.list", "logging.exclusions.get", "logging.exclusions.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/accesscontextmanager.gcpAccessAdmin": ["accesscontextmanager.gcpUserAccessBindings.create", "accesscontextmanager.gcpUserAccessBindings.delete", "accesscontextmanager.gcpUserAccessBindings.get", "accesscontextmanager.gcpUserAccessBindings.list", "accesscontextmanager.gcpUserAccessBindings.update"], "roles/accesscontextmanager.gcpAccessReader": ["accesscontextmanager.gcpUserAccessBindings.get", "accesscontextmanager.gcpUserAccessBindings.list"], "roles/actions.Admin": ["actions.agent.claimContentProvider", "actions.agent.get", "actions.agent.update", "actions.agentVersions.create", "actions.agentVersions.delete", "actions.agentVersions.deploy", "actions.agentVersions.get", "actions.agentVersions.list", "firebase.projects.get", "firebase.projects.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use"], "roles/actions.Viewer": ["actions.agent.get", "actions.agentVersions.get", "actions.agentVersions.list", "firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use"], "roles/dialogflow.consoleAgentEditor": ["actions.agentVersions.create", "dialogflow.agents.create", "dialogflow.agents.delete", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.import", "dialogflow.agents.list", "dialogflow.agents.restore", "dialogflow.agents.search", "dialogflow.agents.train", "dialogflow.agents.update", "dialogflow.agents.validate", "dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.documents.create", "dialogflow.documents.delete", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.create", "dialogflow.entityTypes.createEntity", "dialogflow.entityTypes.delete", "dialogflow.entityTypes.deleteEntity", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.entityTypes.update", "dialogflow.entityTypes.updateEntity", "dialogflow.environments.create", "dialogflow.environments.delete", "dialogflow.environments.get", "dialogflow.environments.getHistory", "dialogflow.environments.list", "dialogflow.environments.lookupHistory", "dialogflow.environments.update", "dialogflow.flows.create", "dialogflow.flows.delete", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.flows.train", "dialogflow.flows.update", "dialogflow.flows.validate", "dialogflow.fulfillments.get", "dialogflow.fulfillments.update", "dialogflow.intents.create", "dialogflow.intents.delete", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.intents.update", "dialogflow.knowledgeBases.create", "dialogflow.knowledgeBases.delete", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.create", "dialogflow.pages.delete", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.pages.update", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dialogflow.transitionRouteGroups.create", "dialogflow.transitionRouteGroups.delete", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.transitionRouteGroups.update", "dialogflow.versions.create", "dialogflow.versions.delete", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.versions.load", "dialogflow.versions.update", "dialogflow.webhooks.create", "dialogflow.webhooks.delete", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "dialogflow.webhooks.update", "resourcemanager.projects.get"], "roles/aiplatform.admin": ["aiplatform.annotationSpecs.create", "aiplatform.annotationSpecs.delete", "aiplatform.annotationSpecs.get", "aiplatform.annotationSpecs.list", "aiplatform.annotationSpecs.update", "aiplatform.annotations.create", "aiplatform.annotations.delete", "aiplatform.annotations.get", "aiplatform.annotations.list", "aiplatform.annotations.update", "aiplatform.batchPredictionJobs.cancel", "aiplatform.batchPredictionJobs.create", "aiplatform.batchPredictionJobs.delete", "aiplatform.batchPredictionJobs.get", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.cancel", "aiplatform.customJobs.create", "aiplatform.customJobs.delete", "aiplatform.customJobs.get", "aiplatform.customJobs.list", "aiplatform.dataItems.create", "aiplatform.dataItems.delete", "aiplatform.dataItems.get", "aiplatform.dataItems.list", "aiplatform.dataItems.update", "aiplatform.dataLabelingJobs.cancel", "aiplatform.dataLabelingJobs.create", "aiplatform.dataLabelingJobs.delete", "aiplatform.dataLabelingJobs.get", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.create", "aiplatform.datasets.delete", "aiplatform.datasets.export", "aiplatform.datasets.get", "aiplatform.datasets.import", "aiplatform.datasets.list", "aiplatform.datasets.update", "aiplatform.endpoints.create", "aiplatform.endpoints.delete", "aiplatform.endpoints.deploy", "aiplatform.endpoints.explain", "aiplatform.endpoints.get", "aiplatform.endpoints.list", "aiplatform.endpoints.predict", "aiplatform.endpoints.undeploy", "aiplatform.endpoints.update", "aiplatform.hyperparameterTuningJobs.cancel", "aiplatform.hyperparameterTuningJobs.create", "aiplatform.hyperparameterTuningJobs.delete", "aiplatform.hyperparameterTuningJobs.get", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.get", "aiplatform.locations.list", "aiplatform.migratableResources.migrate", "aiplatform.migratableResources.search", "aiplatform.modelEvaluationSlices.get", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.exportEvaluatedDataItems", "aiplatform.modelEvaluations.get", "aiplatform.modelEvaluations.list", "aiplatform.models.delete", "aiplatform.models.export", "aiplatform.models.get", "aiplatform.models.list", "aiplatform.models.upload", "aiplatform.operations.list", "aiplatform.specialistPools.create", "aiplatform.specialistPools.delete", "aiplatform.specialistPools.get", "aiplatform.specialistPools.list", "aiplatform.specialistPools.update", "aiplatform.trainingPipelines.cancel", "aiplatform.trainingPipelines.create", "aiplatform.trainingPipelines.delete", "aiplatform.trainingPipelines.get", "aiplatform.trainingPipelines.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/aiplatform.user": ["aiplatform.annotationSpecs.create", "aiplatform.annotationSpecs.delete", "aiplatform.annotationSpecs.get", "aiplatform.annotationSpecs.list", "aiplatform.annotationSpecs.update", "aiplatform.annotations.create", "aiplatform.annotations.delete", "aiplatform.annotations.get", "aiplatform.annotations.list", "aiplatform.annotations.update", "aiplatform.batchPredictionJobs.cancel", "aiplatform.batchPredictionJobs.create", "aiplatform.batchPredictionJobs.delete", "aiplatform.batchPredictionJobs.get", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.cancel", "aiplatform.customJobs.create", "aiplatform.customJobs.delete", "aiplatform.customJobs.get", "aiplatform.customJobs.list", "aiplatform.dataItems.create", "aiplatform.dataItems.delete", "aiplatform.dataItems.get", "aiplatform.dataItems.list", "aiplatform.dataItems.update", "aiplatform.dataLabelingJobs.cancel", "aiplatform.dataLabelingJobs.create", "aiplatform.dataLabelingJobs.delete", "aiplatform.dataLabelingJobs.get", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.create", "aiplatform.datasets.delete", "aiplatform.datasets.export", "aiplatform.datasets.get", "aiplatform.datasets.import", "aiplatform.datasets.list", "aiplatform.datasets.update", "aiplatform.endpoints.create", "aiplatform.endpoints.delete", "aiplatform.endpoints.deploy", "aiplatform.endpoints.explain", "aiplatform.endpoints.get", "aiplatform.endpoints.list", "aiplatform.endpoints.predict", "aiplatform.endpoints.undeploy", "aiplatform.endpoints.update", "aiplatform.hyperparameterTuningJobs.cancel", "aiplatform.hyperparameterTuningJobs.create", "aiplatform.hyperparameterTuningJobs.delete", "aiplatform.hyperparameterTuningJobs.get", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.get", "aiplatform.locations.list", "aiplatform.modelEvaluationSlices.get", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.exportEvaluatedDataItems", "aiplatform.modelEvaluations.get", "aiplatform.modelEvaluations.list", "aiplatform.models.delete", "aiplatform.models.export", "aiplatform.models.get", "aiplatform.models.list", "aiplatform.models.upload", "aiplatform.operations.list", "aiplatform.specialistPools.create", "aiplatform.specialistPools.delete", "aiplatform.specialistPools.get", "aiplatform.specialistPools.list", "aiplatform.specialistPools.update", "aiplatform.trainingPipelines.cancel", "aiplatform.trainingPipelines.create", "aiplatform.trainingPipelines.delete", "aiplatform.trainingPipelines.get", "aiplatform.trainingPipelines.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/aiplatform.viewer": ["aiplatform.annotationSpecs.get", "aiplatform.annotationSpecs.list", "aiplatform.annotations.get", "aiplatform.annotations.list", "aiplatform.batchPredictionJobs.get", "aiplatform.batchPredictionJobs.list", "aiplatform.customJobs.get", "aiplatform.customJobs.list", "aiplatform.dataItems.get", "aiplatform.dataItems.list", "aiplatform.dataLabelingJobs.get", "aiplatform.dataLabelingJobs.list", "aiplatform.datasets.get", "aiplatform.datasets.list", "aiplatform.endpoints.get", "aiplatform.endpoints.list", "aiplatform.hyperparameterTuningJobs.get", "aiplatform.hyperparameterTuningJobs.list", "aiplatform.locations.get", "aiplatform.locations.list", "aiplatform.modelEvaluationSlices.get", "aiplatform.modelEvaluationSlices.list", "aiplatform.modelEvaluations.get", "aiplatform.modelEvaluations.list", "aiplatform.models.get", "aiplatform.models.list", "aiplatform.operations.list", "aiplatform.specialistPools.get", "aiplatform.specialistPools.list", "aiplatform.specialistPools.update", "aiplatform.trainingPipelines.get", "aiplatform.trainingPipelines.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/aiplatform.migrator": ["aiplatform.migratableResources.migrate", "aiplatform.migratableResources.search"], "roles/aiplatform.featurestoreAdmin": ["aiplatform.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/androidmanagement.user": ["androidmanagement.enterprises.manage", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/apigateway.admin": ["apigateway.apiconfigs.create", "apigateway.apiconfigs.delete", "apigateway.apiconfigs.get", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apiconfigs.setIamPolicy", "apigateway.apiconfigs.update", "apigateway.apis.create", "apigateway.apis.delete", "apigateway.apis.get", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.apis.setIamPolicy", "apigateway.apis.update", "apigateway.gateways.create", "apigateway.gateways.delete", "apigateway.gateways.get", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.gateways.setIamPolicy", "apigateway.gateways.update", "apigateway.locations.get", "apigateway.locations.list", "apigateway.operations.cancel", "apigateway.operations.delete", "apigateway.operations.get", "apigateway.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/apigateway.viewer": ["apigateway.apiconfigs.get", "apigateway.apiconfigs.getIamPolicy", "apigateway.apiconfigs.list", "apigateway.apis.get", "apigateway.apis.getIamPolicy", "apigateway.apis.list", "apigateway.gateways.get", "apigateway.gateways.getIamPolicy", "apigateway.gateways.list", "apigateway.locations.get", "apigateway.locations.list", "apigateway.operations.get", "apigateway.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/apigee.admin": ["apigee.apiproductattributes.createOrUpdateAll", "apigee.apiproductattributes.delete", "apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproductattributes.update", "apigee.apiproducts.create", "apigee.apiproducts.delete", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.apiproducts.update", "apigee.appkeys.create", "apigee.appkeys.delete", "apigee.appkeys.get", "apigee.appkeys.manage", "apigee.apps.get", "apigee.apps.list", "apigee.caches.delete", "apigee.caches.list", "apigee.canaryevaluations.create", "apigee.canaryevaluations.get", "apigee.datacollectors.create", "apigee.datacollectors.delete", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datacollectors.update", "apigee.datastores.create", "apigee.datastores.delete", "apigee.datastores.get", "apigee.datastores.list", "apigee.datastores.update", "apigee.deployments.create", "apigee.deployments.delete", "apigee.deployments.get", "apigee.deployments.list", "apigee.deployments.update", "apigee.developerappattributes.createOrUpdateAll", "apigee.developerappattributes.delete", "apigee.developerappattributes.get", "apigee.developerappattributes.list", "apigee.developerappattributes.update", "apigee.developerapps.create", "apigee.developerapps.delete", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerapps.manage", "apigee.developerattributes.createOrUpdateAll", "apigee.developerattributes.delete", "apigee.developerattributes.get", "apigee.developerattributes.list", "apigee.developerattributes.update", "apigee.developers.create", "apigee.developers.delete", "apigee.developers.get", "apigee.developers.list", "apigee.developers.update", "apigee.envgroupattachments.create", "apigee.envgroupattachments.delete", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.create", "apigee.envgroups.delete", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.envgroups.update", "apigee.environments.create", "apigee.environments.delete", "apigee.environments.get", "apigee.environments.getDataLocation", "apigee.environments.getIamPolicy", "apigee.environments.getStats", "apigee.environments.list", "apigee.environments.manageRuntime", "apigee.environments.setIamPolicy", "apigee.environments.update", "apigee.exports.create", "apigee.exports.get", "apigee.exports.list", "apigee.flowhooks.attachSharedFlow", "apigee.flowhooks.detachSharedFlow", "apigee.flowhooks.getSharedFlow", "apigee.flowhooks.list", "apigee.hostqueries.create", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.ingressconfigs.get", "apigee.instanceattachments.create", "apigee.instanceattachments.delete", "apigee.instanceattachments.get", "apigee.instanceattachments.list", "apigee.instances.create", "apigee.instances.delete", "apigee.instances.get", "apigee.instances.list", "apigee.instances.reportStatus", "apigee.keystorealiases.create", "apigee.keystorealiases.delete", "apigee.keystorealiases.exportCertificate", "apigee.keystorealiases.generateCSR", "apigee.keystorealiases.get", "apigee.keystorealiases.list", "apigee.keystorealiases.update", "apigee.keystores.create", "apigee.keystores.delete", "apigee.keystores.export", "apigee.keystores.get", "apigee.keystores.list", "apigee.keyvaluemaps.create", "apigee.keyvaluemaps.delete", "apigee.keyvaluemaps.list", "apigee.maskconfigs.get", "apigee.maskconfigs.update", "apigee.operations.get", "apigee.operations.list", "apigee.organizations.create", "apigee.organizations.get", "apigee.organizations.list", "apigee.organizations.update", "apigee.projects.update", "apigee.proxies.create", "apigee.proxies.delete", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.delete", "apigee.proxyrevisions.deploy", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.proxyrevisions.undeploy", "apigee.proxyrevisions.update", "apigee.queries.create", "apigee.queries.get", "apigee.queries.list", "apigee.references.create", "apigee.references.delete", "apigee.references.get", "apigee.references.list", "apigee.references.update", "apigee.reports.create", "apigee.reports.delete", "apigee.reports.get", "apigee.reports.list", "apigee.reports.update", "apigee.resourcefiles.create", "apigee.resourcefiles.delete", "apigee.resourcefiles.get", "apigee.resourcefiles.list", "apigee.resourcefiles.update", "apigee.sharedflowrevisions.delete", "apigee.sharedflowrevisions.deploy", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflowrevisions.undeploy", "apigee.sharedflowrevisions.update", "apigee.sharedflows.create", "apigee.sharedflows.delete", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.targetservers.create", "apigee.targetservers.delete", "apigee.targetservers.get", "apigee.targetservers.list", "apigee.targetservers.update", "apigee.tracesessions.create", "apigee.tracesessions.delete", "apigee.tracesessions.get", "apigee.tracesessions.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/apigee.apiCreator": ["apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.apps.get", "apigee.apps.list", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.environments.get", "apigee.environments.getStats", "apigee.environments.list", "apigee.ingressconfigs.get", "apigee.keyvaluemaps.create", "apigee.keyvaluemaps.delete", "apigee.keyvaluemaps.list", "apigee.organizations.get", "apigee.organizations.list", "apigee.proxies.create", "apigee.proxies.delete", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.delete", "apigee.proxyrevisions.deploy", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.proxyrevisions.undeploy", "apigee.proxyrevisions.update", "apigee.sharedflowrevisions.delete", "apigee.sharedflowrevisions.deploy", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflowrevisions.undeploy", "apigee.sharedflowrevisions.update", "apigee.sharedflows.create", "apigee.sharedflows.delete", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.tracesessions.create", "apigee.tracesessions.delete", "apigee.tracesessions.get", "apigee.tracesessions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/apigee.deployer": ["apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.apps.get", "apigee.apps.list", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.deployments.create", "apigee.deployments.delete", "apigee.deployments.get", "apigee.deployments.list", "apigee.deployments.update", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.environments.get", "apigee.environments.getIamPolicy", "apigee.environments.getStats", "apigee.environments.list", "apigee.environments.setIamPolicy", "apigee.flowhooks.attachSharedFlow", "apigee.flowhooks.detachSharedFlow", "apigee.flowhooks.getSharedFlow", "apigee.flowhooks.list", "apigee.ingressconfigs.get", "apigee.keystorealiases.create", "apigee.keystorealiases.delete", "apigee.keystorealiases.exportCertificate", "apigee.keystorealiases.generateCSR", "apigee.keystorealiases.get", "apigee.keystorealiases.list", "apigee.keystorealiases.update", "apigee.keystores.create", "apigee.keystores.delete", "apigee.keystores.export", "apigee.keystores.get", "apigee.keystores.list", "apigee.keyvaluemaps.create", "apigee.keyvaluemaps.delete", "apigee.keyvaluemaps.list", "apigee.maskconfigs.get", "apigee.maskconfigs.update", "apigee.organizations.get", "apigee.organizations.list", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.deploy", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.proxyrevisions.undeploy", "apigee.references.create", "apigee.references.delete", "apigee.references.get", "apigee.references.list", "apigee.references.update", "apigee.resourcefiles.create", "apigee.resourcefiles.delete", "apigee.resourcefiles.get", "apigee.resourcefiles.list", "apigee.resourcefiles.update", "apigee.sharedflowrevisions.delete", "apigee.sharedflowrevisions.deploy", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflowrevisions.undeploy", "apigee.sharedflowrevisions.update", "apigee.sharedflows.create", "apigee.sharedflows.delete", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.targetservers.create", "apigee.targetservers.delete", "apigee.targetservers.get", "apigee.targetservers.list", "apigee.targetservers.update", "apigee.tracesessions.create", "apigee.tracesessions.delete", "apigee.tracesessions.get", "apigee.tracesessions.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/apigee.developerAdmin": ["apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.appkeys.create", "apigee.appkeys.delete", "apigee.appkeys.get", "apigee.appkeys.manage", "apigee.datacollectors.create", "apigee.datacollectors.delete", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datacollectors.update", "apigee.developerappattributes.createOrUpdateAll", "apigee.developerappattributes.delete", "apigee.developerappattributes.get", "apigee.developerappattributes.list", "apigee.developerappattributes.update", "apigee.developerapps.create", "apigee.developerapps.delete", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerapps.manage", "apigee.developerattributes.createOrUpdateAll", "apigee.developerattributes.delete", "apigee.developerattributes.get", "apigee.developerattributes.list", "apigee.developerattributes.update", "apigee.developers.create", "apigee.developers.delete", "apigee.developers.get", "apigee.developers.list", "apigee.developers.update", "apigee.environments.get", "apigee.environments.getStats", "apigee.hoststats.get", "apigee.organizations.get", "apigee.organizations.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/apigee.readOnlyAdmin": ["apigee.apiproductattributes.get", "apigee.apiproductattributes.list", "apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.appkeys.get", "apigee.apps.get", "apigee.apps.list", "apigee.caches.list", "apigee.canaryevaluations.get", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datastores.get", "apigee.datastores.list", "apigee.deployments.get", "apigee.deployments.list", "apigee.developerappattributes.get", "apigee.developerappattributes.list", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerattributes.get", "apigee.developerattributes.list", "apigee.developers.get", "apigee.developers.list", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.environments.get", "apigee.environments.getDataLocation", "apigee.environments.getIamPolicy", "apigee.environments.getStats", "apigee.environments.list", "apigee.exports.get", "apigee.exports.list", "apigee.flowhooks.getSharedFlow", "apigee.flowhooks.list", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.ingressconfigs.get", "apigee.instanceattachments.get", "apigee.instanceattachments.list", "apigee.instances.get", "apigee.instances.list", "apigee.keystorealiases.get", "apigee.keystorealiases.list", "apigee.keystores.get", "apigee.keystores.list", "apigee.keyvaluemaps.list", "apigee.maskconfigs.get", "apigee.operations.get", "apigee.operations.list", "apigee.organizations.get", "apigee.organizations.list", "apigee.proxies.get", "apigee.proxies.list", "apigee.proxyrevisions.get", "apigee.proxyrevisions.list", "apigee.queries.get", "apigee.queries.list", "apigee.references.get", "apigee.references.list", "apigee.reports.get", "apigee.reports.list", "apigee.resourcefiles.get", "apigee.resourcefiles.list", "apigee.sharedflowrevisions.get", "apigee.sharedflowrevisions.list", "apigee.sharedflows.get", "apigee.sharedflows.list", "apigee.targetservers.get", "apigee.targetservers.list", "apigee.tracesessions.get", "apigee.tracesessions.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/apigee.serviceAgent": ["apigee.apiproducts.get", "apigee.apiproducts.list", "apigee.appkeys.create", "apigee.appkeys.manage", "apigee.apps.get", "apigee.canaryevaluations.create", "apigee.canaryevaluations.get", "apigee.developerapps.create", "apigee.developerapps.delete", "apigee.developerapps.get", "apigee.developerapps.list", "apigee.developerapps.manage", "apigee.developers.create", "apigee.developers.get", "apigee.environments.get", "apigee.environments.getDataLocation", "apigee.environments.manageRuntime", "apigee.ingressconfigs.get", "apigee.instances.reportStatus", "apigee.operations.get", "apigee.operations.list", "apigee.organizations.get", "apigee.proxyrevisions.get", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create"], "roles/apigee.runtimeAgent": ["apigee.canaryevaluations.create", "apigee.canaryevaluations.get", "apigee.ingressconfigs.get", "apigee.instances.reportStatus", "apigee.operations.get", "apigee.operations.list"], "roles/apigee.analyticsEditor": ["apigee.datacollectors.create", "apigee.datacollectors.delete", "apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datacollectors.update", "apigee.datastores.create", "apigee.datastores.delete", "apigee.datastores.get", "apigee.datastores.list", "apigee.datastores.update", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.environments.get", "apigee.environments.getStats", "apigee.environments.list", "apigee.exports.create", "apigee.exports.get", "apigee.exports.list", "apigee.hostqueries.create", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.organizations.get", "apigee.organizations.list", "apigee.queries.create", "apigee.queries.get", "apigee.queries.list", "apigee.reports.create", "apigee.reports.delete", "apigee.reports.get", "apigee.reports.list", "apigee.reports.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/apigee.analyticsViewer": ["apigee.datacollectors.get", "apigee.datacollectors.list", "apigee.datastores.get", "apigee.datastores.list", "apigee.envgroupattachments.get", "apigee.envgroupattachments.list", "apigee.envgroups.get", "apigee.envgroups.list", "apigee.environments.get", "apigee.environments.getStats", "apigee.environments.list", "apigee.exports.get", "apigee.exports.list", "apigee.hostqueries.get", "apigee.hostqueries.list", "apigee.hoststats.get", "apigee.organizations.get", "apigee.organizations.list", "apigee.queries.get", "apigee.queries.list", "apigee.reports.get", "apigee.reports.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/apigee.synchronizerManager": ["apigee.environments.get", "apigee.environments.manageRuntime", "apigee.ingressconfigs.get"], "roles/apigee.analyticsAgent": ["apigee.environments.getDataLocation"], "roles/apigeeconnect.Admin": ["apigeeconnect.connections.list"], "roles/apigeeconnect.Agent": ["apigeeconnect.endpoints.connect"], "roles/firebase.managementServiceAgent": ["apikeys.keys.create", "apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.update", "appengine.applications.create", "appengine.applications.get", "appengine.applications.update", "appengine.operations.get", "appengine.services.list", "clientauthconfig.brands.create", "clientauthconfig.brands.update", "clientauthconfig.clients.create", "clientauthconfig.clients.getWithSecret", "clientauthconfig.clients.list", "clientauthconfig.clients.update", "firebase.clients.create", "firebase.clients.delete", "firebase.clients.get", "firebase.projects.delete", "firebase.projects.get", "firebase.projects.update", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.update", "firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.rulesets.create", "iam.roles.get", "iam.serviceAccounts.create", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.setIamPolicy", "resourcemanager.projects.update", "servicemanagement.services.bind", "serviceusage.services.enable", "serviceusage.services.get", "storage.buckets.create", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.setIamPolicy"], "roles/serviceusage.apiKeysAdmin": ["apikeys.keys.create", "apikeys.keys.delete", "apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "apikeys.keys.update", "serviceusage.apiKeys.regenerate", "serviceusage.apiKeys.revert", "serviceusage.operations.get"], "roles/firebase.admin": ["apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "appengine.applications.get", "automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.getIamPolicy", "automl.datasets.import", "automl.datasets.list", "automl.datasets.setIamPolicy", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.getIamPolicy", "automl.locations.list", "automl.locations.setIamPolicy", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.getIamPolicy", "automl.models.list", "automl.models.predict", "automl.models.setIamPolicy", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.brands.update", "clientauthconfig.clients.create", "clientauthconfig.clients.delete", "clientauthconfig.clients.get", "clientauthconfig.clients.list", "clientauthconfig.clients.update", "cloudconfig.configs.get", "cloudconfig.configs.update", "cloudfunctions.functions.call", "cloudfunctions.functions.create", "cloudfunctions.functions.delete", "cloudfunctions.functions.get", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.invoke", "cloudfunctions.functions.list", "cloudfunctions.functions.setIamPolicy", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.functions.sourceCodeSet", "cloudfunctions.functions.update", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudmessaging.messages.create", "cloudnotifications.activities.list", "cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.create", "cloudtestservice.matrices.get", "cloudtestservice.matrices.update", "cloudtoolresults.executions.create", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.executions.update", "cloudtoolresults.histories.create", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.create", "cloudtoolresults.settings.get", "cloudtoolresults.settings.update", "cloudtoolresults.steps.create", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "cloudtoolresults.steps.update", "datastore.databases.create", "datastore.databases.delete", "datastore.databases.export", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.import", "datastore.databases.list", "datastore.databases.setIamPolicy", "datastore.databases.update", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.create", "datastore.indexes.delete", "datastore.indexes.get", "datastore.indexes.list", "datastore.indexes.update", "datastore.locations.get", "datastore.locations.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.namespaces.setIamPolicy", "datastore.operations.cancel", "datastore.operations.delete", "datastore.operations.get", "datastore.operations.list", "datastore.statistics.get", "datastore.statistics.list", "errorreporting.groups.list", "firebase.billingPlans.get", "firebase.billingPlans.update", "firebase.clients.create", "firebase.clients.delete", "firebase.clients.get", "firebase.links.create", "firebase.links.delete", "firebase.links.list", "firebase.links.update", "firebase.projects.delete", "firebase.projects.get", "firebase.projects.update", "firebaseabt.experimentresults.get", "firebaseabt.experiments.create", "firebaseabt.experiments.delete", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.experiments.update", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "firebasecrash.issues.update", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.config.update", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.issues.update", "firebasecrashlytics.sessions.get", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.destinations.update", "firebasedynamiclinks.domains.create", "firebasedynamiclinks.domains.delete", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.domains.update", "firebasedynamiclinks.links.create", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.links.update", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.create", "firebaseextensions.configs.delete", "firebaseextensions.configs.list", "firebaseextensions.configs.update", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "firebaseinappmessaging.campaigns.create", "firebaseinappmessaging.campaigns.delete", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseinappmessaging.campaigns.update", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "firebaseperformance.config.create", "firebaseperformance.config.delete", "firebaseperformance.config.update", "firebaseperformance.data.get", "firebasepredictions.predictions.create", "firebasepredictions.predictions.delete", "firebasepredictions.predictions.list", "firebasepredictions.predictions.update", "firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "firebaserules.rulesets.test", "logging.logEntries.list", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "runtimeconfig.configs.create", "runtimeconfig.configs.delete", "runtimeconfig.configs.get", "runtimeconfig.configs.list", "runtimeconfig.configs.update", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.create", "runtimeconfig.variables.delete", "runtimeconfig.variables.get", "runtimeconfig.variables.list", "runtimeconfig.variables.update", "runtimeconfig.variables.watch", "runtimeconfig.waiters.create", "runtimeconfig.waiters.delete", "runtimeconfig.waiters.get", "runtimeconfig.waiters.list", "runtimeconfig.waiters.update", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/firebase.developAdmin": ["apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "appengine.applications.get", "automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.getIamPolicy", "automl.datasets.import", "automl.datasets.list", "automl.datasets.setIamPolicy", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.getIamPolicy", "automl.locations.list", "automl.locations.setIamPolicy", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.getIamPolicy", "automl.models.list", "automl.models.predict", "automl.models.setIamPolicy", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.brands.update", "clientauthconfig.clients.get", "clientauthconfig.clients.list", "cloudfunctions.functions.call", "cloudfunctions.functions.create", "cloudfunctions.functions.delete", "cloudfunctions.functions.get", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.invoke", "cloudfunctions.functions.list", "cloudfunctions.functions.setIamPolicy", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.functions.sourceCodeSet", "cloudfunctions.functions.update", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudnotifications.activities.list", "datastore.databases.create", "datastore.databases.delete", "datastore.databases.export", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.import", "datastore.databases.list", "datastore.databases.setIamPolicy", "datastore.databases.update", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.create", "datastore.indexes.delete", "datastore.indexes.get", "datastore.indexes.list", "datastore.indexes.update", "datastore.locations.get", "datastore.locations.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.namespaces.setIamPolicy", "datastore.operations.cancel", "datastore.operations.delete", "datastore.operations.get", "datastore.operations.list", "datastore.statistics.get", "datastore.statistics.list", "errorreporting.groups.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "firebaseextensions.configs.list", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "firebaserules.rulesets.test", "logging.logEntries.list", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "runtimeconfig.configs.create", "runtimeconfig.configs.delete", "runtimeconfig.configs.get", "runtimeconfig.configs.list", "runtimeconfig.configs.update", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.create", "runtimeconfig.variables.delete", "runtimeconfig.variables.get", "runtimeconfig.variables.list", "runtimeconfig.variables.update", "runtimeconfig.variables.watch", "runtimeconfig.waiters.create", "runtimeconfig.waiters.delete", "runtimeconfig.waiters.get", "runtimeconfig.waiters.list", "runtimeconfig.waiters.update", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/securitycenter.controlServiceAgent": ["apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "appengine.applications.get", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.services.get", "appengine.services.list", "appengine.versions.get", "appengine.versions.list", "cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAccessLevel", "cloudasset.assets.exportAccessPolicy", "cloudasset.assets.exportAllAccessPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportBigtableCluster", "cloudasset.assets.exportBigtableInstance", "cloudasset.assets.exportBigtableTable", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsImportJobs", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalAddress", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionAutoscaler", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRegionDisk", "cloudasset.assets.exportComputeRegionInstanceGroup", "cloudasset.assets.exportComputeRegionInstanceGroupManager", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusterrole", "cloudasset.assets.exportContainerClusterrolebinding", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportContainerNamespace", "cloudasset.assets.exportContainerNode", "cloudasset.assets.exportContainerNodepool", "cloudasset.assets.exportContainerPod", "cloudasset.assets.exportContainerRole", "cloudasset.assets.exportContainerRolebinding", "cloudasset.assets.exportContainerregistryImage", "cloudasset.assets.exportDatafusionInstance", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamPolicy", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportManagedidentitiesDomain", "cloudasset.assets.exportOrgPolicy", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportResource", "cloudasset.assets.exportServicePerimeter", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudasset.feeds.create", "cloudasset.feeds.delete", "cloudasset.feeds.get", "cloudasset.feeds.list", "cloudasset.feeds.update", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "cloudsql.instances.connect", "cloudsql.instances.get", "cloudsql.users.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "container.apiServices.get", "container.apiServices.list", "container.backendConfigs.get", "container.backendConfigs.list", "container.bindings.get", "container.bindings.list", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.get", "container.clusters.list", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.get", "container.configMaps.list", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiNodes.get", "container.csiNodes.list", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.deployments.get", "container.deployments.getStatus", "container.deployments.list", "container.endpoints.get", "container.endpoints.list", "container.events.get", "container.events.list", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.limitRanges.get", "container.limitRanges.list", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.networkPolicies.get", "container.networkPolicies.list", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.petSets.get", "container.petSets.list", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podPresets.get", "container.podPresets.list", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.get", "container.podTemplates.list", "container.pods.get", "container.pods.getStatus", "container.pods.list", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.services.get", "container.services.getStatus", "container.services.list", "container.statefulSets.get", "container.statefulSets.getStatus", "container.statefulSets.list", "container.storageClasses.get", "container.storageClasses.list", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.tokenReviews.create", "dlp.jobs.get", "dlp.jobs.list", "logging.buckets.get", "logging.buckets.list", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "orgpolicy.policy.get", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.sources.get", "securitycenter.sources.list", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "serviceusage.quotas.get", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list", "stackdriver.projects.get", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list"], "roles/securitycenter.": ["apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "appengine.applications.get", "cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAccessLevel", "cloudasset.assets.exportAccessPolicy", "cloudasset.assets.exportAllAccessPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportBigtableCluster", "cloudasset.assets.exportBigtableInstance", "cloudasset.assets.exportBigtableTable", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsImportJobs", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalAddress", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionAutoscaler", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRegionDisk", "cloudasset.assets.exportComputeRegionInstanceGroup", "cloudasset.assets.exportComputeRegionInstanceGroupManager", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusterrole", "cloudasset.assets.exportContainerClusterrolebinding", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportContainerNamespace", "cloudasset.assets.exportContainerNode", "cloudasset.assets.exportContainerNodepool", "cloudasset.assets.exportContainerPod", "cloudasset.assets.exportContainerRole", "cloudasset.assets.exportContainerRolebinding", "cloudasset.assets.exportContainerregistryImage", "cloudasset.assets.exportDatafusionInstance", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamPolicy", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportManagedidentitiesDomain", "cloudasset.assets.exportOrgPolicy", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportResource", "cloudasset.assets.exportServicePerimeter", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudasset.feeds.create", "cloudasset.feeds.delete", "cloudasset.feeds.get", "cloudasset.feeds.list", "cloudasset.feeds.update", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "cloudsql.instances.connect", "cloudsql.instances.get", "cloudsql.users.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "container.clusters.get", "container.clusters.list", "logging.buckets.get", "logging.buckets.list", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "orgpolicy.policy.get", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.sources.get", "securitycenter.sources.list", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "stackdriver.projects.get"], "roles/securitycenter.serviceAgent": ["apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup", "appengine.applications.get", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.services.get", "appengine.services.list", "appengine.versions.get", "appengine.versions.list", "cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAccessLevel", "cloudasset.assets.exportAccessPolicy", "cloudasset.assets.exportAllAccessPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportBigtableCluster", "cloudasset.assets.exportBigtableInstance", "cloudasset.assets.exportBigtableTable", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsImportJobs", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalAddress", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionAutoscaler", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRegionDisk", "cloudasset.assets.exportComputeRegionInstanceGroup", "cloudasset.assets.exportComputeRegionInstanceGroupManager", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusterrole", "cloudasset.assets.exportContainerClusterrolebinding", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportContainerNamespace", "cloudasset.assets.exportContainerNode", "cloudasset.assets.exportContainerNodepool", "cloudasset.assets.exportContainerPod", "cloudasset.assets.exportContainerRole", "cloudasset.assets.exportContainerRolebinding", "cloudasset.assets.exportContainerregistryImage", "cloudasset.assets.exportDatafusionInstance", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamPolicy", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportManagedidentitiesDomain", "cloudasset.assets.exportOrgPolicy", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportResource", "cloudasset.assets.exportServicePerimeter", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudasset.feeds.create", "cloudasset.feeds.delete", "cloudasset.feeds.get", "cloudasset.feeds.list", "cloudasset.feeds.update", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "cloudsql.instances.connect", "cloudsql.instances.get", "cloudsql.users.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "container.apiServices.get", "container.apiServices.list", "container.backendConfigs.get", "container.backendConfigs.list", "container.bindings.get", "container.bindings.list", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.get", "container.clusters.list", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.get", "container.configMaps.list", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiNodes.get", "container.csiNodes.list", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.deployments.get", "container.deployments.getStatus", "container.deployments.list", "container.endpoints.get", "container.endpoints.list", "container.events.get", "container.events.list", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.limitRanges.get", "container.limitRanges.list", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.networkPolicies.get", "container.networkPolicies.list", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.petSets.get", "container.petSets.list", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podPresets.get", "container.podPresets.list", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.get", "container.podTemplates.list", "container.pods.get", "container.pods.getStatus", "container.pods.list", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.services.get", "container.services.getStatus", "container.services.list", "container.statefulSets.get", "container.statefulSets.getStatus", "container.statefulSets.list", "container.storageClasses.get", "container.storageClasses.list", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.tokenReviews.create", "dlp.jobs.get", "dlp.jobs.list", "logging.buckets.get", "logging.buckets.list", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "orgpolicy.policy.get", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.sources.get", "securitycenter.sources.list", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "stackdriver.projects.get", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list"], "roles/serviceusage.apiKeysViewer": ["apikeys.keys.get", "apikeys.keys.list", "apikeys.keys.lookup"], "roles/firebase.sdkProvisioningServiceAgent": ["apikeys.keys.list", "clientauthconfig.clients.list", "cloudmessaging.messages.create", "firebase.clients.create", "servicemanagement.services.bind", "serviceusage.services.enable"], "roles/appengine.appCreator": ["appengine.applications.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/appengine.appAdmin": ["appengine.applications.get", "appengine.applications.update", "appengine.instances.delete", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.runtimes.actAsAdmin", "appengine.services.delete", "appengine.services.get", "appengine.services.list", "appengine.services.update", "appengine.versions.create", "appengine.versions.delete", "appengine.versions.get", "appengine.versions.list", "appengine.versions.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/appengine.appViewer": ["appengine.applications.get", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.services.get", "appengine.services.list", "appengine.versions.get", "appengine.versions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/appengine.codeViewer": ["appengine.applications.get", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.services.get", "appengine.services.list", "appengine.versions.get", "appengine.versions.getFileContents", "appengine.versions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/appengine.deployer": ["appengine.applications.get", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.services.get", "appengine.services.list", "appengine.versions.create", "appengine.versions.delete", "appengine.versions.get", "appengine.versions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/appengine.serviceAdmin": ["appengine.applications.get", "appengine.instances.delete", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.services.delete", "appengine.services.get", "appengine.services.list", "appengine.services.update", "appengine.versions.delete", "appengine.versions.get", "appengine.versions.list", "appengine.versions.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudscheduler.admin": ["appengine.applications.get", "cloudscheduler.jobs.create", "cloudscheduler.jobs.delete", "cloudscheduler.jobs.enable", "cloudscheduler.jobs.fullView", "cloudscheduler.jobs.get", "cloudscheduler.jobs.list", "cloudscheduler.jobs.pause", "cloudscheduler.jobs.run", "cloudscheduler.jobs.update", "cloudscheduler.locations.get", "cloudscheduler.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudscheduler.jobRunner": ["appengine.applications.get", "cloudscheduler.jobs.fullView", "cloudscheduler.jobs.run", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudscheduler.viewer": ["appengine.applications.get", "cloudscheduler.jobs.fullView", "cloudscheduler.jobs.get", "cloudscheduler.jobs.list", "cloudscheduler.locations.get", "cloudscheduler.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudsecurityscanner.editor": ["appengine.applications.get", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "compute.addresses.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/composer.serviceAgent": ["appengine.applications.get", "appengine.applications.update", "appengine.instances.delete", "appengine.instances.get", "appengine.instances.list", "appengine.operations.get", "appengine.operations.list", "appengine.runtimes.actAsAdmin", "appengine.services.delete", "appengine.services.get", "appengine.services.list", "appengine.services.update", "appengine.versions.create", "appengine.versions.delete", "appengine.versions.get", "appengine.versions.list", "appengine.versions.update", "artifactregistry.repositories.delete", "cloudnotifications.activities.list", "cloudsql.backupRuns.create", "cloudsql.backupRuns.delete", "cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.create", "cloudsql.databases.delete", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.databases.update", "cloudsql.instances.addServerCa", "cloudsql.instances.clone", "cloudsql.instances.connect", "cloudsql.instances.create", "cloudsql.instances.delete", "cloudsql.instances.demoteMaster", "cloudsql.instances.export", "cloudsql.instances.failover", "cloudsql.instances.get", "cloudsql.instances.import", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.instances.login", "cloudsql.instances.promoteReplica", "cloudsql.instances.resetSslConfig", "cloudsql.instances.restart", "cloudsql.instances.restoreBackup", "cloudsql.instances.rotateServerCa", "cloudsql.instances.startReplica", "cloudsql.instances.stopReplica", "cloudsql.instances.truncateLog", "cloudsql.instances.update", "cloudsql.sslCerts.create", "cloudsql.sslCerts.createEphemeral", "cloudsql.sslCerts.delete", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.create", "cloudsql.users.delete", "cloudsql.users.list", "cloudsql.users.update", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.list", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.approve", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusterRoles.update", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.hostServiceAgent.use", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.create", "container.roleBindings.delete", "container.roleBindings.get", "container.roleBindings.list", "container.roleBindings.update", "container.roles.bind", "container.roles.create", "container.roles.delete", "container.roles.get", "container.roles.list", "container.roles.update", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.deployments.cancelPreview", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.stop", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.typeProviders.update", "deploymentmanager.types.create", "deploymentmanager.types.delete", "deploymentmanager.types.get", "deploymentmanager.types.list", "deploymentmanager.types.update", "firebase.projects.get", "iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "logging.buckets.create", "logging.buckets.delete", "logging.buckets.get", "logging.buckets.list", "logging.buckets.undelete", "logging.buckets.update", "logging.cmekSettings.get", "logging.cmekSettings.update", "logging.exclusions.create", "logging.exclusions.delete", "logging.exclusions.get", "logging.exclusions.list", "logging.exclusions.update", "logging.locations.get", "logging.locations.list", "logging.logEntries.create", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.sinks.create", "logging.sinks.delete", "logging.sinks.get", "logging.sinks.list", "logging.sinks.update", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "orgpolicy.policy.get", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.setIamPolicy", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.setIamPolicy", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.operations.get", "servicenetworking.services.addPeering", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "stackdriver.projects.get", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/datastore.importExportAdmin": ["appengine.applications.get", "datastore.databases.export", "datastore.databases.import", "datastore.operations.cancel", "datastore.operations.get", "datastore.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datastore.indexAdmin": ["appengine.applications.get", "datastore.indexes.create", "datastore.indexes.delete", "datastore.indexes.get", "datastore.indexes.list", "datastore.indexes.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datastore.owner": ["appengine.applications.get", "datastore.databases.create", "datastore.databases.delete", "datastore.databases.export", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.import", "datastore.databases.list", "datastore.databases.setIamPolicy", "datastore.databases.update", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.create", "datastore.indexes.delete", "datastore.indexes.get", "datastore.indexes.list", "datastore.indexes.update", "datastore.locations.get", "datastore.locations.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.namespaces.setIamPolicy", "datastore.operations.cancel", "datastore.operations.delete", "datastore.operations.get", "datastore.operations.list", "datastore.statistics.get", "datastore.statistics.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datastore.user": ["appengine.applications.get", "datastore.databases.get", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datastore.viewer": ["appengine.applications.get", "datastore.databases.get", "datastore.databases.list", "datastore.entities.get", "datastore.entities.list", "datastore.indexes.get", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dlp.serviceAgent": ["appengine.applications.get", "bigquery.datasets.create", "bigquery.datasets.delete", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.datasets.update", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.update", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.setCategory", "bigquery.tables.setIamPolicy", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "cloudkms.cryptoKeyVersions.useToDecrypt", "datacatalog.tagTemplates.create", "datacatalog.tagTemplates.delete", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.setIamPolicy", "datacatalog.tagTemplates.update", "datacatalog.tagTemplates.use", "datastore.databases.get", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.jobs.cancel", "dlp.jobs.create", "dlp.jobs.delete", "dlp.jobs.get", "dlp.jobs.hybridInspect", "dlp.jobs.list", "dlp.kms.encrypt", "firebase.projects.get", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.setIamPolicy", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.setIamPolicy", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/firebase.sdkAdminServiceAgent": ["appengine.applications.get", "cloudconfig.configs.get", "cloudconfig.configs.update", "cloudmessaging.messages.create", "datastore.databases.get", "datastore.databases.list", "datastore.entities.allocateIds", "datastore.entities.create", "datastore.entities.delete", "datastore.entities.get", "datastore.entities.list", "datastore.entities.update", "datastore.indexes.get", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "firebase.clients.create", "firebase.clients.delete", "firebase.clients.get", "firebase.projects.get", "firebase.projects.update", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "firebaserules.releases.get", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "resourcemanager.projects.update", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.list", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/securitycenter.admin": ["appengine.applications.get", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "compute.addresses.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.containerthreatdetectionsettings.update", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.update", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.organizationsettings.update", "securitycenter.securitycentersettings.get", "securitycenter.securitycentersettings.update", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.securityhealthanalyticssettings.update", "securitycenter.sources.get", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "securitycenter.sources.setIamPolicy", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "securitycenter.websecurityscannersettings.update", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/securitycenter.adminEditor": ["appengine.applications.get", "cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.create", "cloudsecurityscanner.scans.delete", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run", "cloudsecurityscanner.scans.update", "compute.addresses.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.assets.runDiscovery", "securitycenter.assetsecuritymarks.update", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.setWorkflowState", "securitycenter.findings.update", "securitycenter.findingsecuritymarks.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.sources.get", "securitycenter.sources.list", "securitycenter.sources.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/websecurityscanner.serviceAgent": ["appengine.applications.get", "compute.addresses.list", "compute.backendServices.get", "compute.forwardingRules.get", "compute.globalForwardingRules.get", "compute.sslCertificates.list", "compute.targetHttpProxies.get", "compute.targetHttpsProxies.get", "compute.urlMaps.get"], "roles/artifactregistry.admin": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.delete", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.create", "artifactregistry.repositories.delete", "artifactregistry.repositories.deleteArtifacts", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.repositories.setIamPolicy", "artifactregistry.repositories.update", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.delete", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.delete", "artifactregistry.versions.get", "artifactregistry.versions.list"], "roles/artifactregistry.reader": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list"], "roles/artifactregistry.repoAdmin": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.delete", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.deleteArtifacts", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.delete", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.delete", "artifactregistry.versions.get", "artifactregistry.versions.list"], "roles/artifactregistry.writer": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.get", "artifactregistry.versions.list"], "roles/cloudbuild.builds.builder": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.get", "artifactregistry.versions.list", "cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "logging.logEntries.create", "pubsub.topics.create", "pubsub.topics.publish", "remotebuildexecution.blobs.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "source.repos.get", "source.repos.list", "storage.buckets.create", "storage.buckets.get", "storage.buckets.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/cloudbuild.serviceAgent": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.get", "artifactregistry.versions.list", "cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "compute.firewalls.get", "compute.firewalls.list", "compute.networks.get", "compute.subnetworks.get", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "logging.logEntries.create", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.publish", "remotebuildexecution.blobs.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use", "source.repos.get", "source.repos.list", "storage.buckets.create", "storage.buckets.get", "storage.buckets.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/composer.worker": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.delete", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.create", "artifactregistry.repositories.delete", "artifactregistry.repositories.deleteArtifacts", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.getIamPolicy", "artifactregistry.repositories.list", "artifactregistry.repositories.setIamPolicy", "artifactregistry.repositories.update", "artifactregistry.repositories.uploadArtifacts", "artifactregistry.tags.create", "artifactregistry.tags.delete", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.tags.update", "artifactregistry.versions.delete", "artifactregistry.versions.get", "artifactregistry.versions.list", "cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.approve", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusterRoles.update", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.hostServiceAgent.use", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.create", "container.roleBindings.delete", "container.roleBindings.get", "container.roleBindings.list", "container.roleBindings.update", "container.roles.bind", "container.roles.create", "container.roles.delete", "container.roles.get", "container.roles.list", "container.roles.update", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "logging.logEntries.create", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.update", "pubsub.topics.updateTag", "remotebuildexecution.blobs.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "source.repos.get", "source.repos.list", "storage.buckets.create", "storage.buckets.get", "storage.buckets.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/containeranalysis.ServiceAgent": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.objects.get", "storage.objects.list"], "roles/containerscanning.ServiceAgent": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.objects.get", "storage.objects.list"], "roles/ml.serviceAgent": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list", "bigquery.datasets.create", "bigquery.datasets.get", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.update", "bigquery.tables.create", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.list", "bigquery.tables.updateData", "firebase.projects.get", "iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.implicitDelegation", "iam.serviceAccounts.list", "iam.serviceAccounts.signBlob", "iam.serviceAccounts.signJwt", "logging.logEntries.create", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/run.serviceAgent": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list", "clientauthconfig.clients.list", "cloudbuild.builds.create", "cloudbuild.builds.get", "compute.globalOperations.get", "compute.networks.access", "iam.serviceAccounts.actAs", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.signBlob", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "run.routes.invoke", "serviceusage.services.use", "storage.objects.get", "storage.objects.list", "vpcaccess.connectors.get", "vpcaccess.connectors.use"], "roles/serverless.serviceAgent": ["artifactregistry.files.get", "artifactregistry.files.list", "artifactregistry.packages.get", "artifactregistry.packages.list", "artifactregistry.repositories.downloadArtifacts", "artifactregistry.repositories.get", "artifactregistry.repositories.list", "artifactregistry.tags.get", "artifactregistry.tags.list", "artifactregistry.versions.get", "artifactregistry.versions.list", "clientauthconfig.clients.list", "cloudbuild.builds.create", "cloudbuild.builds.get", "compute.globalOperations.get", "compute.networks.access", "iam.serviceAccounts.actAs", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.signBlob", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "run.routes.invoke", "serviceusage.services.use", "storage.objects.get", "storage.objects.list", "vpcaccess.connectors.get", "vpcaccess.connectors.use"], "roles/assuredworkloads.admin": ["assuredworkloads.operations.get", "assuredworkloads.operations.list", "assuredworkloads.workload.create", "assuredworkloads.workload.delete", "assuredworkloads.workload.get", "assuredworkloads.workload.list", "assuredworkloads.workload.update", "orgpolicy.policy.get", "orgpolicy.policy.set", "resourcemanager.organizations.get", "resourcemanager.projects.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/assuredworkloads.editor": ["assuredworkloads.operations.get", "assuredworkloads.operations.list", "assuredworkloads.workload.create", "assuredworkloads.workload.delete", "assuredworkloads.workload.get", "assuredworkloads.workload.list", "assuredworkloads.workload.update", "orgpolicy.policy.get", "orgpolicy.policy.set", "resourcemanager.organizations.get", "resourcemanager.projects.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/assuredworkloads.reader": ["assuredworkloads.operations.get", "assuredworkloads.operations.list", "assuredworkloads.workload.get", "assuredworkloads.workload.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/automl.admin": ["automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.getIamPolicy", "automl.datasets.import", "automl.datasets.list", "automl.datasets.setIamPolicy", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.getIamPolicy", "automl.locations.list", "automl.locations.setIamPolicy", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.getIamPolicy", "automl.models.list", "automl.models.predict", "automl.models.setIamPolicy", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.list"], "roles/automl.editor": ["automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.import", "automl.datasets.list", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.list", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.list", "automl.models.predict", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.list"], "roles/datalabeling.serviceAgent": ["automl.annotationSpecs.create", "automl.annotationSpecs.delete", "automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotationSpecs.update", "automl.annotations.approve", "automl.annotations.create", "automl.annotations.list", "automl.annotations.manipulate", "automl.annotations.reject", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.columnSpecs.update", "automl.datasets.create", "automl.datasets.delete", "automl.datasets.export", "automl.datasets.get", "automl.datasets.import", "automl.datasets.list", "automl.datasets.update", "automl.examples.delete", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.create", "automl.humanAnnotationTasks.delete", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.list", "automl.modelEvaluations.create", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.create", "automl.models.delete", "automl.models.deploy", "automl.models.export", "automl.models.get", "automl.models.list", "automl.models.predict", "automl.models.undeploy", "automl.operations.cancel", "automl.operations.delete", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "automl.tableSpecs.update", "bigquery.datasets.create", "bigquery.datasets.get", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.tables.create", "bigquery.tables.get", "bigquery.tables.getData", "ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.locations.get", "ml.locations.list", "ml.models.create", "ml.models.delete", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.models.setIamPolicy", "ml.models.update", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.create", "ml.studies.delete", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.studies.setIamPolicy", "ml.trials.create", "ml.trials.delete", "ml.trials.get", "ml.trials.list", "ml.trials.update", "ml.versions.create", "ml.versions.delete", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "ml.versions.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/automl.viewer": ["automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotations.list", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.datasets.get", "automl.datasets.list", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.list", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.get", "automl.models.list", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.list"], "roles/firebase.developViewer": ["automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotations.list", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.datasets.get", "automl.datasets.list", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.list", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.get", "automl.models.list", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "cloudfunctions.functions.get", "cloudfunctions.functions.list", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudnotifications.activities.list", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.list", "datastore.entities.get", "datastore.entities.list", "datastore.indexes.get", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "errorreporting.groups.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseauth.configs.get", "firebaseauth.users.get", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebaseextensions.configs.list", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaserules.releases.get", "firebaserules.releases.list", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "logging.logEntries.list", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list"], "roles/firebase.viewer": ["automl.annotationSpecs.get", "automl.annotationSpecs.list", "automl.annotations.list", "automl.columnSpecs.get", "automl.columnSpecs.list", "automl.datasets.get", "automl.datasets.list", "automl.examples.get", "automl.examples.list", "automl.humanAnnotationTasks.get", "automl.humanAnnotationTasks.list", "automl.locations.get", "automl.locations.list", "automl.modelEvaluations.get", "automl.modelEvaluations.list", "automl.models.get", "automl.models.list", "automl.operations.get", "automl.operations.list", "automl.tableSpecs.get", "automl.tableSpecs.list", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "cloudconfig.configs.get", "cloudfunctions.functions.get", "cloudfunctions.functions.list", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "cloudnotifications.activities.list", "cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.get", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.get", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "datastore.databases.get", "datastore.databases.getIamPolicy", "datastore.databases.list", "datastore.entities.get", "datastore.entities.list", "datastore.indexes.get", "datastore.indexes.list", "datastore.namespaces.get", "datastore.namespaces.getIamPolicy", "datastore.namespaces.list", "datastore.statistics.get", "datastore.statistics.list", "errorreporting.groups.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseabt.experimentresults.get", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.releases.list", "firebaseappdistro.testers.list", "firebaseauth.configs.get", "firebaseauth.users.get", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.sessions.get", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.list", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebaseperformance.data.get", "firebasepredictions.predictions.list", "firebaserules.releases.get", "firebaserules.releases.list", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "logging.logEntries.list", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list"], "roles/cloudtranslate.admin": ["automl.models.get", "automl.models.predict", "cloudtranslate.generalModels.batchPredict", "cloudtranslate.generalModels.get", "cloudtranslate.generalModels.predict", "cloudtranslate.glossaries.batchPredict", "cloudtranslate.glossaries.create", "cloudtranslate.glossaries.delete", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.glossaries.predict", "cloudtranslate.languageDetectionModels.predict", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.cancel", "cloudtranslate.operations.delete", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtranslate.editor": ["automl.models.get", "automl.models.predict", "cloudtranslate.generalModels.batchPredict", "cloudtranslate.generalModels.get", "cloudtranslate.generalModels.predict", "cloudtranslate.glossaries.batchPredict", "cloudtranslate.glossaries.create", "cloudtranslate.glossaries.delete", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.glossaries.predict", "cloudtranslate.languageDetectionModels.predict", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.cancel", "cloudtranslate.operations.delete", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtranslate.user": ["automl.models.get", "automl.models.predict", "cloudtranslate.generalModels.batchPredict", "cloudtranslate.generalModels.get", "cloudtranslate.generalModels.predict", "cloudtranslate.glossaries.batchPredict", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.glossaries.predict", "cloudtranslate.languageDetectionModels.predict", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtranslate.viewer": ["automl.models.get", "cloudtranslate.generalModels.get", "cloudtranslate.glossaries.get", "cloudtranslate.glossaries.list", "cloudtranslate.locations.get", "cloudtranslate.locations.list", "cloudtranslate.operations.get", "cloudtranslate.operations.list", "cloudtranslate.operations.wait", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/automl.predictor": ["automl.models.predict", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/documentaicore.serviceAgent": ["automl.models.predict", "storage.buckets.get", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/automlrecommendations.admin": ["automlrecommendations.apiKeys.create", "automlrecommendations.apiKeys.delete", "automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.create", "automlrecommendations.catalogItems.delete", "automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogItems.update", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.catalogs.update", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.create", "automlrecommendations.events.list", "automlrecommendations.events.purge", "automlrecommendations.events.rejoin", "automlrecommendations.placements.create", "automlrecommendations.placements.delete", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.create", "automlrecommendations.recommendations.delete", "automlrecommendations.recommendations.list", "automlrecommendations.recommendations.pause", "automlrecommendations.recommendations.resume", "automlrecommendations.recommendations.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/automlrecommendations.editor": ["automlrecommendations.apiKeys.create", "automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.create", "automlrecommendations.catalogItems.delete", "automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogItems.update", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.create", "automlrecommendations.events.list", "automlrecommendations.placements.create", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.create", "automlrecommendations.recommendations.list", "automlrecommendations.recommendations.pause", "automlrecommendations.recommendations.resume", "automlrecommendations.recommendations.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/automlrecommendations.adminViewer": ["automlrecommendations.apiKeys.list", "automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.list", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/automlrecommendations.viewer": ["automlrecommendations.catalogItems.get", "automlrecommendations.catalogItems.list", "automlrecommendations.catalogs.getStats", "automlrecommendations.catalogs.list", "automlrecommendations.eventStores.getStats", "automlrecommendations.events.list", "automlrecommendations.placements.getStats", "automlrecommendations.placements.list", "automlrecommendations.recommendations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/axt.admin": ["axt.labels.get", "axt.labels.set", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.admin": ["bigquery.bireservations.get", "bigquery.bireservations.update", "bigquery.capacityCommitments.create", "bigquery.capacityCommitments.delete", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.capacityCommitments.update", "bigquery.config.get", "bigquery.config.update", "bigquery.connections.create", "bigquery.connections.delete", "bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.setIamPolicy", "bigquery.connections.update", "bigquery.connections.use", "bigquery.datasets.create", "bigquery.datasets.delete", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.datasets.update", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.listAll", "bigquery.jobs.update", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.create", "bigquery.reservationAssignments.delete", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.create", "bigquery.reservations.delete", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.reservations.update", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.savedqueries.create", "bigquery.savedqueries.delete", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.savedqueries.update", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.setCategory", "bigquery.tables.setIamPolicy", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "bigquery.transfers.get", "bigquery.transfers.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.resourceAdmin": ["bigquery.bireservations.get", "bigquery.bireservations.update", "bigquery.capacityCommitments.create", "bigquery.capacityCommitments.delete", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.capacityCommitments.update", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.listAll", "bigquery.reservationAssignments.create", "bigquery.reservationAssignments.delete", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.create", "bigquery.reservations.delete", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.reservations.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.resourceEditor": ["bigquery.bireservations.get", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.listAll", "bigquery.reservationAssignments.create", "bigquery.reservationAssignments.delete", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.create", "bigquery.reservations.delete", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.reservations.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.resourceViewer": ["bigquery.bireservations.get", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.listAll", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.get", "bigquery.reservations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.user": ["bigquery.bireservations.get", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.config.get", "bigquery.datasets.create", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.jobs.create", "bigquery.jobs.list", "bigquery.models.list", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.routines.list", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.tables.list", "bigquery.transfers.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataflow.serviceAgent": ["bigquery.bireservations.get", "bigquery.bireservations.update", "bigquery.capacityCommitments.create", "bigquery.capacityCommitments.delete", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.capacityCommitments.update", "bigquery.config.get", "bigquery.config.update", "bigquery.connections.create", "bigquery.connections.delete", "bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.setIamPolicy", "bigquery.connections.update", "bigquery.connections.use", "bigquery.datasets.create", "bigquery.datasets.delete", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.datasets.update", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.listAll", "bigquery.jobs.update", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.create", "bigquery.reservationAssignments.delete", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.create", "bigquery.reservations.delete", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.reservations.update", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.savedqueries.create", "bigquery.savedqueries.delete", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.savedqueries.update", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.setCategory", "bigquery.tables.setIamPolicy", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "bigquery.transfers.get", "bigquery.transfers.update", "clouddebugger.breakpoints.list", "clouddebugger.breakpoints.listActive", "clouddebugger.breakpoints.update", "clouddebugger.debuggees.create", "cloudnotifications.activities.list", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.list", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "firebase.projects.get", "iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.implicitDelegation", "iam.serviceAccounts.list", "iam.serviceAccounts.signBlob", "iam.serviceAccounts.signJwt", "logging.buckets.create", "logging.buckets.delete", "logging.buckets.get", "logging.buckets.list", "logging.buckets.undelete", "logging.buckets.update", "logging.cmekSettings.get", "logging.cmekSettings.update", "logging.exclusions.create", "logging.exclusions.delete", "logging.exclusions.get", "logging.exclusions.list", "logging.exclusions.update", "logging.locations.get", "logging.locations.list", "logging.logEntries.create", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.sinks.create", "logging.sinks.delete", "logging.sinks.get", "logging.sinks.list", "logging.sinks.update", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.setIamPolicy", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.setIamPolicy", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.operations.get", "servicenetworking.services.addPeering", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "stackdriver.projects.get", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/dataprep.serviceAgent": ["bigquery.bireservations.get", "bigquery.capacityCommitments.get", "bigquery.capacityCommitments.list", "bigquery.config.get", "bigquery.datasets.create", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.jobs.list", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "bigquery.reservationAssignments.list", "bigquery.reservationAssignments.search", "bigquery.reservations.get", "bigquery.reservations.list", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.savedqueries.get", "bigquery.savedqueries.list", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "bigquery.transfers.get", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "dataflow.jobs.cancel", "dataflow.jobs.create", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.jobs.snapshot", "dataflow.jobs.updateContents", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.delete", "dataflow.snapshots.get", "dataflow.snapshots.list", "iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.buckets.get", "storage.buckets.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/bigquery.connectionAdmin": ["bigquery.connections.create", "bigquery.connections.delete", "bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.setIamPolicy", "bigquery.connections.update", "bigquery.connections.use"], "roles/bigquery.connectionUser": ["bigquery.connections.get", "bigquery.connections.getIamPolicy", "bigquery.connections.list", "bigquery.connections.use"], "roles/automl.serviceAgent": ["bigquery.datasets.create", "bigquery.datasets.get", "bigquery.jobs.create", "bigquery.tables.create", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.updateData", "bigtable.tables.get", "bigtable.tables.list", "bigtable.tables.readRows", "serviceusage.services.use", "storage.buckets.get", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/automlrecommendations.serviceAgent": ["bigquery.datasets.create", "bigquery.datasets.get", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.jobs.list", "bigquery.jobs.update", "bigquery.tables.create", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.list", "bigquery.tables.updateData", "cloudnotifications.activities.list", "logging.logEntries.create", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "stackdriver.projects.get", "storage.buckets.create", "storage.buckets.get", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/bigquery.dataEditor": ["bigquery.datasets.create", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.updateTag", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.dataOwner": ["bigquery.datasets.create", "bigquery.datasets.delete", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.datasets.update", "bigquery.datasets.updateTag", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.setCategory", "bigquery.tables.setIamPolicy", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/container.serviceAgent": ["bigquery.datasets.create", "bigquery.datasets.get", "bigquery.tables.create", "bigquery.tables.get", "bigquery.tables.update", "bigquery.tables.updateData", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.get", "compute.packetMirrorings.update", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.setIamPolicy", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.approve", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusterRoles.update", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.hostServiceAgent.use", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.create", "container.roleBindings.delete", "container.roleBindings.get", "container.roleBindings.list", "container.roleBindings.update", "container.roles.bind", "container.roles.create", "container.roles.delete", "container.roles.get", "container.roles.list", "container.roles.update", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.managedZones.create", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSZone", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "iam.serviceAccounts.actAs", "logging.logEntries.create", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "pubsub.topics.create", "pubsub.topics.get", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.operations.get", "servicenetworking.services.addPeering", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.create", "tpu.nodes.delete", "tpu.nodes.get", "tpu.nodes.list", "tpu.operations.get", "tpu.operations.list"], "roles/datafusion.serviceAgent": ["bigquery.datasets.create", "bigquery.datasets.delete", "bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.datasets.setIamPolicy", "bigquery.datasets.update", "bigquery.datasets.updateTag", "bigquery.jobs.create", "bigquery.models.create", "bigquery.models.delete", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.models.updateData", "bigquery.models.updateMetadata", "bigquery.models.updateTag", "bigquery.routines.create", "bigquery.routines.delete", "bigquery.routines.get", "bigquery.routines.list", "bigquery.routines.update", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "bigquery.tables.setCategory", "bigquery.tables.setIamPolicy", "bigquery.tables.update", "bigquery.tables.updateData", "bigquery.tables.updateTag", "bigtable.appProfiles.create", "bigtable.appProfiles.delete", "bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.appProfiles.update", "bigtable.backups.create", "bigtable.backups.delete", "bigtable.backups.get", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.backups.restore", "bigtable.backups.setIamPolicy", "bigtable.backups.update", "bigtable.clusters.create", "bigtable.clusters.delete", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.clusters.update", "bigtable.instances.create", "bigtable.instances.delete", "bigtable.instances.get", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.instances.setIamPolicy", "bigtable.instances.update", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.create", "bigtable.tables.delete", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "bigtable.tables.mutateRows", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "bigtable.tables.setIamPolicy", "bigtable.tables.update", "compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalOperations.get", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networks.addPeering", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.removePeering", "compute.networks.update", "compute.projects.get", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regions.get", "compute.regions.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zones.get", "compute.zones.list", "dataproc.autoscalingPolicies.create", "dataproc.autoscalingPolicies.delete", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.update", "dataproc.autoscalingPolicies.use", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.list", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.list", "dataproc.jobs.update", "dataproc.operations.delete", "dataproc.operations.get", "dataproc.operations.list", "dataproc.workflowTemplates.create", "dataproc.workflowTemplates.delete", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.instantiate", "dataproc.workflowTemplates.instantiateInline", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.update", "firebase.projects.get", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.list", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.list", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.list", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.list", "networkservices.httpFilters.get", "networkservices.httpFilters.list", "networkservices.httpfilters.get", "networkservices.httpfilters.list", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.get", "networkservices.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "spanner.databaseOperations.cancel", "spanner.databaseOperations.delete", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginPartitionedDmlTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.getDdl", "spanner.databases.list", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instances.get", "spanner.instances.list", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/bigquery.dataViewer": ["bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.models.export", "bigquery.models.getData", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.routines.get", "bigquery.routines.list", "bigquery.tables.export", "bigquery.tables.get", "bigquery.tables.getData", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquery.metadataViewer": ["bigquery.datasets.get", "bigquery.datasets.getIamPolicy", "bigquery.models.getMetadata", "bigquery.models.list", "bigquery.routines.get", "bigquery.routines.list", "bigquery.tables.get", "bigquery.tables.getIamPolicy", "bigquery.tables.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudasset.serviceAgent": ["bigquery.datasets.get", "bigquery.jobs.create", "bigquery.jobs.get", "bigquery.tables.create", "bigquery.tables.delete", "bigquery.tables.get", "bigquery.tables.update", "bigquery.tables.updateData", "pubsub.topics.publish", "storage.buckets.create", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.objects.create", "storage.objects.delete", "storage.objects.get"], "roles/datacatalog.admin": ["bigquery.datasets.get", "bigquery.datasets.updateTag", "bigquery.models.getMetadata", "bigquery.models.updateTag", "bigquery.tables.get", "bigquery.tables.updateTag", "datacatalog.categories.getIamPolicy", "datacatalog.categories.setIamPolicy", "datacatalog.entries.create", "datacatalog.entries.delete", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entries.setIamPolicy", "datacatalog.entries.update", "datacatalog.entries.updateTag", "datacatalog.entryGroups.create", "datacatalog.entryGroups.delete", "datacatalog.entryGroups.get", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.entryGroups.setIamPolicy", "datacatalog.entryGroups.update", "datacatalog.tagTemplates.create", "datacatalog.tagTemplates.delete", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.setIamPolicy", "datacatalog.tagTemplates.update", "datacatalog.tagTemplates.use", "datacatalog.taxonomies.create", "datacatalog.taxonomies.delete", "datacatalog.taxonomies.get", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "datacatalog.taxonomies.setIamPolicy", "datacatalog.taxonomies.update", "pubsub.topics.get", "pubsub.topics.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.viewer": ["bigquery.datasets.get", "bigquery.models.getMetadata", "bigquery.tables.get", "datacatalog.entries.get", "datacatalog.entries.list", "datacatalog.entryGroups.get", "datacatalog.entryGroups.list", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getTag", "datacatalog.taxonomies.get", "datacatalog.taxonomies.list", "pubsub.topics.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.tagEditor": ["bigquery.datasets.updateTag", "bigquery.models.updateTag", "bigquery.tables.updateTag", "datacatalog.entries.updateTag", "pubsub.topics.updateTag"], "roles/bigquery.jobUser": ["bigquery.jobs.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigquerydatatransfer.serviceAgent": ["bigquery.jobs.create", "iam.serviceAccounts.getAccessToken", "logging.logEntries.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datastudio.serviceAgent": ["bigquery.jobs.create"], "roles/bigquery.readSessionUser": ["bigquery.readsessions.create", "bigquery.readsessions.getData", "bigquery.readsessions.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/bigtable.admin": ["bigtable.appProfiles.create", "bigtable.appProfiles.delete", "bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.appProfiles.update", "bigtable.backups.create", "bigtable.backups.delete", "bigtable.backups.get", "bigtable.backups.getIamPolicy", "bigtable.backups.list", "bigtable.backups.restore", "bigtable.backups.setIamPolicy", "bigtable.backups.update", "bigtable.clusters.create", "bigtable.clusters.delete", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.clusters.update", "bigtable.instances.create", "bigtable.instances.delete", "bigtable.instances.get", "bigtable.instances.getIamPolicy", "bigtable.instances.list", "bigtable.instances.setIamPolicy", "bigtable.instances.update", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.create", "bigtable.tables.delete", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.getIamPolicy", "bigtable.tables.list", "bigtable.tables.mutateRows", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "bigtable.tables.setIamPolicy", "bigtable.tables.update", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.timeSeries.list", "resourcemanager.projects.get"], "roles/bigtable.reader": ["bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.backups.get", "bigtable.backups.list", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.instances.get", "bigtable.instances.list", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.list", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.timeSeries.list", "resourcemanager.projects.get"], "roles/bigtable.user": ["bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.backups.get", "bigtable.backups.list", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.instances.get", "bigtable.instances.list", "bigtable.keyvisualizer.get", "bigtable.keyvisualizer.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.list", "bigtable.tables.mutateRows", "bigtable.tables.readRows", "bigtable.tables.sampleRowKeys", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.timeSeries.list", "resourcemanager.projects.get"], "roles/bigtable.viewer": ["bigtable.appProfiles.get", "bigtable.appProfiles.list", "bigtable.backups.get", "bigtable.backups.list", "bigtable.clusters.get", "bigtable.clusters.list", "bigtable.instances.get", "bigtable.instances.list", "bigtable.locations.list", "bigtable.tables.checkConsistency", "bigtable.tables.generateConsistencyToken", "bigtable.tables.get", "bigtable.tables.list", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.timeSeries.list", "resourcemanager.projects.get"], "roles/billing.admin": ["billing.accounts.close", "billing.accounts.get", "billing.accounts.getIamPolicy", "billing.accounts.getPaymentInfo", "billing.accounts.getSpendingInformation", "billing.accounts.getUsageExportSpec", "billing.accounts.list", "billing.accounts.move", "billing.accounts.redeemPromotion", "billing.accounts.removeFromOrganization", "billing.accounts.reopen", "billing.accounts.setIamPolicy", "billing.accounts.update", "billing.accounts.updatePaymentInfo", "billing.accounts.updateUsageExportSpec", "billing.budgets.create", "billing.budgets.delete", "billing.budgets.get", "billing.budgets.list", "billing.budgets.update", "billing.credits.list", "billing.resourceAssociations.create", "billing.resourceAssociations.delete", "billing.resourceAssociations.list", "billing.subscriptions.create", "billing.subscriptions.get", "billing.subscriptions.list", "billing.subscriptions.update", "cloudnotifications.activities.list", "consumerprocurement.accounts.create", "consumerprocurement.accounts.delete", "consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.orders.cancel", "consumerprocurement.orders.get", "consumerprocurement.orders.list", "consumerprocurement.orders.modify", "consumerprocurement.orders.place", "dataprocessing.groupcontrols.list", "logging.logEntries.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.privateLogEntries.list", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.commitmentUtilizationInsights.update", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "recommender.usageCommitmentRecommendations.update", "resourcemanager.projects.createBillingAssignment", "resourcemanager.projects.deleteBillingAssignment"], "roles/billing.creator": ["billing.accounts.create", "resourcemanager.organizations.get"], "roles/appengineflex.serviceAgent": ["billing.accounts.get", "cloudbuild.builds.create", "cloudbuild.builds.get", "compute.addresses.create", "compute.addresses.delete", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.update", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.update", "compute.backendServices.use", "compute.disks.list", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.globalAddresses.create", "compute.globalAddresses.delete", "compute.globalAddresses.get", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalOperations.get", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.update", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.get", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.update", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.useReadOnly", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.getSerialPortOutput", "compute.instances.list", "compute.instances.reset", "compute.instances.setLabels", "compute.instances.setMetadata", "compute.instances.setTags", "compute.instances.start", "compute.instances.stop", "compute.instances.use", "compute.machineTypes.get", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionOperations.get", "compute.regions.get", "compute.subnetworks.delete", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.update", "compute.urlMaps.use", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "deploymentmanager.compositeTypes.get", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.get", "iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.signBlob", "iam.serviceAccounts.signJwt", "logging.logEntries.create", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.update", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.setIamPolicy", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list"], "roles/billing.user": ["billing.accounts.get", "billing.accounts.getIamPolicy", "billing.accounts.list", "billing.accounts.redeemPromotion", "billing.credits.list", "billing.resourceAssociations.create"], "roles/billing.viewer": ["billing.accounts.get", "billing.accounts.getIamPolicy", "billing.accounts.getPaymentInfo", "billing.accounts.getSpendingInformation", "billing.accounts.getUsageExportSpec", "billing.accounts.list", "billing.budgets.get", "billing.budgets.list", "billing.credits.list", "billing.resourceAssociations.list", "billing.subscriptions.get", "billing.subscriptions.list", "consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.orders.get", "consumerprocurement.orders.list", "dataprocessing.groupcontrols.list", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list"], "roles/dataprocessing.admin": ["billing.accounts.get", "billing.accounts.list", "dataprocessing.featurecontrols.list", "dataprocessing.featurecontrols.update", "dataprocessing.groupcontrols.list", "dataprocessing.groupcontrols.update"], "roles/recommender.billingAccountCudAdmin": ["billing.accounts.get", "billing.accounts.list", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.commitmentUtilizationInsights.update", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "recommender.usageCommitmentRecommendations.update"], "roles/recommender.billingAccountCudViewer": ["billing.accounts.get", "billing.accounts.list", "recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list"], "roles/vpcaccess.serviceAgent": ["billing.accounts.get", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.disks.create", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.get", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.update", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.useReadOnly", "compute.instances.create", "compute.instances.delete", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.list", "compute.instances.reset", "compute.instances.setLabels", "compute.instances.setMetadata", "compute.instances.setTags", "compute.instances.start", "compute.instances.stop", "compute.instances.use", "compute.machineTypes.get", "compute.networks.get", "compute.networks.use", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regions.get", "compute.regions.list", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "deploymentmanager.compositeTypes.get", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.get", "logging.logEntries.create", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.update", "resourcemanager.projects.get"], "roles/binaryauthorization.attestorsAdmin": ["binaryauthorization.attestors.create", "binaryauthorization.attestors.delete", "binaryauthorization.attestors.get", "binaryauthorization.attestors.getIamPolicy", "binaryauthorization.attestors.list", "binaryauthorization.attestors.setIamPolicy", "binaryauthorization.attestors.update", "binaryauthorization.attestors.verifyImageAttested", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.attestorsEditor": ["binaryauthorization.attestors.create", "binaryauthorization.attestors.delete", "binaryauthorization.attestors.get", "binaryauthorization.attestors.list", "binaryauthorization.attestors.update", "binaryauthorization.attestors.verifyImageAttested", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.attestorsVerifier": ["binaryauthorization.attestors.get", "binaryauthorization.attestors.list", "binaryauthorization.attestors.verifyImageAttested", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.attestorsViewer": ["binaryauthorization.attestors.get", "binaryauthorization.attestors.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.serviceAgent": ["binaryauthorization.attestors.get", "binaryauthorization.attestors.list", "binaryauthorization.attestors.verifyImageAttested", "containeranalysis.notes.get", "containeranalysis.notes.list", "containeranalysis.notes.listOccurrences", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.policyAdmin": ["binaryauthorization.policy.get", "binaryauthorization.policy.getIamPolicy", "binaryauthorization.policy.setIamPolicy", "binaryauthorization.policy.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.policyEditor": ["binaryauthorization.policy.get", "binaryauthorization.policy.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/binaryauthorization.policyViewer": ["binaryauthorization.policy.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/chat.owner": ["chat.bots.get", "chat.bots.update"], "roles/chat.reader": ["chat.bots.get"], "roles/oauthconfig.editor": ["clientauthconfig.brands.create", "clientauthconfig.brands.delete", "clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.brands.update", "clientauthconfig.clients.create", "clientauthconfig.clients.createSecret", "clientauthconfig.clients.delete", "clientauthconfig.clients.get", "clientauthconfig.clients.getWithSecret", "clientauthconfig.clients.list", "clientauthconfig.clients.listWithSecrets", "clientauthconfig.clients.undelete", "clientauthconfig.clients.update", "oauthconfig.clientpolicy.get", "oauthconfig.testusers.get", "oauthconfig.testusers.update", "oauthconfig.verification.get", "oauthconfig.verification.submit", "oauthconfig.verification.update"], "roles/oauthconfig.viewer": ["clientauthconfig.brands.get", "clientauthconfig.brands.list", "clientauthconfig.clients.get", "clientauthconfig.clients.list", "oauthconfig.clientpolicy.get", "oauthconfig.testusers.get", "oauthconfig.verification.get"], "roles/firebase.growthAdmin": ["clientauthconfig.clients.get", "clientauthconfig.clients.list", "cloudconfig.configs.get", "cloudconfig.configs.update", "cloudmessaging.messages.create", "cloudnotifications.activities.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseabt.experimentresults.get", "firebaseabt.experiments.create", "firebaseabt.experiments.delete", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.experiments.update", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.destinations.update", "firebasedynamiclinks.domains.create", "firebasedynamiclinks.domains.delete", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.domains.update", "firebasedynamiclinks.links.create", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.links.update", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.list", "firebaseinappmessaging.campaigns.create", "firebaseinappmessaging.campaigns.delete", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseinappmessaging.campaigns.update", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "firebasepredictions.predictions.create", "firebasepredictions.predictions.delete", "firebasepredictions.predictions.list", "firebasepredictions.predictions.update", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudfunctions.serviceAgent": ["clientauthconfig.clients.list", "cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "cloudfunctions.functions.invoke", "compute.globalOperations.get", "compute.networks.access", "firebasedatabase.instances.get", "firebasedatabase.instances.update", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.signBlob", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.get", "pubsub.topics.list", "remotebuildexecution.blobs.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.use", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "vpcaccess.connectors.get", "vpcaccess.connectors.use"], "roles/cloudasset.owner": ["cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAccessLevel", "cloudasset.assets.exportAccessPolicy", "cloudasset.assets.exportAllAccessPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportBigtableCluster", "cloudasset.assets.exportBigtableInstance", "cloudasset.assets.exportBigtableTable", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsImportJobs", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalAddress", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionAutoscaler", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRegionDisk", "cloudasset.assets.exportComputeRegionInstanceGroup", "cloudasset.assets.exportComputeRegionInstanceGroupManager", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusterrole", "cloudasset.assets.exportContainerClusterrolebinding", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportContainerNamespace", "cloudasset.assets.exportContainerNode", "cloudasset.assets.exportContainerNodepool", "cloudasset.assets.exportContainerPod", "cloudasset.assets.exportContainerRole", "cloudasset.assets.exportContainerRolebinding", "cloudasset.assets.exportContainerregistryImage", "cloudasset.assets.exportDatafusionInstance", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamPolicy", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportManagedidentitiesDomain", "cloudasset.assets.exportOrgPolicy", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportResource", "cloudasset.assets.exportServicePerimeter", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources", "cloudasset.feeds.create", "cloudasset.feeds.delete", "cloudasset.feeds.get", "cloudasset.feeds.list", "cloudasset.feeds.update"], "roles/cloudasset.viewer": ["cloudasset.assets.analyzeIamPolicy", "cloudasset.assets.exportAccessLevel", "cloudasset.assets.exportAccessPolicy", "cloudasset.assets.exportAllAccessPolicy", "cloudasset.assets.exportAppengineApplications", "cloudasset.assets.exportAppengineServices", "cloudasset.assets.exportAppengineVersions", "cloudasset.assets.exportBigqueryDatasets", "cloudasset.assets.exportBigqueryTables", "cloudasset.assets.exportBigtableCluster", "cloudasset.assets.exportBigtableInstance", "cloudasset.assets.exportBigtableTable", "cloudasset.assets.exportCloudbillingBillingAccounts", "cloudasset.assets.exportCloudkmsCryptoKeyVersions", "cloudasset.assets.exportCloudkmsCryptoKeys", "cloudasset.assets.exportCloudkmsImportJobs", "cloudasset.assets.exportCloudkmsKeyRings", "cloudasset.assets.exportCloudresourcemanagerFolders", "cloudasset.assets.exportCloudresourcemanagerOrganizations", "cloudasset.assets.exportCloudresourcemanagerProjects", "cloudasset.assets.exportComputeAddress", "cloudasset.assets.exportComputeAutoscalers", "cloudasset.assets.exportComputeBackendBuckets", "cloudasset.assets.exportComputeBackendServices", "cloudasset.assets.exportComputeDisks", "cloudasset.assets.exportComputeFirewalls", "cloudasset.assets.exportComputeForwardingRules", "cloudasset.assets.exportComputeGlobalAddress", "cloudasset.assets.exportComputeGlobalForwardingRules", "cloudasset.assets.exportComputeHealthChecks", "cloudasset.assets.exportComputeHttpHealthChecks", "cloudasset.assets.exportComputeHttpsHealthChecks", "cloudasset.assets.exportComputeImages", "cloudasset.assets.exportComputeInstanceGroupManagers", "cloudasset.assets.exportComputeInstanceGroups", "cloudasset.assets.exportComputeInstanceTemplates", "cloudasset.assets.exportComputeInstances", "cloudasset.assets.exportComputeInterconnect", "cloudasset.assets.exportComputeInterconnectAttachment", "cloudasset.assets.exportComputeLicenses", "cloudasset.assets.exportComputeNetworks", "cloudasset.assets.exportComputeProjects", "cloudasset.assets.exportComputeRegionAutoscaler", "cloudasset.assets.exportComputeRegionBackendServices", "cloudasset.assets.exportComputeRegionDisk", "cloudasset.assets.exportComputeRegionInstanceGroup", "cloudasset.assets.exportComputeRegionInstanceGroupManager", "cloudasset.assets.exportComputeRouters", "cloudasset.assets.exportComputeRoutes", "cloudasset.assets.exportComputeSecurityPolicy", "cloudasset.assets.exportComputeSnapshots", "cloudasset.assets.exportComputeSslCertificates", "cloudasset.assets.exportComputeSubnetworks", "cloudasset.assets.exportComputeTargetHttpProxies", "cloudasset.assets.exportComputeTargetHttpsProxies", "cloudasset.assets.exportComputeTargetInstances", "cloudasset.assets.exportComputeTargetPools", "cloudasset.assets.exportComputeTargetSslProxies", "cloudasset.assets.exportComputeTargetTcpProxies", "cloudasset.assets.exportComputeTargetVpnGateways", "cloudasset.assets.exportComputeUrlMaps", "cloudasset.assets.exportComputeVpnTunnels", "cloudasset.assets.exportContainerClusterrole", "cloudasset.assets.exportContainerClusterrolebinding", "cloudasset.assets.exportContainerClusters", "cloudasset.assets.exportContainerNamespace", "cloudasset.assets.exportContainerNode", "cloudasset.assets.exportContainerNodepool", "cloudasset.assets.exportContainerPod", "cloudasset.assets.exportContainerRole", "cloudasset.assets.exportContainerRolebinding", "cloudasset.assets.exportContainerregistryImage", "cloudasset.assets.exportDatafusionInstance", "cloudasset.assets.exportDataprocClusters", "cloudasset.assets.exportDataprocJobs", "cloudasset.assets.exportDnsManagedZones", "cloudasset.assets.exportDnsPolicies", "cloudasset.assets.exportIamPolicy", "cloudasset.assets.exportIamRoles", "cloudasset.assets.exportIamServiceAccountKeys", "cloudasset.assets.exportIamServiceAccounts", "cloudasset.assets.exportManagedidentitiesDomain", "cloudasset.assets.exportOrgPolicy", "cloudasset.assets.exportPubsubSubscriptions", "cloudasset.assets.exportPubsubTopics", "cloudasset.assets.exportResource", "cloudasset.assets.exportServicePerimeter", "cloudasset.assets.exportServicemanagementServices", "cloudasset.assets.exportSpannerDatabases", "cloudasset.assets.exportSpannerInstances", "cloudasset.assets.exportSqladminInstances", "cloudasset.assets.exportStorageBuckets", "cloudasset.assets.searchAllIamPolicies", "cloudasset.assets.searchAllResources"], "roles/securitycenter.automationServiceAgent": ["cloudasset.feeds.create", "cloudasset.feeds.delete", "cloudasset.feeds.get", "cloudasset.feeds.list", "cloudasset.feeds.update", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.services.enable"], "roles/cloudbuild.builds.editor": ["cloudbuild.builds.create", "cloudbuild.builds.get", "cloudbuild.builds.list", "cloudbuild.builds.update", "remotebuildexecution.blobs.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudbuild.builds.viewer": ["cloudbuild.builds.get", "cloudbuild.builds.list", "remotebuildexecution.blobs.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudconfig.admin": ["cloudconfig.configs.get", "cloudconfig.configs.update", "firebase.clients.get", "firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudconfig.viewer": ["cloudconfig.configs.get", "firebase.clients.get", "firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebase.growthViewer": ["cloudconfig.configs.get", "cloudnotifications.activities.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseabt.experimentresults.get", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.projectmetadata.get", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.stats.get", "firebaseextensions.configs.list", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasepredictions.predictions.list", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/clouddebugger.user": ["clouddebugger.breakpoints.create", "clouddebugger.breakpoints.delete", "clouddebugger.breakpoints.get", "clouddebugger.breakpoints.list", "clouddebugger.debuggees.list"], "roles/clouddebugger.agent": ["clouddebugger.breakpoints.list", "clouddebugger.breakpoints.listActive", "clouddebugger.breakpoints.update", "clouddebugger.debuggees.create"], "roles/cloudfunctions.admin": ["cloudfunctions.functions.call", "cloudfunctions.functions.create", "cloudfunctions.functions.delete", "cloudfunctions.functions.get", "cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.invoke", "cloudfunctions.functions.list", "cloudfunctions.functions.setIamPolicy", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.functions.sourceCodeSet", "cloudfunctions.functions.update", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudfunctions.developer": ["cloudfunctions.functions.call", "cloudfunctions.functions.create", "cloudfunctions.functions.delete", "cloudfunctions.functions.get", "cloudfunctions.functions.invoke", "cloudfunctions.functions.list", "cloudfunctions.functions.sourceCodeGet", "cloudfunctions.functions.sourceCodeSet", "cloudfunctions.functions.update", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudfunctions.viewer": ["cloudfunctions.functions.get", "cloudfunctions.functions.list", "cloudfunctions.locations.list", "cloudfunctions.operations.get", "cloudfunctions.operations.list", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/firebasemods.serviceAgent": ["cloudfunctions.functions.getIamPolicy", "cloudfunctions.functions.setIamPolicy", "deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.deployments.cancelPreview", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.stop", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.typeProviders.update", "deploymentmanager.types.create", "deploymentmanager.types.delete", "deploymentmanager.types.get", "deploymentmanager.types.list", "deploymentmanager.types.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "run.services.getIamPolicy", "run.services.setIamPolicy", "serviceusage.quotas.get", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudfunctions.invoker": ["cloudfunctions.functions.invoke"], "roles/dialogflow.serviceAgent": ["cloudfunctions.functions.invoke", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.list", "dialogflow.agents.search", "dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.environments.get", "dialogflow.environments.list", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.fulfillments.get", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "logging.logEntries.create", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use", "storage.objects.get", "storage.objects.list"], "roles/cloudiot.admin": ["cloudiot.devices.bindGateway", "cloudiot.devices.create", "cloudiot.devices.delete", "cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.devices.sendCommand", "cloudiot.devices.unbindGateway", "cloudiot.devices.update", "cloudiot.devices.updateConfig", "cloudiot.registries.create", "cloudiot.registries.delete", "cloudiot.registries.get", "cloudiot.registries.getIamPolicy", "cloudiot.registries.list", "cloudiot.registries.setIamPolicy", "cloudiot.registries.update", "cloudiottoken.tokensettings.get", "cloudiottoken.tokensettings.update"], "roles/cloudiot.editor": ["cloudiot.devices.bindGateway", "cloudiot.devices.create", "cloudiot.devices.delete", "cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.devices.sendCommand", "cloudiot.devices.unbindGateway", "cloudiot.devices.update", "cloudiot.devices.updateConfig", "cloudiot.registries.create", "cloudiot.registries.delete", "cloudiot.registries.get", "cloudiot.registries.list", "cloudiot.registries.update", "cloudiottoken.tokensettings.get", "cloudiottoken.tokensettings.update"], "roles/cloudiot.provisioner": ["cloudiot.devices.bindGateway", "cloudiot.devices.create", "cloudiot.devices.delete", "cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.devices.sendCommand", "cloudiot.devices.unbindGateway", "cloudiot.devices.update", "cloudiot.devices.updateConfig", "cloudiot.registries.get", "cloudiot.registries.list", "cloudiottoken.tokensettings.get"], "roles/cloudiot.deviceController": ["cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.devices.sendCommand", "cloudiot.devices.updateConfig", "cloudiot.registries.get", "cloudiot.registries.list", "cloudiottoken.tokensettings.get"], "roles/cloudiot.viewer": ["cloudiot.devices.get", "cloudiot.devices.list", "cloudiot.registries.get", "cloudiot.registries.list", "cloudiottoken.tokensettings.get"], "roles/cloudjobdiscovery.jobsEditor": ["cloudjobdiscovery.companies.create", "cloudjobdiscovery.companies.delete", "cloudjobdiscovery.companies.get", "cloudjobdiscovery.companies.list", "cloudjobdiscovery.companies.update", "cloudjobdiscovery.events.create", "cloudjobdiscovery.jobs.create", "cloudjobdiscovery.jobs.delete", "cloudjobdiscovery.jobs.get", "cloudjobdiscovery.jobs.search", "cloudjobdiscovery.jobs.update", "cloudjobdiscovery.tenants.create", "cloudjobdiscovery.tenants.delete", "cloudjobdiscovery.tenants.get", "cloudjobdiscovery.tenants.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudjobdiscovery.jobsViewer": ["cloudjobdiscovery.companies.get", "cloudjobdiscovery.companies.list", "cloudjobdiscovery.jobs.get", "cloudjobdiscovery.jobs.search", "cloudjobdiscovery.tenants.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudjobdiscovery.profilesEditor": ["cloudjobdiscovery.events.create", "cloudjobdiscovery.profiles.create", "cloudjobdiscovery.profiles.delete", "cloudjobdiscovery.profiles.get", "cloudjobdiscovery.profiles.search", "cloudjobdiscovery.profiles.update", "cloudjobdiscovery.tenants.create", "cloudjobdiscovery.tenants.delete", "cloudjobdiscovery.tenants.get", "cloudjobdiscovery.tenants.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudjobdiscovery.profilesViewer": ["cloudjobdiscovery.profiles.get", "cloudjobdiscovery.profiles.search", "cloudjobdiscovery.tenants.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudjobdiscovery.admin": ["cloudjobdiscovery.tools.access", "iam.serviceAccounts.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudkms.admin": ["cloudkms.cryptoKeyVersions.create", "cloudkms.cryptoKeyVersions.destroy", "cloudkms.cryptoKeyVersions.get", "cloudkms.cryptoKeyVersions.list", "cloudkms.cryptoKeyVersions.restore", "cloudkms.cryptoKeyVersions.update", "cloudkms.cryptoKeys.create", "cloudkms.cryptoKeys.get", "cloudkms.cryptoKeys.getIamPolicy", "cloudkms.cryptoKeys.list", "cloudkms.cryptoKeys.setIamPolicy", "cloudkms.cryptoKeys.update", "cloudkms.importJobs.create", "cloudkms.importJobs.get", "cloudkms.importJobs.getIamPolicy", "cloudkms.importJobs.list", "cloudkms.importJobs.setIamPolicy", "cloudkms.importJobs.useToImport", "cloudkms.keyRings.create", "cloudkms.keyRings.get", "cloudkms.keyRings.getIamPolicy", "cloudkms.keyRings.list", "cloudkms.keyRings.setIamPolicy", "resourcemanager.projects.get"], "roles/cloudkms.cryptoKeyDecrypter": ["cloudkms.cryptoKeyVersions.useToDecrypt", "resourcemanager.projects.get"], "roles/cloudkms.cryptoKeyEncrypterDecrypter": ["cloudkms.cryptoKeyVersions.useToDecrypt", "cloudkms.cryptoKeyVersions.useToEncrypt", "resourcemanager.projects.get"], "roles/cloudkms.cryptoKeyEncrypter": ["cloudkms.cryptoKeyVersions.useToEncrypt", "resourcemanager.projects.get"], "roles/cloudkms.signer": ["cloudkms.cryptoKeyVersions.useToSign", "resourcemanager.projects.get"], "roles/cloudkms.signerVerifier": ["cloudkms.cryptoKeyVersions.useToSign", "cloudkms.cryptoKeyVersions.viewPublicKey", "resourcemanager.projects.get"], "roles/cloudkms.publicKeyViewer": ["cloudkms.cryptoKeyVersions.viewPublicKey", "resourcemanager.projects.get"], "roles/cloudkms.importer": ["cloudkms.importJobs.create", "cloudkms.importJobs.get", "cloudkms.importJobs.list", "cloudkms.importJobs.useToImport", "resourcemanager.projects.get"], "roles/cloudmigration.inframanager": ["cloudmigration.velostrataendpoints.connect", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.list", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.globalOperations.get", "compute.images.get", "compute.images.list", "compute.images.useReadOnly", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getSerialPortOutput", "compute.instances.list", "compute.instances.reset", "compute.instances.setDiskAutoDelete", "compute.instances.setLabels", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.update", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.use", "compute.licenseCodes.get", "compute.licenseCodes.list", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.get", "compute.licenses.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.get", "compute.nodeGroups.list", "compute.nodeTemplates.list", "compute.projects.get", "compute.regionOperations.get", "compute.regions.get", "compute.regions.list", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.zoneOperations.get", "compute.zones.get", "compute.zones.list", "gkehub.endpoints.connect", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.projects.get", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.list", "storage.buckets.update"], "roles/cloudmigration.velostrataconnect": ["cloudmigration.velostrataendpoints.connect", "gkehub.endpoints.connect"], "roles/errorreporting.admin": ["cloudnotifications.activities.list", "errorreporting.applications.list", "errorreporting.errorEvents.create", "errorreporting.errorEvents.delete", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groupMetadata.update", "errorreporting.groups.list"], "roles/errorreporting.user": ["cloudnotifications.activities.list", "errorreporting.applications.list", "errorreporting.errorEvents.delete", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groupMetadata.update", "errorreporting.groups.list"], "roles/errorreporting.viewer": ["cloudnotifications.activities.list", "errorreporting.applications.list", "errorreporting.errorEvents.list", "errorreporting.groupMetadata.get", "errorreporting.groups.list"], "roles/firebase.analyticsAdmin": ["cloudnotifications.activities.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseextensions.configs.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/firebase.analyticsViewer": ["cloudnotifications.activities.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseextensions.configs.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/firebase.qualityAdmin": ["cloudnotifications.activities.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseanalytics.resources.googleAnalyticsEdit", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update", "firebasecrash.issues.update", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.config.update", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.issues.update", "firebasecrashlytics.sessions.get", "firebaseextensions.configs.list", "firebaseperformance.config.create", "firebaseperformance.config.delete", "firebaseperformance.config.update", "firebaseperformance.data.get", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/firebase.qualityViewer": ["cloudnotifications.activities.list", "firebase.billingPlans.get", "firebase.clients.get", "firebase.links.list", "firebase.projects.get", "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze", "firebaseappdistro.groups.list", "firebaseappdistro.releases.list", "firebaseappdistro.testers.list", "firebasecrash.reports.get", "firebasecrashlytics.config.get", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.sessions.get", "firebaseextensions.configs.list", "firebaseperformance.data.get", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/healthcare.serviceAgent": ["cloudnotifications.activities.list", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "pubsub.snapshots.seek", "pubsub.subscriptions.consume", "pubsub.topics.attachSubscription", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.list", "stackdriver.projects.get"], "roles/monitoring.admin": ["cloudnotifications.activities.list", "monitoring.alertPolicies.create", "monitoring.alertPolicies.delete", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.alertPolicies.update", "monitoring.dashboards.create", "monitoring.dashboards.delete", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.dashboards.update", "monitoring.groups.create", "monitoring.groups.delete", "monitoring.groups.get", "monitoring.groups.list", "monitoring.groups.update", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.delete", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.create", "monitoring.notificationChannels.delete", "monitoring.notificationChannels.get", "monitoring.notificationChannels.getVerificationCode", "monitoring.notificationChannels.list", "monitoring.notificationChannels.sendVerificationCode", "monitoring.notificationChannels.update", "monitoring.notificationChannels.verify", "monitoring.publicWidgets.create", "monitoring.publicWidgets.delete", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.publicWidgets.update", "monitoring.services.create", "monitoring.services.delete", "monitoring.services.get", "monitoring.services.list", "monitoring.services.update", "monitoring.slos.create", "monitoring.slos.delete", "monitoring.slos.get", "monitoring.slos.list", "monitoring.slos.update", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.create", "monitoring.uptimeCheckConfigs.delete", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "monitoring.uptimeCheckConfigs.update", "opsconfigmonitoring.resourceMetadata.write", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.enable", "stackdriver.projects.edit", "stackdriver.projects.get", "stackdriver.resourceMetadata.write"], "roles/monitoring.editor": ["cloudnotifications.activities.list", "monitoring.alertPolicies.create", "monitoring.alertPolicies.delete", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.alertPolicies.update", "monitoring.dashboards.create", "monitoring.dashboards.delete", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.dashboards.update", "monitoring.groups.create", "monitoring.groups.delete", "monitoring.groups.get", "monitoring.groups.list", "monitoring.groups.update", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.delete", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.create", "monitoring.notificationChannels.delete", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.notificationChannels.sendVerificationCode", "monitoring.notificationChannels.update", "monitoring.notificationChannels.verify", "monitoring.publicWidgets.create", "monitoring.publicWidgets.delete", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.publicWidgets.update", "monitoring.services.create", "monitoring.services.delete", "monitoring.services.get", "monitoring.services.list", "monitoring.services.update", "monitoring.slos.create", "monitoring.slos.delete", "monitoring.slos.get", "monitoring.slos.list", "monitoring.slos.update", "monitoring.timeSeries.create", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.create", "monitoring.uptimeCheckConfigs.delete", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "monitoring.uptimeCheckConfigs.update", "opsconfigmonitoring.resourceMetadata.write", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.enable", "stackdriver.projects.edit", "stackdriver.projects.get", "stackdriver.resourceMetadata.write"], "roles/monitoring.viewer": ["cloudnotifications.activities.list", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.groups.get", "monitoring.groups.list", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.publicWidgets.get", "monitoring.publicWidgets.list", "monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list", "monitoring.timeSeries.list", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "stackdriver.projects.get"], "roles/dellemccloudonefs.admin": ["cloudonefs.isiloncloud.com/clusters.create", "cloudonefs.isiloncloud.com/clusters.delete", "cloudonefs.isiloncloud.com/clusters.get", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/clusters.update", "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings", "cloudonefs.isiloncloud.com/fileshares.create", "cloudonefs.isiloncloud.com/fileshares.delete", "cloudonefs.isiloncloud.com/fileshares.get", "cloudonefs.isiloncloud.com/fileshares.list", "cloudonefs.isiloncloud.com/fileshares.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dellemccloudonefs.user": ["cloudonefs.isiloncloud.com/clusters.create", "cloudonefs.isiloncloud.com/clusters.delete", "cloudonefs.isiloncloud.com/clusters.get", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/clusters.update", "cloudonefs.isiloncloud.com/fileshares.create", "cloudonefs.isiloncloud.com/fileshares.delete", "cloudonefs.isiloncloud.com/fileshares.get", "cloudonefs.isiloncloud.com/fileshares.list", "cloudonefs.isiloncloud.com/fileshares.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dellemccloudonefs.viewer": ["cloudonefs.isiloncloud.com/clusters.get", "cloudonefs.isiloncloud.com/clusters.list", "cloudonefs.isiloncloud.com/fileshares.get", "cloudonefs.isiloncloud.com/fileshares.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudprivatecatalog.consumer": ["cloudprivatecatalog.targets.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudprivatecatalogproducer.admin": ["cloudprivatecatalog.targets.get", "cloudprivatecatalogproducer.associations.create", "cloudprivatecatalogproducer.associations.delete", "cloudprivatecatalogproducer.associations.get", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.create", "cloudprivatecatalogproducer.catalogs.delete", "cloudprivatecatalogproducer.catalogs.get", "cloudprivatecatalogproducer.catalogs.getIamPolicy", "cloudprivatecatalogproducer.catalogs.list", "cloudprivatecatalogproducer.catalogs.setIamPolicy", "cloudprivatecatalogproducer.catalogs.undelete", "cloudprivatecatalogproducer.catalogs.update", "cloudprivatecatalogproducer.targets.associate", "cloudprivatecatalogproducer.targets.unassociate", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudprivatecatalogproducer.manager": ["cloudprivatecatalog.targets.get", "cloudprivatecatalogproducer.associations.create", "cloudprivatecatalogproducer.associations.delete", "cloudprivatecatalogproducer.associations.get", "cloudprivatecatalogproducer.associations.list", "cloudprivatecatalogproducer.catalogs.get", "cloudprivatecatalogproducer.catalogs.list", "cloudprivatecatalogproducer.targets.associate", "cloudprivatecatalogproducer.targets.unassociate", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudprofiler.agent": ["cloudprofiler.profiles.create", "cloudprofiler.profiles.update"], "roles/cloudprofiler.user": ["cloudprofiler.profiles.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudsecurityscanner.runner": ["cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scanruns.stop", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "cloudsecurityscanner.scans.run"], "roles/cloudsecurityscanner.viewer": ["cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/securitycenter.adminViewer": ["cloudsecurityscanner.crawledurls.list", "cloudsecurityscanner.results.get", "cloudsecurityscanner.results.list", "cloudsecurityscanner.scanruns.get", "cloudsecurityscanner.scanruns.getSummary", "cloudsecurityscanner.scanruns.list", "cloudsecurityscanner.scans.get", "cloudsecurityscanner.scans.list", "resourcemanager.organizations.get", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames", "securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.sources.get", "securitycenter.sources.list", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudsql.admin": ["cloudsql.backupRuns.create", "cloudsql.backupRuns.delete", "cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.create", "cloudsql.databases.delete", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.databases.update", "cloudsql.instances.addServerCa", "cloudsql.instances.clone", "cloudsql.instances.connect", "cloudsql.instances.create", "cloudsql.instances.delete", "cloudsql.instances.demoteMaster", "cloudsql.instances.export", "cloudsql.instances.failover", "cloudsql.instances.get", "cloudsql.instances.import", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.instances.login", "cloudsql.instances.promoteReplica", "cloudsql.instances.resetSslConfig", "cloudsql.instances.restart", "cloudsql.instances.restoreBackup", "cloudsql.instances.rotateServerCa", "cloudsql.instances.startReplica", "cloudsql.instances.stopReplica", "cloudsql.instances.truncateLog", "cloudsql.instances.update", "cloudsql.sslCerts.create", "cloudsql.sslCerts.createEphemeral", "cloudsql.sslCerts.delete", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.create", "cloudsql.users.delete", "cloudsql.users.list", "cloudsql.users.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudsql.editor": ["cloudsql.backupRuns.create", "cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.create", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.databases.update", "cloudsql.instances.addServerCa", "cloudsql.instances.connect", "cloudsql.instances.export", "cloudsql.instances.failover", "cloudsql.instances.get", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.instances.restart", "cloudsql.instances.rotateServerCa", "cloudsql.instances.truncateLog", "cloudsql.instances.update", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudsql.viewer": ["cloudsql.backupRuns.get", "cloudsql.backupRuns.list", "cloudsql.databases.get", "cloudsql.databases.list", "cloudsql.instances.export", "cloudsql.instances.get", "cloudsql.instances.list", "cloudsql.instances.listServerCas", "cloudsql.sslCerts.get", "cloudsql.sslCerts.list", "cloudsql.users.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/bigqueryconnection.serviceAgent": ["cloudsql.instances.connect", "cloudsql.instances.get", "logging.logEntries.create", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create"], "roles/cloudsql.client": ["cloudsql.instances.connect", "cloudsql.instances.get"], "roles/cloudsql.instanceUser": ["cloudsql.instances.get", "cloudsql.instances.login"], "roles/cloudsql.serviceAgent": ["cloudsql.instances.get"], "roles/cloudsupport.admin": ["cloudsupport.accounts.create", "cloudsupport.accounts.delete", "cloudsupport.accounts.get", "cloudsupport.accounts.getIamPolicy", "cloudsupport.accounts.getUserRoles", "cloudsupport.accounts.list", "cloudsupport.accounts.setIamPolicy", "cloudsupport.accounts.update", "cloudsupport.accounts.updateUserRoles", "cloudsupport.operations.get", "cloudsupport.properties.get", "resourcemanager.organizations.get"], "roles/cloudsupport.viewer": ["cloudsupport.accounts.get", "cloudsupport.accounts.getUserRoles", "cloudsupport.accounts.list", "cloudsupport.properties.get"], "roles/cloudsupport.techSupportEditor": ["cloudsupport.properties.get", "cloudsupport.techCases.create", "cloudsupport.techCases.escalate", "cloudsupport.techCases.get", "cloudsupport.techCases.list", "cloudsupport.techCases.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudsupport.techSupportViewer": ["cloudsupport.properties.get", "cloudsupport.techCases.get", "cloudsupport.techCases.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtasks.admin": ["cloudtasks.locations.get", "cloudtasks.locations.list", "cloudtasks.queues.create", "cloudtasks.queues.delete", "cloudtasks.queues.get", "cloudtasks.queues.getIamPolicy", "cloudtasks.queues.list", "cloudtasks.queues.pause", "cloudtasks.queues.purge", "cloudtasks.queues.resume", "cloudtasks.queues.setIamPolicy", "cloudtasks.queues.update", "cloudtasks.tasks.create", "cloudtasks.tasks.delete", "cloudtasks.tasks.fullView", "cloudtasks.tasks.get", "cloudtasks.tasks.list", "cloudtasks.tasks.run", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtasks.queueAdmin": ["cloudtasks.locations.get", "cloudtasks.locations.list", "cloudtasks.queues.create", "cloudtasks.queues.delete", "cloudtasks.queues.get", "cloudtasks.queues.getIamPolicy", "cloudtasks.queues.list", "cloudtasks.queues.pause", "cloudtasks.queues.purge", "cloudtasks.queues.resume", "cloudtasks.queues.setIamPolicy", "cloudtasks.queues.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtasks.viewer": ["cloudtasks.locations.get", "cloudtasks.locations.list", "cloudtasks.queues.get", "cloudtasks.queues.list", "cloudtasks.tasks.fullView", "cloudtasks.tasks.get", "cloudtasks.tasks.list", "monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtasks.enqueuer": ["cloudtasks.tasks.create", "cloudtasks.tasks.fullView", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtasks.taskDeleter": ["cloudtasks.tasks.delete", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtasks.taskRunner": ["cloudtasks.tasks.fullView", "cloudtasks.tasks.run", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtestservice.testAdmin": ["cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.create", "cloudtestservice.matrices.get", "cloudtestservice.matrices.update", "cloudtoolresults.executions.create", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.executions.update", "cloudtoolresults.histories.create", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.create", "cloudtoolresults.settings.get", "cloudtoolresults.settings.update", "cloudtoolresults.steps.create", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "cloudtoolresults.steps.update", "firebase.billingPlans.get", "firebase.clients.get", "firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.buckets.create", "storage.buckets.get", "storage.buckets.update", "storage.objects.create", "storage.objects.get", "storage.objects.list"], "roles/cloudtestservice.testViewer": ["cloudtestservice.environmentcatalog.get", "cloudtestservice.matrices.get", "cloudtoolresults.executions.get", "cloudtoolresults.executions.list", "cloudtoolresults.histories.get", "cloudtoolresults.histories.list", "cloudtoolresults.settings.get", "cloudtoolresults.steps.get", "cloudtoolresults.steps.list", "firebase.clients.get", "firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.objects.get", "storage.objects.list"], "roles/cloudtrace.admin": ["cloudtrace.insights.get", "cloudtrace.insights.list", "cloudtrace.stats.get", "cloudtrace.tasks.create", "cloudtrace.tasks.delete", "cloudtrace.tasks.get", "cloudtrace.tasks.list", "cloudtrace.traces.get", "cloudtrace.traces.list", "cloudtrace.traces.patch", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtrace.user": ["cloudtrace.insights.get", "cloudtrace.insights.list", "cloudtrace.stats.get", "cloudtrace.tasks.create", "cloudtrace.tasks.delete", "cloudtrace.tasks.get", "cloudtrace.tasks.list", "cloudtrace.traces.get", "cloudtrace.traces.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/cloudtrace.agent": ["cloudtrace.traces.patch"], "roles/meshdataplane.serviceAgent": ["cloudtrace.traces.patch", "compute.forwardingRules.get", "compute.globalForwardingRules.get", "logging.logEntries.create", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "serviceusage.services.use"], "roles/netappcloudvolumes.admin": ["cloudvolumesgcp-api.netapp.com/activeDirectories.create", "cloudvolumesgcp-api.netapp.com/activeDirectories.delete", "cloudvolumesgcp-api.netapp.com/activeDirectories.get", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/activeDirectories.update", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.get", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.create", "cloudvolumesgcp-api.netapp.com/snapshots.delete", "cloudvolumesgcp-api.netapp.com/snapshots.get", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/snapshots.update", "cloudvolumesgcp-api.netapp.com/volumes.create", "cloudvolumesgcp-api.netapp.com/volumes.delete", "cloudvolumesgcp-api.netapp.com/volumes.get", "cloudvolumesgcp-api.netapp.com/volumes.list", "cloudvolumesgcp-api.netapp.com/volumes.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/netappcloudvolumes.viewer": ["cloudvolumesgcp-api.netapp.com/activeDirectories.get", "cloudvolumesgcp-api.netapp.com/activeDirectories.list", "cloudvolumesgcp-api.netapp.com/ipRanges.list", "cloudvolumesgcp-api.netapp.com/jobs.get", "cloudvolumesgcp-api.netapp.com/jobs.list", "cloudvolumesgcp-api.netapp.com/regions.list", "cloudvolumesgcp-api.netapp.com/serviceLevels.list", "cloudvolumesgcp-api.netapp.com/snapshots.get", "cloudvolumesgcp-api.netapp.com/snapshots.list", "cloudvolumesgcp-api.netapp.com/volumes.get", "cloudvolumesgcp-api.netapp.com/volumes.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/composer.admin": ["composer.environments.create", "composer.environments.delete", "composer.environments.get", "composer.environments.list", "composer.environments.update", "composer.imageversions.list", "composer.operations.delete", "composer.operations.get", "composer.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/composer.environmentAndStorageObjectAdmin": ["composer.environments.create", "composer.environments.delete", "composer.environments.get", "composer.environments.list", "composer.environments.update", "composer.imageversions.list", "composer.operations.delete", "composer.operations.get", "composer.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/composer.environmentAndStorageObjectViewer": ["composer.environments.get", "composer.environments.list", "composer.imageversions.list", "composer.operations.get", "composer.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.objects.get", "storage.objects.list"], "roles/composer.user": ["composer.environments.get", "composer.environments.list", "composer.imageversions.list", "composer.operations.get", "composer.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/cloudtpu.serviceAgent": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.list", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "logging.logEntries.create", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.setIamPolicy", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.setIamPolicy", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.operations.get", "servicenetworking.services.addPeering", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.admin": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.commitments.create", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.delete", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.globalPublicDelegatedPrefixes.create", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.globalPublicDelegatedPrefixes.use", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.create", "compute.maintenancePolicies.delete", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.maintenancePolicies.setIamPolicy", "compute.maintenancePolicies.use", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.addNodes", "compute.nodeGroups.create", "compute.nodeGroups.delete", "compute.nodeGroups.deleteNodes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeGroups.setIamPolicy", "compute.nodeGroups.setNodeTemplate", "compute.nodeGroups.update", "compute.nodeTemplates.create", "compute.nodeTemplates.delete", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTemplates.setIamPolicy", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.administerXpn", "compute.organizations.disableXpnHost", "compute.organizations.disableXpnResource", "compute.organizations.enableXpnHost", "compute.organizations.enableXpnResource", "compute.organizations.listAssociations", "compute.organizations.setSecurityPolicy", "compute.oslogin.updateExternalUser", "compute.packetMirrorings.update", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.projects.setDefaultNetworkTier", "compute.projects.setDefaultServiceAccount", "compute.projects.setUsageExportBucket", "compute.publicAdvertisedPrefixes.create", "compute.publicAdvertisedPrefixes.delete", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicAdvertisedPrefixes.update", "compute.publicAdvertisedPrefixes.updatePolicy", "compute.publicAdvertisedPrefixes.use", "compute.publicDelegatedPrefixes.create", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.publicDelegatedPrefixes.use", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.delete", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionOperations.setIamPolicy", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.create", "compute.reservations.delete", "compute.reservations.get", "compute.reservations.list", "compute.reservations.resize", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.setIamPolicy", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.delete", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zoneOperations.setIamPolicy", "compute.zones.get", "compute.zones.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.instanceAdmin": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.list", "compute.disks.resize", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.use", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.list", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.licenses.get", "compute.licenses.list", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetPools.get", "compute.targetPools.list", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.instanceAdmin.v1": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.use", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.networkAdmin": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.list", "compute.securityPolicies.use", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "networksecurity.authorizationPolicies.create", "networksecurity.authorizationPolicies.delete", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.getIamPolicy", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.setIamPolicy", "networksecurity.authorizationPolicies.update", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.getIamPolicy", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.setIamPolicy", "networksecurity.clientTlsPolicies.update", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.cancel", "networksecurity.operations.delete", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.getIamPolicy", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.setIamPolicy", "networksecurity.serverTlsPolicies.update", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.getIamPolicy", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.setIamPolicy", "networkservices.endpointConfigSelectors.update", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.getIamPolicy", "networkservices.httpFilters.list", "networkservices.httpFilters.setIamPolicy", "networkservices.httpFilters.update", "networkservices.httpFilters.use", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.getIamPolicy", "networkservices.httpfilters.list", "networkservices.httpfilters.setIamPolicy", "networkservices.httpfilters.update", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.cancel", "networkservices.operations.delete", "networkservices.operations.get", "networkservices.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.operations.get", "servicenetworking.services.addPeering", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.networkViewer": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.projects.get", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regions.get", "compute.regions.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zones.get", "compute.zones.list", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.list", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.list", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.list", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.list", "networkservices.httpFilters.get", "networkservices.httpFilters.list", "networkservices.httpfilters.get", "networkservices.httpfilters.list", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.get", "networkservices.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.viewer": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/dataproc.serviceAgent": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.list", "compute.disks.resize", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.firewalls.get", "compute.firewalls.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.use", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.list", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.licenses.get", "compute.licenses.list", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.get", "compute.nodeTypes.get", "compute.projects.get", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetPools.get", "compute.targetPools.list", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.use", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.clusters.setIamPolicy", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.jobs.setIamPolicy", "dataproc.jobs.update", "firebase.projects.get", "iam.serviceAccounts.actAs", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/genomics.serviceAgent": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.use", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "iam.serviceAccounts.actAs", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use"], "roles/lifesciences.serviceAgent": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.use", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "iam.serviceAccounts.actAs", "pubsub.topics.publish", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use"], "roles/notebooks.admin": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "notebooks.environments.create", "notebooks.environments.delete", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.environments.setIamPolicy", "notebooks.instances.checkUpgradability", "notebooks.instances.create", "notebooks.instances.delete", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.reset", "notebooks.instances.setAccelerator", "notebooks.instances.setIamPolicy", "notebooks.instances.setLabels", "notebooks.instances.setMachineType", "notebooks.instances.start", "notebooks.instances.stop", "notebooks.instances.update", "notebooks.instances.updateConfig", "notebooks.instances.upgrade", "notebooks.instances.use", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.cancel", "notebooks.operations.delete", "notebooks.operations.get", "notebooks.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/notebooks.legacyAdmin": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.commitments.create", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.create", "compute.externalVpnGateways.delete", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.setLabels", "compute.externalVpnGateways.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.delete", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.globalPublicDelegatedPrefixes.create", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.globalPublicDelegatedPrefixes.use", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.create", "compute.interconnectAttachments.delete", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectAttachments.setLabels", "compute.interconnectAttachments.update", "compute.interconnectAttachments.use", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.create", "compute.interconnects.delete", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.setLabels", "compute.interconnects.update", "compute.interconnects.use", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.create", "compute.maintenancePolicies.delete", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.maintenancePolicies.setIamPolicy", "compute.maintenancePolicies.use", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.access", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.mirror", "compute.networks.removePeering", "compute.networks.switchToCustomMode", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.addNodes", "compute.nodeGroups.create", "compute.nodeGroups.delete", "compute.nodeGroups.deleteNodes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeGroups.setIamPolicy", "compute.nodeGroups.setNodeTemplate", "compute.nodeGroups.update", "compute.nodeTemplates.create", "compute.nodeTemplates.delete", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTemplates.setIamPolicy", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.administerXpn", "compute.organizations.disableXpnHost", "compute.organizations.disableXpnResource", "compute.organizations.enableXpnHost", "compute.organizations.enableXpnResource", "compute.organizations.listAssociations", "compute.organizations.setSecurityPolicy", "compute.oslogin.updateExternalUser", "compute.packetMirrorings.update", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.projects.setDefaultNetworkTier", "compute.projects.setDefaultServiceAccount", "compute.projects.setUsageExportBucket", "compute.publicAdvertisedPrefixes.create", "compute.publicAdvertisedPrefixes.delete", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicAdvertisedPrefixes.update", "compute.publicAdvertisedPrefixes.updatePolicy", "compute.publicAdvertisedPrefixes.use", "compute.publicDelegatedPrefixes.create", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.publicDelegatedPrefixes.use", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionOperations.delete", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionOperations.setIamPolicy", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.create", "compute.reservations.delete", "compute.reservations.get", "compute.reservations.list", "compute.reservations.resize", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.create", "compute.routers.delete", "compute.routers.get", "compute.routers.list", "compute.routers.update", "compute.routers.use", "compute.routes.create", "compute.routes.delete", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.setIamPolicy", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.expandIpCidrRange", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.mirror", "compute.subnetworks.setIamPolicy", "compute.subnetworks.setPrivateIpGoogleAccess", "compute.subnetworks.update", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.targetVpnGateways.create", "compute.targetVpnGateways.delete", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.targetVpnGateways.setLabels", "compute.targetVpnGateways.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "compute.vpnGateways.create", "compute.vpnGateways.delete", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.setLabels", "compute.vpnGateways.use", "compute.vpnTunnels.create", "compute.vpnTunnels.delete", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.vpnTunnels.setLabels", "compute.zoneOperations.delete", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zoneOperations.setIamPolicy", "compute.zones.get", "compute.zones.list", "notebooks.environments.create", "notebooks.environments.delete", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.environments.setIamPolicy", "notebooks.instances.checkUpgradability", "notebooks.instances.create", "notebooks.instances.delete", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.reset", "notebooks.instances.setAccelerator", "notebooks.instances.setIamPolicy", "notebooks.instances.setLabels", "notebooks.instances.setMachineType", "notebooks.instances.start", "notebooks.instances.stop", "notebooks.instances.update", "notebooks.instances.updateConfig", "notebooks.instances.upgrade", "notebooks.instances.use", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.cancel", "notebooks.operations.delete", "notebooks.operations.get", "notebooks.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/notebooks.legacyViewer": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.checkUpgradability", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.get", "notebooks.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/notebooks.runner": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.checkUpgradability", "notebooks.instances.create", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.get", "notebooks.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/notebooks.serviceAgent": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.addresses.use", "compute.autoscalers.create", "compute.autoscalers.delete", "compute.autoscalers.get", "compute.autoscalers.list", "compute.autoscalers.update", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.use", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.instanceGroupManagers.create", "compute.instanceGroupManagers.delete", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroupManagers.update", "compute.instanceGroupManagers.use", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instanceTemplates.create", "compute.instanceTemplates.delete", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instanceTemplates.setIamPolicy", "compute.instanceTemplates.useReadOnly", "compute.instances.addAccessConfig", "compute.instances.addMaintenancePolicies", "compute.instances.attachDisk", "compute.instances.create", "compute.instances.delete", "compute.instances.deleteAccessConfig", "compute.instances.detachDisk", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.instances.removeMaintenancePolicies", "compute.instances.reset", "compute.instances.resume", "compute.instances.setDeletionProtection", "compute.instances.setDiskAutoDelete", "compute.instances.setIamPolicy", "compute.instances.setLabels", "compute.instances.setMachineResources", "compute.instances.setMachineType", "compute.instances.setMetadata", "compute.instances.setMinCpuPlatform", "compute.instances.setScheduling", "compute.instances.setServiceAccount", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.setTags", "compute.instances.start", "compute.instances.startWithEncryptionKey", "compute.instances.stop", "compute.instances.suspend", "compute.instances.update", "compute.instances.updateAccessConfig", "compute.instances.updateDisplayDevice", "compute.instances.updateNetworkInterface", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.instances.use", "compute.instances.useReadOnly", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.machineImages.create", "compute.machineImages.delete", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineImages.setIamPolicy", "compute.machineImages.useReadOnly", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.use", "compute.networks.useExternalIp", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.projects.setCommonInstanceMetadata", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "notebooks.environments.create", "notebooks.environments.delete", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.environments.setIamPolicy", "notebooks.instances.checkUpgradability", "notebooks.instances.create", "notebooks.instances.delete", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.instances.reset", "notebooks.instances.setAccelerator", "notebooks.instances.setIamPolicy", "notebooks.instances.setLabels", "notebooks.instances.setMachineType", "notebooks.instances.start", "notebooks.instances.stop", "notebooks.instances.update", "notebooks.instances.updateConfig", "notebooks.instances.upgrade", "notebooks.instances.use", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.cancel", "notebooks.operations.delete", "notebooks.operations.get", "notebooks.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/notebooks.viewer": ["compute.acceleratorTypes.get", "compute.acceleratorTypes.list", "compute.addresses.get", "compute.addresses.list", "compute.autoscalers.get", "compute.autoscalers.list", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendServices.get", "compute.backendServices.list", "compute.commitments.get", "compute.commitments.list", "compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.instanceGroupManagers.get", "compute.instanceGroupManagers.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceTemplates.get", "compute.instanceTemplates.getIamPolicy", "compute.instanceTemplates.list", "compute.instances.get", "compute.instances.getEffectiveFirewalls", "compute.instances.getGuestAttributes", "compute.instances.getIamPolicy", "compute.instances.getScreenshot", "compute.instances.getSerialPortOutput", "compute.instances.getShieldedInstanceIdentity", "compute.instances.getShieldedVmIdentity", "compute.instances.list", "compute.instances.listReferrers", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.machineImages.get", "compute.machineImages.getIamPolicy", "compute.machineImages.list", "compute.machineTypes.get", "compute.machineTypes.list", "compute.maintenancePolicies.get", "compute.maintenancePolicies.getIamPolicy", "compute.maintenancePolicies.list", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.nodeGroups.get", "compute.nodeGroups.getIamPolicy", "compute.nodeGroups.list", "compute.nodeTemplates.get", "compute.nodeTemplates.getIamPolicy", "compute.nodeTemplates.list", "compute.nodeTypes.get", "compute.nodeTypes.list", "compute.organizations.listAssociations", "compute.projects.get", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionOperations.get", "compute.regionOperations.getIamPolicy", "compute.regionOperations.list", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.regionUrlMaps.validate", "compute.regions.get", "compute.regions.list", "compute.reservations.get", "compute.reservations.list", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.subnetworks.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.list", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.urlMaps.validate", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zoneOperations.get", "compute.zoneOperations.getIamPolicy", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "notebooks.environments.get", "notebooks.environments.getIamPolicy", "notebooks.environments.list", "notebooks.instances.checkUpgradability", "notebooks.instances.get", "notebooks.instances.getIamPolicy", "notebooks.instances.list", "notebooks.locations.get", "notebooks.locations.list", "notebooks.operations.get", "notebooks.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.loadBalancerAdmin": ["compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.backendBuckets.create", "compute.backendBuckets.delete", "compute.backendBuckets.get", "compute.backendBuckets.list", "compute.backendBuckets.update", "compute.backendBuckets.use", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.globalNetworkEndpointGroups.attachNetworkEndpoints", "compute.globalNetworkEndpointGroups.create", "compute.globalNetworkEndpointGroups.delete", "compute.globalNetworkEndpointGroups.detachNetworkEndpoints", "compute.globalNetworkEndpointGroups.get", "compute.globalNetworkEndpointGroups.list", "compute.globalNetworkEndpointGroups.use", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.httpHealthChecks.create", "compute.httpHealthChecks.delete", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpHealthChecks.update", "compute.httpHealthChecks.use", "compute.httpHealthChecks.useReadOnly", "compute.httpsHealthChecks.create", "compute.httpsHealthChecks.delete", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.httpsHealthChecks.update", "compute.httpsHealthChecks.use", "compute.httpsHealthChecks.useReadOnly", "compute.instanceGroups.create", "compute.instanceGroups.delete", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instanceGroups.update", "compute.instanceGroups.use", "compute.instances.get", "compute.instances.list", "compute.instances.use", "compute.instances.useReadOnly", "compute.networkEndpointGroups.attachNetworkEndpoints", "compute.networkEndpointGroups.create", "compute.networkEndpointGroups.delete", "compute.networkEndpointGroups.detachNetworkEndpoints", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.getIamPolicy", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.setIamPolicy", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.list", "compute.networks.use", "compute.projects.get", "compute.regionBackendServices.create", "compute.regionBackendServices.delete", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionBackendServices.setSecurityPolicy", "compute.regionBackendServices.update", "compute.regionBackendServices.use", "compute.regionHealthCheckServices.create", "compute.regionHealthCheckServices.delete", "compute.regionHealthCheckServices.get", "compute.regionHealthCheckServices.list", "compute.regionHealthCheckServices.update", "compute.regionHealthCheckServices.use", "compute.regionHealthChecks.create", "compute.regionHealthChecks.delete", "compute.regionHealthChecks.get", "compute.regionHealthChecks.list", "compute.regionHealthChecks.update", "compute.regionHealthChecks.use", "compute.regionHealthChecks.useReadOnly", "compute.regionNetworkEndpointGroups.create", "compute.regionNetworkEndpointGroups.delete", "compute.regionNetworkEndpointGroups.get", "compute.regionNetworkEndpointGroups.list", "compute.regionNetworkEndpointGroups.use", "compute.regionNotificationEndpoints.create", "compute.regionNotificationEndpoints.delete", "compute.regionNotificationEndpoints.get", "compute.regionNotificationEndpoints.list", "compute.regionNotificationEndpoints.update", "compute.regionNotificationEndpoints.use", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regionTargetHttpProxies.create", "compute.regionTargetHttpProxies.delete", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpProxies.setUrlMap", "compute.regionTargetHttpProxies.use", "compute.regionTargetHttpsProxies.create", "compute.regionTargetHttpsProxies.delete", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionTargetHttpsProxies.setSslCertificates", "compute.regionTargetHttpsProxies.setUrlMap", "compute.regionTargetHttpsProxies.use", "compute.regionUrlMaps.create", "compute.regionUrlMaps.delete", "compute.regionUrlMaps.get", "compute.regionUrlMaps.invalidateCache", "compute.regionUrlMaps.list", "compute.regionUrlMaps.update", "compute.regionUrlMaps.use", "compute.regionUrlMaps.validate", "compute.securityPolicies.get", "compute.securityPolicies.list", "compute.securityPolicies.use", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.targetGrpcProxies.create", "compute.targetGrpcProxies.delete", "compute.targetGrpcProxies.get", "compute.targetGrpcProxies.list", "compute.targetGrpcProxies.update", "compute.targetGrpcProxies.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetInstances.create", "compute.targetInstances.delete", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetInstances.use", "compute.targetPools.addHealthCheck", "compute.targetPools.addInstance", "compute.targetPools.create", "compute.targetPools.delete", "compute.targetPools.get", "compute.targetPools.list", "compute.targetPools.removeHealthCheck", "compute.targetPools.removeInstance", "compute.targetPools.update", "compute.targetPools.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.publicIpAdmin": ["compute.addresses.create", "compute.addresses.createInternal", "compute.addresses.delete", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.setLabels", "compute.addresses.use", "compute.addresses.useInternal", "compute.globalAddresses.create", "compute.globalAddresses.createInternal", "compute.globalAddresses.delete", "compute.globalAddresses.deleteInternal", "compute.globalAddresses.get", "compute.globalAddresses.list", "compute.globalAddresses.setLabels", "compute.globalAddresses.use", "compute.globalPublicDelegatedPrefixes.create", "compute.globalPublicDelegatedPrefixes.delete", "compute.globalPublicDelegatedPrefixes.get", "compute.globalPublicDelegatedPrefixes.list", "compute.globalPublicDelegatedPrefixes.update", "compute.globalPublicDelegatedPrefixes.updatePolicy", "compute.globalPublicDelegatedPrefixes.use", "compute.publicAdvertisedPrefixes.create", "compute.publicAdvertisedPrefixes.delete", "compute.publicAdvertisedPrefixes.get", "compute.publicAdvertisedPrefixes.list", "compute.publicAdvertisedPrefixes.update", "compute.publicAdvertisedPrefixes.updatePolicy", "compute.publicAdvertisedPrefixes.use", "compute.publicDelegatedPrefixes.create", "compute.publicDelegatedPrefixes.delete", "compute.publicDelegatedPrefixes.get", "compute.publicDelegatedPrefixes.list", "compute.publicDelegatedPrefixes.update", "compute.publicDelegatedPrefixes.updatePolicy", "compute.publicDelegatedPrefixes.use", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/compute.networkUser": ["compute.addresses.createInternal", "compute.addresses.deleteInternal", "compute.addresses.get", "compute.addresses.list", "compute.addresses.useInternal", "compute.externalVpnGateways.get", "compute.externalVpnGateways.list", "compute.externalVpnGateways.use", "compute.firewalls.get", "compute.firewalls.list", "compute.interconnectAttachments.get", "compute.interconnectAttachments.list", "compute.interconnectLocations.get", "compute.interconnectLocations.list", "compute.interconnects.get", "compute.interconnects.list", "compute.interconnects.use", "compute.networks.access", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.listPeeringRoutes", "compute.networks.use", "compute.networks.useExternalIp", "compute.projects.get", "compute.regions.get", "compute.regions.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.subnetworks.get", "compute.subnetworks.list", "compute.subnetworks.use", "compute.subnetworks.useExternalIp", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnGateways.use", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "compute.zones.get", "compute.zones.list", "networksecurity.authorizationPolicies.get", "networksecurity.authorizationPolicies.list", "networksecurity.authorizationPolicies.use", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.use", "networksecurity.locations.get", "networksecurity.locations.list", "networksecurity.operations.get", "networksecurity.operations.list", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.use", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.use", "networkservices.httpFilters.get", "networkservices.httpFilters.list", "networkservices.httpFilters.use", "networkservices.httpfilters.get", "networkservices.httpfilters.list", "networkservices.httpfilters.use", "networkservices.locations.get", "networkservices.locations.list", "networkservices.operations.get", "networkservices.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicenetworking.services.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/multiclusteringress.serviceAgent": ["compute.addresses.get", "compute.addresses.list", "compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.forwardingRules.create", "compute.forwardingRules.delete", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.forwardingRules.setLabels", "compute.forwardingRules.setTarget", "compute.forwardingRules.update", "compute.globalAddresses.use", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalForwardingRules.update", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.networkEndpointGroups.use", "compute.networks.updatePolicy", "compute.networks.use", "compute.securityPolicies.use", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.clusters.get", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.update", "container.events.create", "container.events.update", "container.namespaces.list", "container.secrets.get", "container.secrets.list", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "gkehub.features.get", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.get", "gkehub.memberships.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/meshconfig.serviceAgent": ["compute.backendServices.create", "compute.backendServices.delete", "compute.backendServices.get", "compute.backendServices.list", "compute.backendServices.setSecurityPolicy", "compute.backendServices.update", "compute.backendServices.use", "compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.globalForwardingRules.create", "compute.globalForwardingRules.delete", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.globalForwardingRules.setLabels", "compute.globalForwardingRules.setTarget", "compute.globalOperations.get", "compute.globalOperations.list", "compute.healthChecks.create", "compute.healthChecks.delete", "compute.healthChecks.get", "compute.healthChecks.list", "compute.healthChecks.update", "compute.healthChecks.use", "compute.healthChecks.useReadOnly", "compute.networkEndpointGroups.get", "compute.networkEndpointGroups.list", "compute.networkEndpointGroups.use", "compute.networks.get", "compute.networks.updatePolicy", "compute.networks.use", "compute.subnetworks.use", "compute.targetHttpProxies.create", "compute.targetHttpProxies.delete", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpProxies.setUrlMap", "compute.targetHttpProxies.use", "compute.targetHttpsProxies.create", "compute.targetHttpsProxies.delete", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetHttpsProxies.setSslCertificates", "compute.targetHttpsProxies.setSslPolicy", "compute.targetHttpsProxies.setUrlMap", "compute.targetHttpsProxies.use", "compute.targetSslProxies.create", "compute.targetSslProxies.delete", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetSslProxies.setBackendService", "compute.targetSslProxies.setProxyHeader", "compute.targetSslProxies.setSslCertificates", "compute.targetSslProxies.use", "compute.targetTcpProxies.create", "compute.targetTcpProxies.delete", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetTcpProxies.update", "compute.targetTcpProxies.use", "compute.urlMaps.create", "compute.urlMaps.delete", "compute.urlMaps.get", "compute.urlMaps.invalidateCache", "compute.urlMaps.list", "compute.urlMaps.update", "compute.urlMaps.use", "compute.urlMaps.validate", "networksecurity.clientTlsPolicies.create", "networksecurity.clientTlsPolicies.delete", "networksecurity.clientTlsPolicies.get", "networksecurity.clientTlsPolicies.list", "networksecurity.clientTlsPolicies.update", "networksecurity.serverTlsPolicies.create", "networksecurity.serverTlsPolicies.delete", "networksecurity.serverTlsPolicies.get", "networksecurity.serverTlsPolicies.list", "networksecurity.serverTlsPolicies.update", "networkservices.endpointConfigSelectors.create", "networkservices.endpointConfigSelectors.delete", "networkservices.endpointConfigSelectors.get", "networkservices.endpointConfigSelectors.list", "networkservices.endpointConfigSelectors.update", "networkservices.httpFilters.create", "networkservices.httpFilters.delete", "networkservices.httpFilters.get", "networkservices.httpFilters.list", "networkservices.httpFilters.update", "networkservices.httpfilters.create", "networkservices.httpfilters.delete", "networkservices.httpfilters.get", "networkservices.httpfilters.list", "networkservices.httpfilters.update"], "roles/networkmanagement.serviceAgent": ["compute.backendServices.get", "compute.backendServices.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.get", "compute.forwardingRules.list", "compute.globalForwardingRules.get", "compute.globalForwardingRules.list", "compute.healthChecks.get", "compute.healthChecks.list", "compute.httpHealthChecks.get", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.get", "compute.httpsHealthChecks.list", "compute.instanceGroups.get", "compute.instanceGroups.list", "compute.instances.get", "compute.instances.list", "compute.networks.get", "compute.networks.list", "compute.regionBackendServices.get", "compute.regionBackendServices.list", "compute.regionTargetHttpProxies.get", "compute.regionTargetHttpProxies.list", "compute.regionTargetHttpsProxies.get", "compute.regionTargetHttpsProxies.list", "compute.regionUrlMaps.get", "compute.regionUrlMaps.list", "compute.routers.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.subnetworks.get", "compute.subnetworks.list", "compute.targetHttpProxies.get", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.get", "compute.targetHttpsProxies.list", "compute.targetInstances.get", "compute.targetInstances.list", "compute.targetPools.get", "compute.targetPools.list", "compute.targetSslProxies.get", "compute.targetSslProxies.list", "compute.targetTcpProxies.get", "compute.targetTcpProxies.list", "compute.targetVpnGateways.get", "compute.targetVpnGateways.list", "compute.urlMaps.get", "compute.urlMaps.list", "compute.vpnGateways.get", "compute.vpnGateways.list", "compute.vpnTunnels.get", "compute.vpnTunnels.list", "container.clusters.get", "container.clusters.list", "container.nodes.get", "container.nodes.list"], "roles/firewallinsights.serviceAgent": ["compute.backendServices.list", "compute.firewalls.get", "compute.firewalls.list", "compute.forwardingRules.list", "compute.healthChecks.list", "compute.httpHealthChecks.list", "compute.httpsHealthChecks.list", "compute.instanceGroups.list", "compute.instances.get", "compute.instances.list", "compute.networks.list", "compute.projects.get", "compute.routers.list", "compute.routes.get", "compute.routes.list", "compute.subnetworks.list", "compute.targetHttpProxies.list", "compute.targetHttpsProxies.list", "compute.targetPools.list", "compute.targetSslProxies.list", "compute.targetTcpProxies.list", "compute.targetVpnGateways.list", "compute.urlMaps.list", "compute.vpnGateways.list", "compute.vpnTunnels.list"], "roles/compute.storageAdmin": ["compute.diskTypes.get", "compute.diskTypes.list", "compute.disks.addResourcePolicies", "compute.disks.create", "compute.disks.createSnapshot", "compute.disks.delete", "compute.disks.get", "compute.disks.getIamPolicy", "compute.disks.list", "compute.disks.removeResourcePolicies", "compute.disks.resize", "compute.disks.setIamPolicy", "compute.disks.setLabels", "compute.disks.update", "compute.disks.use", "compute.disks.useReadOnly", "compute.globalOperations.get", "compute.globalOperations.list", "compute.images.create", "compute.images.delete", "compute.images.deprecate", "compute.images.get", "compute.images.getFromFamily", "compute.images.getIamPolicy", "compute.images.list", "compute.images.setIamPolicy", "compute.images.setLabels", "compute.images.update", "compute.images.useReadOnly", "compute.licenseCodes.get", "compute.licenseCodes.getIamPolicy", "compute.licenseCodes.list", "compute.licenseCodes.setIamPolicy", "compute.licenseCodes.update", "compute.licenseCodes.use", "compute.licenses.create", "compute.licenses.delete", "compute.licenses.get", "compute.licenses.getIamPolicy", "compute.licenses.list", "compute.licenses.setIamPolicy", "compute.projects.get", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regions.get", "compute.regions.list", "compute.resourcePolicies.create", "compute.resourcePolicies.delete", "compute.resourcePolicies.get", "compute.resourcePolicies.list", "compute.resourcePolicies.use", "compute.snapshots.create", "compute.snapshots.delete", "compute.snapshots.get", "compute.snapshots.getIamPolicy", "compute.snapshots.list", "compute.snapshots.setIamPolicy", "compute.snapshots.setLabels", "compute.snapshots.useReadOnly", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.securityAdmin": ["compute.firewalls.create", "compute.firewalls.delete", "compute.firewalls.get", "compute.firewalls.list", "compute.firewalls.update", "compute.globalOperations.get", "compute.globalOperations.list", "compute.instances.getEffectiveFirewalls", "compute.instances.setShieldedInstanceIntegrityPolicy", "compute.instances.setShieldedVmIntegrityPolicy", "compute.instances.updateShieldedInstanceConfig", "compute.instances.updateShieldedVmConfig", "compute.networks.get", "compute.networks.getEffectiveFirewalls", "compute.networks.list", "compute.networks.updatePolicy", "compute.packetMirrorings.update", "compute.projects.get", "compute.regionOperations.get", "compute.regionOperations.list", "compute.regionSslCertificates.create", "compute.regionSslCertificates.delete", "compute.regionSslCertificates.get", "compute.regionSslCertificates.list", "compute.regions.get", "compute.regions.list", "compute.routes.get", "compute.routes.list", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.setIamPolicy", "compute.securityPolicies.update", "compute.securityPolicies.use", "compute.sslCertificates.create", "compute.sslCertificates.delete", "compute.sslCertificates.get", "compute.sslCertificates.list", "compute.sslPolicies.create", "compute.sslPolicies.delete", "compute.sslPolicies.get", "compute.sslPolicies.list", "compute.sslPolicies.listAvailableFeatures", "compute.sslPolicies.update", "compute.sslPolicies.use", "compute.subnetworks.get", "compute.subnetworks.list", "compute.zoneOperations.get", "compute.zoneOperations.list", "compute.zones.get", "compute.zones.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/container.hostServiceAgentUser": ["compute.firewalls.get", "container.hostServiceAgent.use"], "roles/servicenetworking.serviceAgent": ["compute.globalAddresses.get", "compute.globalOperations.get", "compute.networks.addPeering", "compute.networks.create", "compute.networks.delete", "compute.networks.get", "compute.networks.list", "compute.networks.removePeering", "compute.networks.update", "compute.networks.updatePeering", "compute.networks.updatePolicy", "compute.projects.get", "compute.regionOperations.get", "compute.routers.get", "compute.routers.list", "compute.routes.list", "compute.subnetworks.create", "compute.subnetworks.delete", "compute.subnetworks.get", "compute.subnetworks.list", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.create", "dns.managedZones.delete", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSPolicy", "dns.networks.bindPrivateDNSZone", "dns.networks.targetWithPeeringZone", "dns.policies.create", "dns.policies.delete", "dns.policies.get", "dns.policies.list", "dns.policies.update", "dns.projects.get", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/compute.orgSecurityPolicyAdmin": ["compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.projects.get", "compute.securityPolicies.addAssociation", "compute.securityPolicies.copyRules", "compute.securityPolicies.create", "compute.securityPolicies.delete", "compute.securityPolicies.get", "compute.securityPolicies.getIamPolicy", "compute.securityPolicies.list", "compute.securityPolicies.move", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.setIamPolicy", "compute.securityPolicies.update", "compute.securityPolicies.use", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.orgSecurityPolicyUser": ["compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.projects.get", "compute.securityPolicies.addAssociation", "compute.securityPolicies.get", "compute.securityPolicies.list", "compute.securityPolicies.removeAssociation", "compute.securityPolicies.use", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.orgSecurityResourceAdmin": ["compute.globalOperations.get", "compute.globalOperations.getIamPolicy", "compute.globalOperations.list", "compute.globalOperations.setIamPolicy", "compute.organizations.listAssociations", "compute.organizations.setSecurityPolicy", "compute.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.xpnAdmin": ["compute.globalOperations.get", "compute.globalOperations.list", "compute.organizations.administerXpn", "compute.organizations.disableXpnHost", "compute.organizations.disableXpnResource", "compute.organizations.enableXpnHost", "compute.organizations.enableXpnResource", "compute.projects.get", "compute.subnetworks.getIamPolicy", "compute.subnetworks.setIamPolicy", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/file.serviceAgent": ["compute.globalOperations.get", "compute.networks.addPeering", "compute.networks.get", "compute.networks.removePeering", "compute.networks.update", "compute.networks.updatePeering", "compute.routes.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/managedidentities.serviceAgent": ["compute.globalOperations.get", "compute.networks.addPeering", "compute.networks.get", "compute.networks.removePeering", "compute.networks.update", "compute.routes.list", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.create", "dns.managedZones.delete", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSPolicy", "dns.networks.bindPrivateDNSZone", "dns.policies.create", "dns.policies.delete", "dns.policies.get", "dns.policies.list", "dns.policies.update", "dns.projects.get", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/memcache.serviceAgent": ["compute.globalOperations.get", "compute.networks.addPeering", "compute.networks.get", "compute.networks.removePeering", "compute.networks.update", "compute.routes.get", "compute.routes.list", "compute.subnetworks.get", "compute.subnetworks.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/redis.serviceAgent": ["compute.globalOperations.get", "compute.networks.addPeering", "compute.networks.get", "compute.networks.removePeering", "compute.networks.update", "compute.projects.get", "compute.routes.get", "compute.routes.list", "compute.subnetworks.get", "compute.subnetworks.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/tpu.serviceAgent": ["compute.globalOperations.get", "compute.networks.addPeering", "compute.networks.get", "compute.networks.removePeering", "compute.networks.update", "compute.routes.get", "compute.routes.list", "compute.subnetworks.get", "compute.subnetworks.list", "compute.zones.get", "compute.zones.list", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/compute.imageUser": ["compute.images.get", "compute.images.getFromFamily", "compute.images.list", "compute.images.useReadOnly", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/computescanning.serviceAgent": ["compute.images.get", "compute.images.list", "compute.images.useReadOnly", "compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.list", "compute.zones.get", "compute.zones.list", "containeranalysis.notes.attachOccurrence", "containeranalysis.notes.create", "containeranalysis.notes.delete", "containeranalysis.notes.get", "containeranalysis.notes.list", "containeranalysis.notes.update", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataflow.worker": ["compute.instanceGroupManagers.update", "compute.instances.delete", "compute.instances.setDiskAutoDelete", "dataflow.jobs.get", "logging.logEntries.create", "storage.objects.create", "storage.objects.get"], "roles/compute.osAdminLogin": ["compute.instances.get", "compute.instances.list", "compute.instances.osAdminLogin", "compute.instances.osLogin", "compute.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.osLogin": ["compute.instances.get", "compute.instances.list", "compute.instances.osLogin", "compute.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/osconfig.serviceAgent": ["compute.instances.get", "compute.instances.getGuestAttributes", "compute.instances.list", "compute.instances.setMetadata", "compute.zones.get", "compute.zones.list", "containeranalysis.notes.attachOccurrence", "containeranalysis.notes.create", "containeranalysis.notes.delete", "containeranalysis.notes.get", "containeranalysis.notes.list", "containeranalysis.notes.update", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "iam.serviceAccounts.actAs", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataflow.admin": ["compute.machineTypes.get", "dataflow.jobs.cancel", "dataflow.jobs.create", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.jobs.snapshot", "dataflow.jobs.updateContents", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.delete", "dataflow.snapshots.get", "dataflow.snapshots.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.buckets.get", "storage.objects.create", "storage.objects.get", "storage.objects.list"], "roles/dataproc.admin": ["compute.machineTypes.get", "compute.machineTypes.list", "compute.networks.get", "compute.networks.list", "compute.projects.get", "compute.regions.get", "compute.regions.list", "compute.zones.get", "compute.zones.list", "dataproc.autoscalingPolicies.create", "dataproc.autoscalingPolicies.delete", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.getIamPolicy", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.setIamPolicy", "dataproc.autoscalingPolicies.update", "dataproc.autoscalingPolicies.use", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.getIamPolicy", "dataproc.clusters.list", "dataproc.clusters.setIamPolicy", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.getIamPolicy", "dataproc.jobs.list", "dataproc.jobs.setIamPolicy", "dataproc.jobs.update", "dataproc.operations.cancel", "dataproc.operations.delete", "dataproc.operations.get", "dataproc.operations.getIamPolicy", "dataproc.operations.list", "dataproc.operations.setIamPolicy", "dataproc.workflowTemplates.create", "dataproc.workflowTemplates.delete", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.getIamPolicy", "dataproc.workflowTemplates.instantiate", "dataproc.workflowTemplates.instantiateInline", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.setIamPolicy", "dataproc.workflowTemplates.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataproc.editor": ["compute.machineTypes.get", "compute.machineTypes.list", "compute.networks.get", "compute.networks.list", "compute.projects.get", "compute.regions.get", "compute.regions.list", "compute.zones.get", "compute.zones.list", "dataproc.autoscalingPolicies.create", "dataproc.autoscalingPolicies.delete", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.list", "dataproc.autoscalingPolicies.update", "dataproc.autoscalingPolicies.use", "dataproc.clusters.create", "dataproc.clusters.delete", "dataproc.clusters.get", "dataproc.clusters.list", "dataproc.clusters.update", "dataproc.clusters.use", "dataproc.jobs.cancel", "dataproc.jobs.create", "dataproc.jobs.delete", "dataproc.jobs.get", "dataproc.jobs.list", "dataproc.jobs.update", "dataproc.operations.delete", "dataproc.operations.get", "dataproc.operations.list", "dataproc.workflowTemplates.create", "dataproc.workflowTemplates.delete", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.instantiate", "dataproc.workflowTemplates.instantiateInline", "dataproc.workflowTemplates.list", "dataproc.workflowTemplates.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataproc.viewer": ["compute.machineTypes.get", "compute.regions.get", "compute.regions.list", "compute.zones.get", "compute.zones.list", "dataproc.autoscalingPolicies.get", "dataproc.autoscalingPolicies.list", "dataproc.clusters.get", "dataproc.clusters.list", "dataproc.jobs.get", "dataproc.jobs.list", "dataproc.operations.get", "dataproc.operations.list", "dataproc.workflowTemplates.get", "dataproc.workflowTemplates.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/vpcaccess.user": ["compute.networks.access", "resourcemanager.projects.get", "resourcemanager.projects.list", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.connectors.use", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list"], "roles/dns.admin": ["compute.networks.get", "compute.networks.list", "dns.changes.create", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.create", "dns.managedZones.delete", "dns.managedZones.get", "dns.managedZones.list", "dns.managedZones.update", "dns.networks.bindPrivateDNSPolicy", "dns.networks.bindPrivateDNSZone", "dns.networks.targetWithPeeringZone", "dns.policies.create", "dns.policies.delete", "dns.policies.get", "dns.policies.list", "dns.policies.update", "dns.projects.get", "dns.resourceRecordSets.create", "dns.resourceRecordSets.delete", "dns.resourceRecordSets.list", "dns.resourceRecordSets.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dns.reader": ["compute.networks.get", "dns.changes.get", "dns.changes.list", "dns.dnsKeys.get", "dns.dnsKeys.list", "dns.managedZoneOperations.get", "dns.managedZoneOperations.list", "dns.managedZones.get", "dns.managedZones.list", "dns.policies.get", "dns.policies.list", "dns.projects.get", "dns.resourceRecordSets.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/memcache.admin": ["compute.networks.list", "memcache.instances.applyParameters", "memcache.instances.create", "memcache.instances.delete", "memcache.instances.get", "memcache.instances.list", "memcache.instances.update", "memcache.instances.updateParameters", "memcache.locations.get", "memcache.locations.list", "memcache.operations.cancel", "memcache.operations.delete", "memcache.operations.get", "memcache.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/redis.admin": ["compute.networks.list", "redis.instances.create", "redis.instances.delete", "redis.instances.export", "redis.instances.failover", "redis.instances.get", "redis.instances.getAuthString", "redis.instances.import", "redis.instances.list", "redis.instances.update", "redis.instances.updateAuth", "redis.instances.upgrade", "redis.locations.get", "redis.locations.list", "redis.operations.cancel", "redis.operations.delete", "redis.operations.get", "redis.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use"], "roles/redis.editor": ["compute.networks.list", "redis.instances.failover", "redis.instances.get", "redis.instances.list", "redis.instances.update", "redis.locations.get", "redis.locations.list", "redis.operations.cancel", "redis.operations.delete", "redis.operations.get", "redis.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use"], "roles/compute.packetMirroringAdmin": ["compute.networks.mirror", "compute.projects.get", "compute.subnetworks.mirror", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/compute.osLoginExternalUser": ["compute.oslogin.updateExternalUser"], "roles/compute.packetMirroringUser": ["compute.packetMirrorings.update", "compute.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/consumerprocurement.orderAdmin": ["consumerprocurement.accounts.create", "consumerprocurement.accounts.delete", "consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.orders.cancel", "consumerprocurement.orders.get", "consumerprocurement.orders.list", "consumerprocurement.orders.modify", "consumerprocurement.orders.place"], "roles/consumerprocurement.orderViewer": ["consumerprocurement.accounts.get", "consumerprocurement.accounts.list", "consumerprocurement.orders.get", "consumerprocurement.orders.list"], "roles/consumerprocurement.entitlementManager": ["consumerprocurement.entitlements.get", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.create", "consumerprocurement.freeTrials.get", "consumerprocurement.freeTrials.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.operations.get", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list"], "roles/consumerprocurement.entitlementViewer": ["consumerprocurement.entitlements.get", "consumerprocurement.entitlements.list", "consumerprocurement.freeTrials.get", "consumerprocurement.freeTrials.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/container.admin": ["container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.approve", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusterRoles.update", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.getCredentials", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.create", "container.controllerRevisions.delete", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.controllerRevisions.update", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.hostServiceAgent.use", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.create", "container.podSecurityPolicies.delete", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podSecurityPolicies.update", "container.podSecurityPolicies.use", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.create", "container.roleBindings.delete", "container.roleBindings.get", "container.roleBindings.list", "container.roleBindings.update", "container.roles.bind", "container.roles.create", "container.roles.delete", "container.roles.get", "container.roles.list", "container.roles.update", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/container.developer": ["container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.get", "container.clusters.list", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/gameservices.serviceAgent": ["container.apiServices.create", "container.apiServices.delete", "container.apiServices.get", "container.apiServices.list", "container.apiServices.update", "container.apiServices.updateStatus", "container.backendConfigs.create", "container.backendConfigs.delete", "container.backendConfigs.get", "container.backendConfigs.list", "container.backendConfigs.update", "container.bindings.create", "container.bindings.delete", "container.bindings.get", "container.bindings.list", "container.bindings.update", "container.certificateSigningRequests.create", "container.certificateSigningRequests.delete", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.certificateSigningRequests.update", "container.certificateSigningRequests.updateStatus", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.list", "container.clusters.update", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.create", "container.configMaps.delete", "container.configMaps.get", "container.configMaps.list", "container.configMaps.update", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.create", "container.cronJobs.delete", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.cronJobs.update", "container.cronJobs.updateStatus", "container.csiDrivers.create", "container.csiDrivers.delete", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiDrivers.update", "container.csiNodes.create", "container.csiNodes.delete", "container.csiNodes.get", "container.csiNodes.list", "container.csiNodes.update", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.customResourceDefinitions.update", "container.customResourceDefinitions.updateStatus", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.create", "container.deployments.delete", "container.deployments.get", "container.deployments.getScale", "container.deployments.getStatus", "container.deployments.list", "container.deployments.rollback", "container.deployments.update", "container.deployments.updateScale", "container.deployments.updateStatus", "container.endpoints.create", "container.endpoints.delete", "container.endpoints.get", "container.endpoints.list", "container.endpoints.update", "container.events.create", "container.events.delete", "container.events.get", "container.events.list", "container.events.update", "container.horizontalPodAutoscalers.create", "container.horizontalPodAutoscalers.delete", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.horizontalPodAutoscalers.update", "container.horizontalPodAutoscalers.updateStatus", "container.ingresses.create", "container.ingresses.delete", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.ingresses.update", "container.ingresses.updateStatus", "container.initializerConfigurations.create", "container.initializerConfigurations.delete", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.initializerConfigurations.update", "container.jobs.create", "container.jobs.delete", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.jobs.update", "container.jobs.updateStatus", "container.limitRanges.create", "container.limitRanges.delete", "container.limitRanges.get", "container.limitRanges.list", "container.limitRanges.update", "container.localSubjectAccessReviews.create", "container.localSubjectAccessReviews.list", "container.namespaces.create", "container.namespaces.delete", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.namespaces.update", "container.namespaces.updateStatus", "container.networkPolicies.create", "container.networkPolicies.delete", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.create", "container.nodes.delete", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.nodes.proxy", "container.nodes.update", "container.nodes.updateStatus", "container.persistentVolumeClaims.create", "container.persistentVolumeClaims.delete", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumeClaims.update", "container.persistentVolumeClaims.updateStatus", "container.persistentVolumes.create", "container.persistentVolumes.delete", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.persistentVolumes.update", "container.persistentVolumes.updateStatus", "container.petSets.create", "container.petSets.delete", "container.petSets.get", "container.petSets.list", "container.petSets.update", "container.petSets.updateStatus", "container.podDisruptionBudgets.create", "container.podDisruptionBudgets.delete", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podDisruptionBudgets.update", "container.podDisruptionBudgets.updateStatus", "container.podPresets.create", "container.podPresets.delete", "container.podPresets.get", "container.podPresets.list", "container.podPresets.update", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.create", "container.podTemplates.delete", "container.podTemplates.get", "container.podTemplates.list", "container.podTemplates.update", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.evict", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.initialize", "container.pods.list", "container.pods.portForward", "container.pods.proxy", "container.pods.update", "container.pods.updateStatus", "container.replicaSets.create", "container.replicaSets.delete", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicaSets.update", "container.replicaSets.updateScale", "container.replicaSets.updateStatus", "container.replicationControllers.create", "container.replicationControllers.delete", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.replicationControllers.update", "container.replicationControllers.updateScale", "container.replicationControllers.updateStatus", "container.resourceQuotas.create", "container.resourceQuotas.delete", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.resourceQuotas.update", "container.resourceQuotas.updateStatus", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.create", "container.runtimeClasses.delete", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.runtimeClasses.update", "container.scheduledJobs.create", "container.scheduledJobs.delete", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.scheduledJobs.update", "container.scheduledJobs.updateStatus", "container.secrets.create", "container.secrets.delete", "container.secrets.get", "container.secrets.list", "container.secrets.update", "container.selfSubjectAccessReviews.create", "container.selfSubjectAccessReviews.list", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.create", "container.services.delete", "container.services.get", "container.services.getStatus", "container.services.list", "container.services.proxy", "container.services.update", "container.services.updateStatus", "container.statefulSets.create", "container.statefulSets.delete", "container.statefulSets.get", "container.statefulSets.getScale", "container.statefulSets.getStatus", "container.statefulSets.list", "container.statefulSets.update", "container.statefulSets.updateScale", "container.statefulSets.updateStatus", "container.storageClasses.create", "container.storageClasses.delete", "container.storageClasses.get", "container.storageClasses.list", "container.storageClasses.update", "container.subjectAccessReviews.create", "container.subjectAccessReviews.list", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "container.thirdPartyResources.create", "container.thirdPartyResources.delete", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.thirdPartyResources.update", "container.tokenReviews.create", "gkehub.features.get", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.operations.get", "gkehub.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/container.viewer": ["container.apiServices.get", "container.apiServices.list", "container.backendConfigs.get", "container.backendConfigs.list", "container.bindings.get", "container.bindings.list", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusters.get", "container.clusters.list", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.get", "container.configMaps.list", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiNodes.get", "container.csiNodes.list", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.deployments.get", "container.deployments.getStatus", "container.deployments.list", "container.endpoints.get", "container.endpoints.list", "container.events.get", "container.events.list", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.limitRanges.get", "container.limitRanges.list", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.networkPolicies.get", "container.networkPolicies.list", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.petSets.get", "container.petSets.list", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podPresets.get", "container.podPresets.list", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.get", "container.podTemplates.list", "container.pods.get", "container.pods.getStatus", "container.pods.list", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.services.get", "container.services.getStatus", "container.services.list", "container.statefulSets.get", "container.statefulSets.getStatus", "container.statefulSets.list", "container.storageClasses.get", "container.storageClasses.list", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.tokenReviews.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/containerthreatdetection.serviceAgent": ["container.apiServices.get", "container.apiServices.list", "container.backendConfigs.get", "container.backendConfigs.list", "container.bindings.get", "container.bindings.list", "container.certificateSigningRequests.get", "container.certificateSigningRequests.list", "container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.list", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.list", "container.clusterRoles.update", "container.clusters.get", "container.clusters.list", "container.componentStatuses.get", "container.componentStatuses.list", "container.configMaps.get", "container.configMaps.list", "container.controllerRevisions.get", "container.controllerRevisions.list", "container.cronJobs.get", "container.cronJobs.getStatus", "container.cronJobs.list", "container.csiDrivers.get", "container.csiDrivers.list", "container.csiNodes.get", "container.csiNodes.list", "container.customResourceDefinitions.get", "container.customResourceDefinitions.list", "container.daemonSets.create", "container.daemonSets.delete", "container.daemonSets.get", "container.daemonSets.getStatus", "container.daemonSets.list", "container.daemonSets.update", "container.daemonSets.updateStatus", "container.deployments.get", "container.deployments.getStatus", "container.deployments.list", "container.endpoints.get", "container.endpoints.list", "container.events.get", "container.events.list", "container.horizontalPodAutoscalers.get", "container.horizontalPodAutoscalers.getStatus", "container.horizontalPodAutoscalers.list", "container.ingresses.get", "container.ingresses.getStatus", "container.ingresses.list", "container.initializerConfigurations.get", "container.initializerConfigurations.list", "container.jobs.get", "container.jobs.getStatus", "container.jobs.list", "container.limitRanges.get", "container.limitRanges.list", "container.namespaces.get", "container.namespaces.getStatus", "container.namespaces.list", "container.networkPolicies.get", "container.networkPolicies.list", "container.networkPolicies.update", "container.nodes.get", "container.nodes.getStatus", "container.nodes.list", "container.operations.get", "container.operations.list", "container.persistentVolumeClaims.get", "container.persistentVolumeClaims.getStatus", "container.persistentVolumeClaims.list", "container.persistentVolumes.get", "container.persistentVolumes.getStatus", "container.persistentVolumes.list", "container.petSets.get", "container.petSets.list", "container.podDisruptionBudgets.get", "container.podDisruptionBudgets.getStatus", "container.podDisruptionBudgets.list", "container.podPresets.get", "container.podPresets.list", "container.podSecurityPolicies.get", "container.podSecurityPolicies.list", "container.podTemplates.get", "container.podTemplates.list", "container.pods.attach", "container.pods.create", "container.pods.delete", "container.pods.exec", "container.pods.get", "container.pods.getLogs", "container.pods.getStatus", "container.pods.list", "container.pods.portForward", "container.pods.update", "container.replicaSets.get", "container.replicaSets.getScale", "container.replicaSets.getStatus", "container.replicaSets.list", "container.replicationControllers.get", "container.replicationControllers.getScale", "container.replicationControllers.getStatus", "container.replicationControllers.list", "container.resourceQuotas.get", "container.resourceQuotas.getStatus", "container.resourceQuotas.list", "container.roleBindings.get", "container.roleBindings.list", "container.roles.get", "container.roles.list", "container.runtimeClasses.get", "container.runtimeClasses.list", "container.scheduledJobs.get", "container.scheduledJobs.list", "container.secrets.create", "container.secrets.delete", "container.secrets.list", "container.secrets.update", "container.serviceAccounts.create", "container.serviceAccounts.delete", "container.serviceAccounts.get", "container.serviceAccounts.list", "container.serviceAccounts.update", "container.services.get", "container.services.getStatus", "container.services.list", "container.statefulSets.get", "container.statefulSets.getStatus", "container.statefulSets.list", "container.storageClasses.get", "container.storageClasses.list", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyResources.get", "container.thirdPartyResources.list", "container.tokenReviews.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/gkehub.serviceAgent": ["container.clusterRoleBindings.create", "container.clusterRoleBindings.delete", "container.clusterRoleBindings.get", "container.clusterRoleBindings.update", "container.clusterRoles.bind", "container.clusterRoles.create", "container.clusterRoles.delete", "container.clusterRoles.get", "container.clusterRoles.update", "container.clusters.get", "container.customResourceDefinitions.create", "container.customResourceDefinitions.delete", "container.customResourceDefinitions.get", "container.customResourceDefinitions.update", "container.namespaces.get", "container.thirdPartyObjects.create", "container.thirdPartyObjects.delete", "container.thirdPartyObjects.get", "container.thirdPartyObjects.list", "container.thirdPartyObjects.update", "gkehub.features.create", "gkehub.features.get", "gkehub.features.list", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.list", "gkehub.operations.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/container.clusterAdmin": ["container.clusters.create", "container.clusters.delete", "container.clusters.get", "container.clusters.list", "container.clusters.update", "container.operations.get", "container.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/container.clusterViewer": ["container.clusters.get", "container.clusters.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/containeranalysis.admin": ["containeranalysis.notes.attachOccurrence", "containeranalysis.notes.create", "containeranalysis.notes.delete", "containeranalysis.notes.get", "containeranalysis.notes.getIamPolicy", "containeranalysis.notes.list", "containeranalysis.notes.setIamPolicy", "containeranalysis.notes.update", "containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.getIamPolicy", "containeranalysis.occurrences.list", "containeranalysis.occurrences.setIamPolicy", "containeranalysis.occurrences.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/containeranalysis.notes.attacher": ["containeranalysis.notes.attachOccurrence", "containeranalysis.notes.get"], "roles/containeranalysis.notes.editor": ["containeranalysis.notes.attachOccurrence", "containeranalysis.notes.create", "containeranalysis.notes.delete", "containeranalysis.notes.get", "containeranalysis.notes.list", "containeranalysis.notes.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/containeranalysis.notes.occurrences.viewer": ["containeranalysis.notes.get", "containeranalysis.notes.listOccurrences"], "roles/containeranalysis.notes.viewer": ["containeranalysis.notes.get", "containeranalysis.notes.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/containeranalysis.occurrences.editor": ["containeranalysis.occurrences.create", "containeranalysis.occurrences.delete", "containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "containeranalysis.occurrences.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/containeranalysis.occurrences.viewer": ["containeranalysis.occurrences.get", "containeranalysis.occurrences.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.categoryFineGrainedReader": ["datacatalog.categories.fineGrainedGet"], "roles/datacatalog.categoryAdmin": ["datacatalog.categories.getIamPolicy", "datacatalog.categories.setIamPolicy", "datacatalog.taxonomies.create", "datacatalog.taxonomies.delete", "datacatalog.taxonomies.get", "datacatalog.taxonomies.getIamPolicy", "datacatalog.taxonomies.list", "datacatalog.taxonomies.setIamPolicy", "datacatalog.taxonomies.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.entryGroupOwner": ["datacatalog.entries.create", "datacatalog.entries.delete", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entries.setIamPolicy", "datacatalog.entries.update", "datacatalog.entries.updateTag", "datacatalog.entryGroups.create", "datacatalog.entryGroups.delete", "datacatalog.entryGroups.get", "datacatalog.entryGroups.getIamPolicy", "datacatalog.entryGroups.list", "datacatalog.entryGroups.setIamPolicy", "datacatalog.entryGroups.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.entryOwner": ["datacatalog.entries.create", "datacatalog.entries.delete", "datacatalog.entries.get", "datacatalog.entries.getIamPolicy", "datacatalog.entries.list", "datacatalog.entries.setIamPolicy", "datacatalog.entries.update", "datacatalog.entries.updateTag", "datacatalog.entryGroups.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.entryViewer": ["datacatalog.entries.get", "datacatalog.entries.list", "datacatalog.entryGroups.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.entryGroupCreator": ["datacatalog.entryGroups.create", "datacatalog.entryGroups.get", "datacatalog.entryGroups.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.tagTemplateCreator": ["datacatalog.tagTemplates.create", "datacatalog.tagTemplates.get"], "roles/datacatalog.tagTemplateOwner": ["datacatalog.tagTemplates.create", "datacatalog.tagTemplates.delete", "datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getIamPolicy", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.setIamPolicy", "datacatalog.tagTemplates.update", "datacatalog.tagTemplates.use", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.tagTemplateUser": ["datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getTag", "datacatalog.tagTemplates.use", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datacatalog.tagTemplateViewer": ["datacatalog.tagTemplates.get", "datacatalog.tagTemplates.getTag", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataflow.developer": ["dataflow.jobs.cancel", "dataflow.jobs.create", "dataflow.jobs.get", "dataflow.jobs.list", "dataflow.jobs.snapshot", "dataflow.jobs.updateContents", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.delete", "dataflow.snapshots.get", "dataflow.snapshots.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataflow.viewer": ["dataflow.jobs.get", "dataflow.jobs.list", "dataflow.messages.list", "dataflow.metrics.get", "dataflow.snapshots.get", "dataflow.snapshots.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datafusion.admin": ["datafusion.instances.create", "datafusion.instances.delete", "datafusion.instances.get", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.restart", "datafusion.instances.runtime", "datafusion.instances.setIamPolicy", "datafusion.instances.update", "datafusion.instances.upgrade", "datafusion.locations.get", "datafusion.locations.list", "datafusion.operations.cancel", "datafusion.operations.get", "datafusion.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datafusion.viewer": ["datafusion.instances.get", "datafusion.instances.getIamPolicy", "datafusion.instances.list", "datafusion.instances.runtime", "datafusion.locations.get", "datafusion.locations.list", "datafusion.operations.get", "datafusion.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datafusion.runner": ["datafusion.instances.runtime"], "roles/datalabeling.admin": ["datalabeling.annotateddatasets.delete", "datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.label", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.create", "datalabeling.annotationspecsets.delete", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.create", "datalabeling.datasets.delete", "datalabeling.datasets.export", "datalabeling.datasets.get", "datalabeling.datasets.import", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.create", "datalabeling.instructions.delete", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.cancel", "datalabeling.operations.get", "datalabeling.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datalabeling.editor": ["datalabeling.annotateddatasets.delete", "datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.label", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.create", "datalabeling.annotationspecsets.delete", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.create", "datalabeling.datasets.delete", "datalabeling.datasets.export", "datalabeling.datasets.get", "datalabeling.datasets.import", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.create", "datalabeling.instructions.delete", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.cancel", "datalabeling.operations.get", "datalabeling.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datalabeling.viewer": ["datalabeling.annotateddatasets.get", "datalabeling.annotateddatasets.list", "datalabeling.annotationspecsets.get", "datalabeling.annotationspecsets.list", "datalabeling.dataitems.get", "datalabeling.dataitems.list", "datalabeling.datasets.get", "datalabeling.datasets.list", "datalabeling.examples.get", "datalabeling.examples.list", "datalabeling.instructions.get", "datalabeling.instructions.list", "datalabeling.operations.get", "datalabeling.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/datamigration.admin": ["datamigration.connectionprofiles.create", "datamigration.connectionprofiles.delete", "datamigration.connectionprofiles.get", "datamigration.connectionprofiles.getIamPolicy", "datamigration.connectionprofiles.list", "datamigration.connectionprofiles.setIamPolicy", "datamigration.connectionprofiles.update", "datamigration.locations.get", "datamigration.locations.list", "datamigration.migrationjobs.create", "datamigration.migrationjobs.delete", "datamigration.migrationjobs.generateSshScript", "datamigration.migrationjobs.get", "datamigration.migrationjobs.getIamPolicy", "datamigration.migrationjobs.list", "datamigration.migrationjobs.promote", "datamigration.migrationjobs.restart", "datamigration.migrationjobs.resume", "datamigration.migrationjobs.setIamPolicy", "datamigration.migrationjobs.start", "datamigration.migrationjobs.stop", "datamigration.migrationjobs.update", "datamigration.migrationjobs.verify", "datamigration.operations.cancel", "datamigration.operations.delete", "datamigration.operations.get", "datamigration.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/dataprep.projects.user": ["dataprep.projects.use", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/dataproc.worker": ["dataproc.agents.create", "dataproc.agents.delete", "dataproc.agents.get", "dataproc.agents.list", "dataproc.agents.update", "dataproc.tasks.lease", "dataproc.tasks.listInvalidatedLeases", "dataproc.tasks.reportStatus", "logging.logEntries.create", "monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create", "storage.buckets.get", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/deploymentmanager.editor": ["deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.deployments.cancelPreview", "deploymentmanager.deployments.create", "deploymentmanager.deployments.delete", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.deployments.stop", "deploymentmanager.deployments.update", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.typeProviders.update", "deploymentmanager.types.create", "deploymentmanager.types.delete", "deploymentmanager.types.get", "deploymentmanager.types.list", "deploymentmanager.types.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/deploymentmanager.typeEditor": ["deploymentmanager.compositeTypes.create", "deploymentmanager.compositeTypes.delete", "deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.compositeTypes.update", "deploymentmanager.operations.get", "deploymentmanager.typeProviders.create", "deploymentmanager.typeProviders.delete", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.typeProviders.update", "deploymentmanager.types.create", "deploymentmanager.types.delete", "deploymentmanager.types.get", "deploymentmanager.types.list", "deploymentmanager.types.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get"], "roles/deploymentmanager.typeViewer": ["deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.types.get", "deploymentmanager.types.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get"], "roles/deploymentmanager.viewer": ["deploymentmanager.compositeTypes.get", "deploymentmanager.compositeTypes.list", "deploymentmanager.deployments.get", "deploymentmanager.deployments.list", "deploymentmanager.manifests.get", "deploymentmanager.manifests.list", "deploymentmanager.operations.get", "deploymentmanager.operations.list", "deploymentmanager.resources.get", "deploymentmanager.resources.list", "deploymentmanager.typeProviders.get", "deploymentmanager.typeProviders.getType", "deploymentmanager.typeProviders.list", "deploymentmanager.typeProviders.listTypes", "deploymentmanager.types.get", "deploymentmanager.types.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/dialogflow.admin": ["dialogflow.agents.create", "dialogflow.agents.delete", "dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.import", "dialogflow.agents.list", "dialogflow.agents.restore", "dialogflow.agents.search", "dialogflow.agents.train", "dialogflow.agents.update", "dialogflow.agents.validate", "dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.documents.create", "dialogflow.documents.delete", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.create", "dialogflow.entityTypes.createEntity", "dialogflow.entityTypes.delete", "dialogflow.entityTypes.deleteEntity", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.entityTypes.update", "dialogflow.entityTypes.updateEntity", "dialogflow.environments.create", "dialogflow.environments.delete", "dialogflow.environments.get", "dialogflow.environments.getHistory", "dialogflow.environments.list", "dialogflow.environments.lookupHistory", "dialogflow.environments.update", "dialogflow.flows.create", "dialogflow.flows.delete", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.flows.train", "dialogflow.flows.update", "dialogflow.flows.validate", "dialogflow.fulfillments.get", "dialogflow.fulfillments.update", "dialogflow.intents.create", "dialogflow.intents.delete", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.intents.update", "dialogflow.knowledgeBases.create", "dialogflow.knowledgeBases.delete", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.create", "dialogflow.pages.delete", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.pages.update", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent", "dialogflow.transitionRouteGroups.create", "dialogflow.transitionRouteGroups.delete", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.transitionRouteGroups.update", "dialogflow.versions.create", "dialogflow.versions.delete", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.versions.load", "dialogflow.versions.update", "dialogflow.webhooks.create", "dialogflow.webhooks.delete", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "dialogflow.webhooks.update", "resourcemanager.projects.get"], "roles/dialogflow.reader": ["dialogflow.agents.export", "dialogflow.agents.get", "dialogflow.agents.list", "dialogflow.agents.search", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.documents.get", "dialogflow.documents.list", "dialogflow.entityTypes.get", "dialogflow.entityTypes.list", "dialogflow.environments.get", "dialogflow.environments.list", "dialogflow.flows.get", "dialogflow.flows.list", "dialogflow.fulfillments.get", "dialogflow.intents.get", "dialogflow.intents.list", "dialogflow.knowledgeBases.get", "dialogflow.knowledgeBases.list", "dialogflow.operations.get", "dialogflow.pages.get", "dialogflow.pages.list", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.transitionRouteGroups.get", "dialogflow.transitionRouteGroups.list", "dialogflow.versions.get", "dialogflow.versions.list", "dialogflow.webhooks.get", "dialogflow.webhooks.list", "resourcemanager.projects.get"], "roles/dialogflow.client": ["dialogflow.contexts.create", "dialogflow.contexts.delete", "dialogflow.contexts.get", "dialogflow.contexts.list", "dialogflow.contexts.update", "dialogflow.sessionEntityTypes.create", "dialogflow.sessionEntityTypes.delete", "dialogflow.sessionEntityTypes.get", "dialogflow.sessionEntityTypes.list", "dialogflow.sessionEntityTypes.update", "dialogflow.sessions.detectIntent", "dialogflow.sessions.streamingDetectIntent"], "roles/dlp.admin": ["dlp.analyzeRiskTemplates.create", "dlp.analyzeRiskTemplates.delete", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.analyzeRiskTemplates.update", "dlp.deidentifyTemplates.create", "dlp.deidentifyTemplates.delete", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.deidentifyTemplates.update", "dlp.inspectFindings.list", "dlp.inspectTemplates.create", "dlp.inspectTemplates.delete", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.inspectTemplates.update", "dlp.jobTriggers.create", "dlp.jobTriggers.delete", "dlp.jobTriggers.get", "dlp.jobTriggers.hybridInspect", "dlp.jobTriggers.list", "dlp.jobTriggers.update", "dlp.jobs.cancel", "dlp.jobs.create", "dlp.jobs.delete", "dlp.jobs.get", "dlp.jobs.hybridInspect", "dlp.jobs.list", "dlp.kms.encrypt", "dlp.storedInfoTypes.create", "dlp.storedInfoTypes.delete", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list", "dlp.storedInfoTypes.update", "serviceusage.services.use"], "roles/dlp.analyzeRiskTemplatesEditor": ["dlp.analyzeRiskTemplates.create", "dlp.analyzeRiskTemplates.delete", "dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.analyzeRiskTemplates.update"], "roles/dlp.analyzeRiskTemplatesReader": ["dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list"], "roles/dlp.reader": ["dlp.analyzeRiskTemplates.get", "dlp.analyzeRiskTemplates.list", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.inspectFindings.list", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.jobTriggers.get", "dlp.jobTriggers.list", "dlp.jobs.get", "dlp.jobs.list", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list"], "roles/dlp.deidentifyTemplatesEditor": ["dlp.deidentifyTemplates.create", "dlp.deidentifyTemplates.delete", "dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list", "dlp.deidentifyTemplates.update"], "roles/dlp.deidentifyTemplatesReader": ["dlp.deidentifyTemplates.get", "dlp.deidentifyTemplates.list"], "roles/dlp.inspectFindingsReader": ["dlp.inspectFindings.list"], "roles/dlp.inspectTemplatesEditor": ["dlp.inspectTemplates.create", "dlp.inspectTemplates.delete", "dlp.inspectTemplates.get", "dlp.inspectTemplates.list", "dlp.inspectTemplates.update"], "roles/dlp.inspectTemplatesReader": ["dlp.inspectTemplates.get", "dlp.inspectTemplates.list"], "roles/dlp.jobTriggersEditor": ["dlp.jobTriggers.create", "dlp.jobTriggers.delete", "dlp.jobTriggers.get", "dlp.jobTriggers.hybridInspect", "dlp.jobTriggers.list", "dlp.jobTriggers.update"], "roles/dlp.jobTriggersReader": ["dlp.jobTriggers.get", "dlp.jobTriggers.list"], "roles/dlp.jobsEditor": ["dlp.jobs.cancel", "dlp.jobs.create", "dlp.jobs.delete", "dlp.jobs.get", "dlp.jobs.hybridInspect", "dlp.jobs.list", "dlp.kms.encrypt"], "roles/dlp.jobsReader": ["dlp.jobs.get", "dlp.jobs.list"], "roles/dlp.user": ["dlp.kms.encrypt", "serviceusage.services.use"], "roles/dlp.storedInfoTypesEditor": ["dlp.storedInfoTypes.create", "dlp.storedInfoTypes.delete", "dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list", "dlp.storedInfoTypes.update"], "roles/dlp.storedInfoTypesReader": ["dlp.storedInfoTypes.get", "dlp.storedInfoTypes.list"], "roles/dns.peer": ["dns.networks.targetWithPeeringZone"], "roles/documentai.admin": ["documentai.humanReviewConfigs.get", "documentai.humanReviewConfigs.review", "documentai.humanReviewConfigs.update", "documentai.labelerPools.create", "documentai.labelerPools.delete", "documentai.labelerPools.get", "documentai.labelerPools.list", "documentai.labelerPools.update", "documentai.locations.get", "documentai.locations.list", "documentai.operations.getLegacy", "documentai.processorTypes.list", "documentai.processorVersions.create", "documentai.processorVersions.delete", "documentai.processorVersions.get", "documentai.processorVersions.list", "documentai.processors.create", "documentai.processors.delete", "documentai.processors.fetchHumanReviewDetails", "documentai.processors.get", "documentai.processors.list", "documentai.processors.processBatch", "documentai.processors.processOnline", "documentai.processors.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/documentai.editor": ["documentai.humanReviewConfigs.get", "documentai.humanReviewConfigs.review", "documentai.humanReviewConfigs.update", "documentai.labelerPools.create", "documentai.labelerPools.delete", "documentai.labelerPools.get", "documentai.labelerPools.list", "documentai.labelerPools.update", "documentai.locations.get", "documentai.locations.list", "documentai.operations.getLegacy", "documentai.processorTypes.list", "documentai.processorVersions.create", "documentai.processorVersions.delete", "documentai.processorVersions.get", "documentai.processorVersions.list", "documentai.processors.create", "documentai.processors.delete", "documentai.processors.fetchHumanReviewDetails", "documentai.processors.get", "documentai.processors.list", "documentai.processors.processBatch", "documentai.processors.processOnline", "documentai.processors.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/documentai.viewer": ["documentai.humanReviewConfigs.get", "documentai.humanReviewConfigs.review", "documentai.labelerPools.get", "documentai.labelerPools.list", "documentai.locations.get", "documentai.locations.list", "documentai.operations.getLegacy", "documentai.processorTypes.list", "documentai.processorVersions.get", "documentai.processorVersions.list", "documentai.processors.fetchHumanReviewDetails", "documentai.processors.get", "documentai.processors.list", "documentai.processors.processBatch", "documentai.processors.processOnline", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/documentai.apiUser": ["documentai.humanReviewConfigs.review", "documentai.operations.getLegacy", "documentai.processors.processBatch", "documentai.processors.processOnline"], "roles/domains.admin": ["domains.locations.get", "domains.locations.list", "domains.operations.cancel", "domains.operations.get", "domains.operations.list", "domains.registrations.configureContact", "domains.registrations.configureDns", "domains.registrations.configureManagement", "domains.registrations.create", "domains.registrations.delete", "domains.registrations.get", "domains.registrations.getIamPolicy", "domains.registrations.list", "domains.registrations.setIamPolicy", "domains.registrations.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/domains.viewer": ["domains.locations.get", "domains.locations.list", "domains.operations.get", "domains.operations.list", "domains.registrations.get", "domains.registrations.getIamPolicy", "domains.registrations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/earlyaccesscenter.admin": ["earlyaccesscenter.campaigns.enroll", "earlyaccesscenter.campaigns.get", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.get", "earlyaccesscenter.customerWhitelists.list"], "roles/earlyaccesscenter.viewer": ["earlyaccesscenter.campaigns.get", "earlyaccesscenter.campaigns.list", "earlyaccesscenter.customerWhitelists.get", "earlyaccesscenter.customerWhitelists.list"], "roles/endpoints.portalAdmin": ["endpoints.portals.attachCustomDomain", "endpoints.portals.detachCustomDomain", "endpoints.portals.listCustomDomains", "endpoints.portals.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicemanagement.services.get"], "roles/errorreporting.writer": ["errorreporting.errorEvents.create"], "roles/essentialcontacts.admin": ["essentialcontacts.contacts.create", "essentialcontacts.contacts.delete", "essentialcontacts.contacts.get", "essentialcontacts.contacts.list", "essentialcontacts.contacts.update"], "roles/essentialcontacts.viewer": ["essentialcontacts.contacts.get", "essentialcontacts.contacts.list"], "roles/eventarc.admin": ["eventarc.events.receiveAuditLogWritten", "eventarc.locations.get", "eventarc.locations.list", "eventarc.operations.cancel", "eventarc.operations.delete", "eventarc.operations.get", "eventarc.operations.list", "eventarc.triggers.create", "eventarc.triggers.delete", "eventarc.triggers.get", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "eventarc.triggers.setIamPolicy", "eventarc.triggers.undelete", "eventarc.triggers.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/eventarc.viewer": ["eventarc.locations.get", "eventarc.locations.list", "eventarc.operations.get", "eventarc.operations.list", "eventarc.triggers.get", "eventarc.triggers.getIamPolicy", "eventarc.triggers.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/file.editor": ["file.backups.create", "file.backups.delete", "file.backups.get", "file.backups.list", "file.backups.update", "file.instances.create", "file.instances.delete", "file.instances.get", "file.instances.list", "file.instances.restore", "file.instances.update", "file.locations.get", "file.locations.list", "file.operations.cancel", "file.operations.delete", "file.operations.get", "file.operations.list"], "roles/file.viewer": ["file.backups.get", "file.backups.list", "file.instances.get", "file.instances.list", "file.locations.get", "file.locations.list", "file.operations.get", "file.operations.list"], "roles/firebaseabt.admin": ["firebase.clients.get", "firebase.projects.get", "firebaseabt.experimentresults.get", "firebaseabt.experiments.create", "firebaseabt.experiments.delete", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.experiments.update", "firebaseabt.projectmetadata.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseabt.viewer": ["firebase.clients.get", "firebase.projects.get", "firebaseabt.experimentresults.get", "firebaseabt.experiments.get", "firebaseabt.experiments.list", "firebaseabt.projectmetadata.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseappdistro.admin": ["firebase.clients.get", "firebase.projects.get", "firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseappdistro.viewer": ["firebase.clients.get", "firebase.projects.get", "firebaseappdistro.groups.list", "firebaseappdistro.releases.list", "firebaseappdistro.testers.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseauth.admin": ["firebase.clients.get", "firebase.projects.get", "firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseauth.viewer": ["firebase.clients.get", "firebase.projects.get", "firebaseauth.configs.get", "firebaseauth.users.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasecrash.symbolMappingsAdmin": ["firebase.clients.get", "resourcemanager.projects.get"], "roles/firebasecrashlytics.admin": ["firebase.clients.get", "firebase.projects.get", "firebasecrashlytics.config.get", "firebasecrashlytics.config.update", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.issues.update", "firebasecrashlytics.sessions.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasecrashlytics.viewer": ["firebase.clients.get", "firebase.projects.get", "firebasecrashlytics.config.get", "firebasecrashlytics.data.get", "firebasecrashlytics.issues.get", "firebasecrashlytics.issues.list", "firebasecrashlytics.sessions.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasedatabase.admin": ["firebase.clients.get", "firebase.projects.get", "firebasedatabase.instances.create", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "firebasedatabase.instances.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasedatabase.viewer": ["firebase.clients.get", "firebase.projects.get", "firebasedatabase.instances.get", "firebasedatabase.instances.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasedynamiclinks.admin": ["firebase.clients.get", "firebase.projects.get", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.destinations.update", "firebasedynamiclinks.domains.create", "firebasedynamiclinks.domains.delete", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.domains.update", "firebasedynamiclinks.links.create", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.links.update", "firebasedynamiclinks.stats.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasedynamiclinks.viewer": ["firebase.clients.get", "firebase.projects.get", "firebasedynamiclinks.destinations.list", "firebasedynamiclinks.domains.get", "firebasedynamiclinks.domains.list", "firebasedynamiclinks.links.get", "firebasedynamiclinks.links.list", "firebasedynamiclinks.stats.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasehosting.admin": ["firebase.clients.get", "firebase.projects.get", "firebasehosting.sites.create", "firebasehosting.sites.delete", "firebasehosting.sites.get", "firebasehosting.sites.list", "firebasehosting.sites.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasehosting.viewer": ["firebase.clients.get", "firebase.projects.get", "firebasehosting.sites.get", "firebasehosting.sites.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseinappmessaging.admin": ["firebase.clients.get", "firebase.projects.get", "firebaseinappmessaging.campaigns.create", "firebaseinappmessaging.campaigns.delete", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "firebaseinappmessaging.campaigns.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseinappmessaging.viewer": ["firebase.clients.get", "firebase.projects.get", "firebaseinappmessaging.campaigns.get", "firebaseinappmessaging.campaigns.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseml.admin": ["firebase.clients.get", "firebase.projects.get", "firebaseml.compressionjobs.create", "firebaseml.compressionjobs.delete", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.compressionjobs.start", "firebaseml.compressionjobs.update", "firebaseml.models.create", "firebaseml.models.delete", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.create", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "firebaseml.modelversions.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseml.viewer": ["firebase.clients.get", "firebase.projects.get", "firebaseml.compressionjobs.get", "firebaseml.compressionjobs.list", "firebaseml.models.get", "firebaseml.models.list", "firebaseml.modelversions.get", "firebaseml.modelversions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasenotifications.admin": ["firebase.clients.get", "firebase.projects.get", "firebasenotifications.messages.create", "firebasenotifications.messages.delete", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "firebasenotifications.messages.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasenotifications.viewer": ["firebase.clients.get", "firebase.projects.get", "firebasenotifications.messages.get", "firebasenotifications.messages.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseperformance.admin": ["firebase.clients.get", "firebase.projects.get", "firebaseperformance.config.create", "firebaseperformance.config.delete", "firebaseperformance.config.update", "firebaseperformance.data.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaseperformance.viewer": ["firebase.clients.get", "firebase.projects.get", "firebaseperformance.data.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasepredictions.admin": ["firebase.clients.get", "firebase.projects.get", "firebasepredictions.predictions.create", "firebasepredictions.predictions.delete", "firebasepredictions.predictions.list", "firebasepredictions.predictions.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebasepredictions.viewer": ["firebase.clients.get", "firebase.projects.get", "firebasepredictions.predictions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/storage.admin": ["firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.buckets.create", "storage.buckets.delete", "storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.list", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/storage.hmacKeyAdmin": ["firebase.projects.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.hmacKeys.create", "storage.hmacKeys.delete", "storage.hmacKeys.get", "storage.hmacKeys.list", "storage.hmacKeys.update"], "roles/firebase.appDistributionSdkServiceAgent": ["firebaseappdistro.groups.list", "firebaseappdistro.groups.update", "firebaseappdistro.releases.list", "firebaseappdistro.releases.update", "firebaseappdistro.testers.list", "firebaseappdistro.testers.update"], "roles/identityplatform.admin": ["firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update", "identityplatform.workloadPoolProviders.create", "identityplatform.workloadPoolProviders.delete", "identityplatform.workloadPoolProviders.get", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPoolProviders.undelete", "identityplatform.workloadPoolProviders.update", "identityplatform.workloadPools.create", "identityplatform.workloadPools.delete", "identityplatform.workloadPools.get", "identityplatform.workloadPools.list", "identityplatform.workloadPools.undelete", "identityplatform.workloadPools.update"], "roles/identitytoolkit.admin": ["firebaseauth.configs.create", "firebaseauth.configs.get", "firebaseauth.configs.getHashConfig", "firebaseauth.configs.update", "firebaseauth.users.create", "firebaseauth.users.createSession", "firebaseauth.users.delete", "firebaseauth.users.get", "firebaseauth.users.sendEmail", "firebaseauth.users.update"], "roles/identityplatform.viewer": ["firebaseauth.configs.get", "firebaseauth.users.get", "identityplatform.workloadPoolProviders.get", "identityplatform.workloadPoolProviders.list", "identityplatform.workloadPools.get", "identityplatform.workloadPools.list"], "roles/identitytoolkit.viewer": ["firebaseauth.configs.get", "firebaseauth.users.get"], "roles/firebaserules.admin": ["firebaserules.releases.create", "firebaserules.releases.delete", "firebaserules.releases.get", "firebaserules.releases.getExecutable", "firebaserules.releases.list", "firebaserules.releases.update", "firebaserules.rulesets.create", "firebaserules.rulesets.delete", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "firebaserules.rulesets.test", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/firebaserules.viewer": ["firebaserules.releases.get", "firebaserules.releases.list", "firebaserules.rulesets.get", "firebaserules.rulesets.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/gameservices.admin": ["gameservices.gameServerClusters.create", "gameservices.gameServerClusters.delete", "gameservices.gameServerClusters.get", "gameservices.gameServerClusters.list", "gameservices.gameServerClusters.update", "gameservices.gameServerConfigs.create", "gameservices.gameServerConfigs.delete", "gameservices.gameServerConfigs.get", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.create", "gameservices.gameServerDeployments.delete", "gameservices.gameServerDeployments.get", "gameservices.gameServerDeployments.list", "gameservices.gameServerDeployments.rollout", "gameservices.gameServerDeployments.update", "gameservices.locations.get", "gameservices.locations.list", "gameservices.operations.cancel", "gameservices.operations.delete", "gameservices.operations.get", "gameservices.operations.list", "gameservices.realms.create", "gameservices.realms.delete", "gameservices.realms.get", "gameservices.realms.list", "gameservices.realms.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/gameservices.viewer": ["gameservices.gameServerClusters.get", "gameservices.gameServerClusters.list", "gameservices.gameServerConfigs.get", "gameservices.gameServerConfigs.list", "gameservices.gameServerDeployments.get", "gameservices.gameServerDeployments.list", "gameservices.locations.get", "gameservices.locations.list", "gameservices.operations.get", "gameservices.operations.list", "gameservices.realms.get", "gameservices.realms.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/redisenterprisecloud.admin": ["gcp.redisenterprise.com/databases.create", "gcp.redisenterprise.com/databases.delete", "gcp.redisenterprise.com/databases.get", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/databases.update", "gcp.redisenterprise.com/subscriptions.create", "gcp.redisenterprise.com/subscriptions.delete", "gcp.redisenterprise.com/subscriptions.get", "gcp.redisenterprise.com/subscriptions.list", "gcp.redisenterprise.com/subscriptions.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/redisenterprisecloud.viewer": ["gcp.redisenterprise.com/databases.get", "gcp.redisenterprise.com/databases.list", "gcp.redisenterprise.com/subscriptions.get", "gcp.redisenterprise.com/subscriptions.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/genomics.admin": ["genomics.datasets.create", "genomics.datasets.delete", "genomics.datasets.get", "genomics.datasets.getIamPolicy", "genomics.datasets.list", "genomics.datasets.setIamPolicy", "genomics.datasets.update", "genomics.operations.cancel", "genomics.operations.create", "genomics.operations.get", "genomics.operations.list"], "roles/genomics.editor": ["genomics.datasets.create", "genomics.datasets.delete", "genomics.datasets.get", "genomics.datasets.list", "genomics.datasets.update", "genomics.operations.cancel", "genomics.operations.create", "genomics.operations.get", "genomics.operations.list"], "roles/genomics.viewer": ["genomics.datasets.get", "genomics.datasets.list", "genomics.operations.get", "genomics.operations.list"], "roles/genomics.pipelinesRunner": ["genomics.operations.cancel", "genomics.operations.create", "genomics.operations.get", "genomics.operations.list"], "roles/gkehub.connect": ["gkehub.endpoints.connect"], "roles/gkehub.admin": ["gkehub.features.create", "gkehub.features.delete", "gkehub.features.get", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.features.setIamPolicy", "gkehub.features.update", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.create", "gkehub.memberships.delete", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.memberships.setIamPolicy", "gkehub.memberships.update", "gkehub.operations.cancel", "gkehub.operations.delete", "gkehub.operations.get", "gkehub.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/anthos.serviceAgent": ["gkehub.features.get", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.get", "gkehub.memberships.list", "serviceusage.services.get", "serviceusage.services.list"], "roles/anthosconfigmanagement.serviceAgent": ["gkehub.features.get", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.get", "gkehub.memberships.list"], "roles/gkehub.viewer": ["gkehub.features.get", "gkehub.features.getIamPolicy", "gkehub.features.list", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.generateConnectManifest", "gkehub.memberships.get", "gkehub.memberships.getIamPolicy", "gkehub.memberships.list", "gkehub.operations.get", "gkehub.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/multiclustermetering.serviceAgent": ["gkehub.features.get", "gkehub.locations.get", "gkehub.locations.list", "gkehub.memberships.get", "gkehub.memberships.list"], "roles/gkehub.gatewayAdmin": ["gkehub.gateway.delete", "gkehub.gateway.get", "gkehub.gateway.getIamPolicy", "gkehub.gateway.patch", "gkehub.gateway.post", "gkehub.gateway.put", "gkehub.gateway.setIamPolicy"], "roles/healthcare.annotationStoreAdmin": ["healthcare.annotationStores.create", "healthcare.annotationStores.delete", "healthcare.annotationStores.evaluate", "healthcare.annotationStores.export", "healthcare.annotationStores.get", "healthcare.annotationStores.getIamPolicy", "healthcare.annotationStores.import", "healthcare.annotationStores.list", "healthcare.annotationStores.setIamPolicy", "healthcare.annotationStores.update", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.annotationEditor": ["healthcare.annotationStores.get", "healthcare.annotationStores.list", "healthcare.annotations.create", "healthcare.annotations.delete", "healthcare.annotations.get", "healthcare.annotations.list", "healthcare.annotations.update", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.annotationReader": ["healthcare.annotationStores.get", "healthcare.annotationStores.list", "healthcare.annotations.get", "healthcare.annotations.list", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.annotationStoreViewer": ["healthcare.annotationStores.get", "healthcare.annotationStores.list", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.attributeDefinitionEditor": ["healthcare.attributeDefinitions.create", "healthcare.attributeDefinitions.delete", "healthcare.attributeDefinitions.get", "healthcare.attributeDefinitions.list", "healthcare.attributeDefinitions.update", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.attributeDefinitionReader": ["healthcare.attributeDefinitions.get", "healthcare.attributeDefinitions.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentArtifactAdmin": ["healthcare.consentArtifacts.create", "healthcare.consentArtifacts.delete", "healthcare.consentArtifacts.get", "healthcare.consentArtifacts.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentArtifactEditor": ["healthcare.consentArtifacts.create", "healthcare.consentArtifacts.get", "healthcare.consentArtifacts.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentArtifactReader": ["healthcare.consentArtifacts.get", "healthcare.consentArtifacts.list", "healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentEditor": ["healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.consents.activate", "healthcare.consents.create", "healthcare.consents.delete", "healthcare.consents.get", "healthcare.consents.list", "healthcare.consents.reject", "healthcare.consents.revoke", "healthcare.consents.update", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentReader": ["healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.consents.get", "healthcare.consents.list", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentStoreAdmin": ["healthcare.consentStores.checkDataAccess", "healthcare.consentStores.create", "healthcare.consentStores.delete", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.getIamPolicy", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.consentStores.setIamPolicy", "healthcare.consentStores.update", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.consentStoreViewer": ["healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.userDataMappingEditor": ["healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "healthcare.userDataMappings.archive", "healthcare.userDataMappings.create", "healthcare.userDataMappings.delete", "healthcare.userDataMappings.get", "healthcare.userDataMappings.list", "healthcare.userDataMappings.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.userDataMappingReader": ["healthcare.consentStores.checkDataAccess", "healthcare.consentStores.evaluateUserConsents", "healthcare.consentStores.get", "healthcare.consentStores.list", "healthcare.consentStores.queryAccessibleData", "healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "healthcare.userDataMappings.get", "healthcare.userDataMappings.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.datasetAdmin": ["healthcare.datasets.create", "healthcare.datasets.deidentify", "healthcare.datasets.delete", "healthcare.datasets.get", "healthcare.datasets.getIamPolicy", "healthcare.datasets.list", "healthcare.datasets.setIamPolicy", "healthcare.datasets.update", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "healthcare.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.datasetViewer": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.dicomEditor": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.dicomStores.dicomWebDelete", "healthcare.dicomStores.dicomWebRead", "healthcare.dicomStores.dicomWebWrite", "healthcare.dicomStores.export", "healthcare.dicomStores.get", "healthcare.dicomStores.import", "healthcare.dicomStores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.dicomStoreAdmin": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.dicomStores.create", "healthcare.dicomStores.deidentify", "healthcare.dicomStores.delete", "healthcare.dicomStores.dicomWebDelete", "healthcare.dicomStores.get", "healthcare.dicomStores.getIamPolicy", "healthcare.dicomStores.list", "healthcare.dicomStores.setIamPolicy", "healthcare.dicomStores.update", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.dicomStoreViewer": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.dicomStores.get", "healthcare.dicomStores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.dicomViewer": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.dicomStores.dicomWebRead", "healthcare.dicomStores.export", "healthcare.dicomStores.get", "healthcare.dicomStores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.fhirResourceEditor": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.fhirResources.create", "healthcare.fhirResources.delete", "healthcare.fhirResources.get", "healthcare.fhirResources.patch", "healthcare.fhirResources.translateConceptMap", "healthcare.fhirResources.update", "healthcare.fhirStores.executeBundle", "healthcare.fhirStores.get", "healthcare.fhirStores.list", "healthcare.fhirStores.searchResources", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.fhirResourceReader": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.fhirResources.get", "healthcare.fhirResources.translateConceptMap", "healthcare.fhirStores.executeBundle", "healthcare.fhirStores.get", "healthcare.fhirStores.list", "healthcare.fhirStores.searchResources", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.fhirStoreAdmin": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.fhirResources.purge", "healthcare.fhirStores.create", "healthcare.fhirStores.deidentify", "healthcare.fhirStores.delete", "healthcare.fhirStores.export", "healthcare.fhirStores.get", "healthcare.fhirStores.getIamPolicy", "healthcare.fhirStores.import", "healthcare.fhirStores.list", "healthcare.fhirStores.setIamPolicy", "healthcare.fhirStores.update", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.fhirStoreViewer": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.fhirStores.get", "healthcare.fhirStores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.hl7V2Consumer": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.hl7V2Messages.create", "healthcare.hl7V2Messages.get", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Messages.update", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.hl7V2Editor": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.hl7V2Messages.create", "healthcare.hl7V2Messages.delete", "healthcare.hl7V2Messages.get", "healthcare.hl7V2Messages.ingest", "healthcare.hl7V2Messages.list", "healthcare.hl7V2Messages.update", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.hl7V2Ingest": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.hl7V2Messages.ingest", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.hl7V2StoreAdmin": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.hl7V2Stores.create", "healthcare.hl7V2Stores.delete", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.getIamPolicy", "healthcare.hl7V2Stores.import", "healthcare.hl7V2Stores.list", "healthcare.hl7V2Stores.setIamPolicy", "healthcare.hl7V2Stores.update", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.cancel", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.hl7V2StoreViewer": ["healthcare.datasets.get", "healthcare.datasets.list", "healthcare.hl7V2Stores.get", "healthcare.hl7V2Stores.list", "healthcare.locations.get", "healthcare.locations.list", "healthcare.operations.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/healthcare.nlpServiceViewer": ["healthcare.locations.get", "healthcare.locations.list", "healthcare.nlpservice.analyzeEntities", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.workloadIdentityPoolAdmin": ["iam.googleapis.com/workloadIdentityPoolProviders.create", "iam.googleapis.com/workloadIdentityPoolProviders.delete", "iam.googleapis.com/workloadIdentityPoolProviders.get", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPoolProviders.undelete", "iam.googleapis.com/workloadIdentityPoolProviders.update", "iam.googleapis.com/workloadIdentityPools.create", "iam.googleapis.com/workloadIdentityPools.delete", "iam.googleapis.com/workloadIdentityPools.get", "iam.googleapis.com/workloadIdentityPools.list", "iam.googleapis.com/workloadIdentityPools.undelete", "iam.googleapis.com/workloadIdentityPools.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.workloadIdentityPoolViewer": ["iam.googleapis.com/workloadIdentityPoolProviders.get", "iam.googleapis.com/workloadIdentityPoolProviders.list", "iam.googleapis.com/workloadIdentityPools.get", "iam.googleapis.com/workloadIdentityPools.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.organizationRoleAdmin": ["iam.roles.create", "iam.roles.delete", "iam.roles.get", "iam.roles.list", "iam.roles.undelete", "iam.roles.update", "resourcemanager.organizations.get", "resourcemanager.organizations.getIamPolicy", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/iam.roleAdmin": ["iam.roles.create", "iam.roles.delete", "iam.roles.get", "iam.roles.list", "iam.roles.undelete", "iam.roles.update", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy"], "roles/iam.organizationRoleViewer": ["iam.roles.get", "iam.roles.list", "resourcemanager.organizations.get", "resourcemanager.organizations.getIamPolicy", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/iam.roleViewer": ["iam.roles.get", "iam.roles.list", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy"], "roles/iam.serviceAccountKeyAdmin": ["iam.serviceAccountKeys.create", "iam.serviceAccountKeys.delete", "iam.serviceAccountKeys.get", "iam.serviceAccountKeys.list", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.serviceAccountUser": ["iam.serviceAccounts.actAs", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.serviceAccountAdmin": ["iam.serviceAccounts.create", "iam.serviceAccounts.delete", "iam.serviceAccounts.disable", "iam.serviceAccounts.enable", "iam.serviceAccounts.get", "iam.serviceAccounts.getIamPolicy", "iam.serviceAccounts.list", "iam.serviceAccounts.setIamPolicy", "iam.serviceAccounts.undelete", "iam.serviceAccounts.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.serviceAccountCreator": ["iam.serviceAccounts.create", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.serviceAccountDeleter": ["iam.serviceAccounts.delete", "iam.serviceAccounts.get", "iam.serviceAccounts.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.serviceAccountTokenCreator": ["iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.implicitDelegation", "iam.serviceAccounts.list", "iam.serviceAccounts.signBlob", "iam.serviceAccounts.signJwt", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/iam.workloadIdentityUser": ["iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.list"], "roles/workflows.serviceAgent": ["iam.serviceAccounts.get", "iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken"], "roles/cloudscheduler.serviceAgent": ["iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "logging.logEntries.create", "pubsub.topics.publish"], "roles/cloudtasks.serviceAgent": ["iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "logging.logEntries.create"], "roles/compute.serviceAgent": ["iam.serviceAccounts.getAccessToken", "iam.serviceAccounts.getOpenIdToken", "iam.serviceAccounts.signJwt", "logging.logEntries.create"], "roles/sourcerepo.serviceAgent": ["iam.serviceAccounts.getAccessToken", "pubsub.topics.publish"], "roles/pubsub.serviceAgent": ["iam.serviceAccounts.getOpenIdToken"], "roles/iap.settingsAdmin": ["iap.projects.getSettings", "iap.projects.updateSettings", "iap.web.getSettings", "iap.web.updateSettings", "iap.webServiceVersions.getSettings", "iap.webServiceVersions.updateSettings", "iap.webServices.getSettings", "iap.webServices.updateSettings", "iap.webTypes.getSettings", "iap.webTypes.updateSettings"], "roles/iap.admin": ["iap.tunnel.getIamPolicy", "iap.tunnel.setIamPolicy", "iap.tunnelInstances.getIamPolicy", "iap.tunnelInstances.setIamPolicy", "iap.tunnelZones.getIamPolicy", "iap.tunnelZones.setIamPolicy", "iap.web.getIamPolicy", "iap.web.setIamPolicy", "iap.webServiceVersions.getIamPolicy", "iap.webServiceVersions.setIamPolicy", "iap.webServices.getIamPolicy", "iap.webServices.setIamPolicy", "iap.webTypes.getIamPolicy", "iap.webTypes.setIamPolicy"], "roles/iap.tunnelResourceAccessor": ["iap.tunnelInstances.accessViaIAP"], "roles/iap.httpsResourceAccessor": ["iap.webServiceVersions.accessViaIAP"], "roles/lifesciences.admin": ["lifesciences.operations.cancel", "lifesciences.operations.get", "lifesciences.operations.list", "lifesciences.workflows.run"], "roles/lifesciences.editor": ["lifesciences.operations.cancel", "lifesciences.operations.get", "lifesciences.operations.list", "lifesciences.workflows.run"], "roles/lifesciences.workflowsRunner": ["lifesciences.operations.cancel", "lifesciences.operations.get", "lifesciences.operations.list", "lifesciences.workflows.run"], "roles/lifesciences.viewer": ["lifesciences.operations.get", "lifesciences.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/logging.admin": ["logging.buckets.create", "logging.buckets.delete", "logging.buckets.get", "logging.buckets.list", "logging.buckets.undelete", "logging.buckets.update", "logging.cmekSettings.get", "logging.cmekSettings.update", "logging.exclusions.create", "logging.exclusions.delete", "logging.exclusions.get", "logging.exclusions.list", "logging.exclusions.update", "logging.locations.get", "logging.locations.list", "logging.logEntries.create", "logging.logEntries.download", "logging.logEntries.list", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.delete", "logging.logs.list", "logging.privateLogEntries.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.create", "logging.sinks.delete", "logging.sinks.get", "logging.sinks.list", "logging.sinks.update", "logging.usage.get", "logging.views.access", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/logging.configWriter": ["logging.buckets.create", "logging.buckets.delete", "logging.buckets.get", "logging.buckets.list", "logging.buckets.undelete", "logging.buckets.update", "logging.cmekSettings.get", "logging.cmekSettings.update", "logging.exclusions.create", "logging.exclusions.delete", "logging.exclusions.get", "logging.exclusions.list", "logging.exclusions.update", "logging.locations.get", "logging.locations.list", "logging.logMetrics.create", "logging.logMetrics.delete", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logMetrics.update", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.sinks.create", "logging.sinks.delete", "logging.sinks.get", "logging.sinks.list", "logging.sinks.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/logging.privateLogViewer": ["logging.buckets.get", "logging.buckets.list", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.privateLogEntries.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "resourcemanager.projects.get"], "roles/logging.viewer": ["logging.buckets.get", "logging.buckets.list", "logging.exclusions.get", "logging.exclusions.list", "logging.locations.get", "logging.locations.list", "logging.logEntries.list", "logging.logMetrics.get", "logging.logMetrics.list", "logging.logServiceIndexes.list", "logging.logServices.list", "logging.logs.list", "logging.queries.create", "logging.queries.delete", "logging.queries.get", "logging.queries.list", "logging.queries.update", "logging.sinks.get", "logging.sinks.list", "logging.usage.get", "resourcemanager.projects.get"], "roles/logging.bucketWriter": ["logging.buckets.write"], "roles/cloudiot.serviceAgent": ["logging.logEntries.create", "pubsub.topics.publish"], "roles/logging.logWriter": ["logging.logEntries.create"], "roles/logging.viewAccessor": ["logging.logEntries.download", "logging.views.access"], "roles/managedidentities.admin": ["managedidentities.domains.attachTrust", "managedidentities.domains.create", "managedidentities.domains.delete", "managedidentities.domains.detachTrust", "managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.domains.reconfigureTrust", "managedidentities.domains.resetpassword", "managedidentities.domains.setIamPolicy", "managedidentities.domains.update", "managedidentities.domains.validateTrust", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.cancel", "managedidentities.operations.delete", "managedidentities.operations.get", "managedidentities.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/managedidentities.domainAdmin": ["managedidentities.domains.attachTrust", "managedidentities.domains.delete", "managedidentities.domains.detachTrust", "managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.reconfigureTrust", "managedidentities.domains.resetpassword", "managedidentities.domains.update", "managedidentities.domains.validateTrust", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.get", "managedidentities.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/managedidentities.viewer": ["managedidentities.domains.get", "managedidentities.domains.getIamPolicy", "managedidentities.domains.list", "managedidentities.locations.get", "managedidentities.locations.list", "managedidentities.operations.get", "managedidentities.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/memcache.editor": ["memcache.instances.applyParameters", "memcache.instances.get", "memcache.instances.list", "memcache.instances.update", "memcache.instances.updateParameters", "memcache.locations.get", "memcache.locations.list", "memcache.operations.cancel", "memcache.operations.delete", "memcache.operations.get", "memcache.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/memcache.viewer": ["memcache.instances.get", "memcache.instances.list", "memcache.locations.get", "memcache.locations.list", "memcache.operations.get", "memcache.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/ml.admin": ["ml.jobs.cancel", "ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.jobs.setIamPolicy", "ml.jobs.update", "ml.locations.get", "ml.locations.list", "ml.models.create", "ml.models.delete", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.models.setIamPolicy", "ml.models.update", "ml.operations.cancel", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.create", "ml.studies.delete", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.studies.setIamPolicy", "ml.trials.create", "ml.trials.delete", "ml.trials.get", "ml.trials.list", "ml.trials.update", "ml.versions.create", "ml.versions.delete", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "ml.versions.update", "resourcemanager.projects.get"], "roles/ml.jobOwner": ["ml.jobs.cancel", "ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.jobs.setIamPolicy", "ml.jobs.update"], "roles/ml.developer": ["ml.jobs.create", "ml.jobs.get", "ml.jobs.getIamPolicy", "ml.jobs.list", "ml.locations.get", "ml.locations.list", "ml.models.create", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.create", "ml.studies.delete", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.studies.setIamPolicy", "ml.trials.create", "ml.trials.delete", "ml.trials.get", "ml.trials.list", "ml.trials.update", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "resourcemanager.projects.get"], "roles/ml.viewer": ["ml.jobs.get", "ml.jobs.list", "ml.locations.get", "ml.locations.list", "ml.models.get", "ml.models.list", "ml.operations.get", "ml.operations.list", "ml.projects.getConfig", "ml.studies.get", "ml.studies.getIamPolicy", "ml.studies.list", "ml.trials.get", "ml.trials.list", "ml.versions.get", "ml.versions.list", "resourcemanager.projects.get"], "roles/ml.modelOwner": ["ml.models.create", "ml.models.delete", "ml.models.get", "ml.models.getIamPolicy", "ml.models.list", "ml.models.predict", "ml.models.setIamPolicy", "ml.models.update", "ml.versions.create", "ml.versions.delete", "ml.versions.get", "ml.versions.list", "ml.versions.predict", "ml.versions.update"], "roles/ml.modelUser": ["ml.models.get", "ml.models.predict", "ml.versions.get", "ml.versions.list", "ml.versions.predict"], "roles/ml.operationOwner": ["ml.operations.cancel", "ml.operations.get", "ml.operations.list"], "roles/monitoring.alertPolicyEditor": ["monitoring.alertPolicies.create", "monitoring.alertPolicies.delete", "monitoring.alertPolicies.get", "monitoring.alertPolicies.list", "monitoring.alertPolicies.update"], "roles/monitoring.alertPolicyViewer": ["monitoring.alertPolicies.get", "monitoring.alertPolicies.list"], "roles/monitoring.dashboardEditor": ["monitoring.dashboards.create", "monitoring.dashboards.delete", "monitoring.dashboards.get", "monitoring.dashboards.list", "monitoring.dashboards.update"], "roles/monitoring.dashboardViewer": ["monitoring.dashboards.get", "monitoring.dashboards.list"], "roles/monitoring.metricWriter": ["monitoring.metricDescriptors.create", "monitoring.metricDescriptors.get", "monitoring.metricDescriptors.list", "monitoring.monitoredResourceDescriptors.get", "monitoring.monitoredResourceDescriptors.list", "monitoring.timeSeries.create"], "roles/monitoring.notificationChannelEditor": ["monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.create", "monitoring.notificationChannels.delete", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list", "monitoring.notificationChannels.sendVerificationCode", "monitoring.notificationChannels.update", "monitoring.notificationChannels.verify"], "roles/monitoring.notificationChannelViewer": ["monitoring.notificationChannelDescriptors.get", "monitoring.notificationChannelDescriptors.list", "monitoring.notificationChannels.get", "monitoring.notificationChannels.list"], "roles/monitoring.servicesEditor": ["monitoring.services.create", "monitoring.services.delete", "monitoring.services.get", "monitoring.services.list", "monitoring.services.update", "monitoring.slos.create", "monitoring.slos.delete", "monitoring.slos.get", "monitoring.slos.list", "monitoring.slos.update"], "roles/monitoring.servicesViewer": ["monitoring.services.get", "monitoring.services.list", "monitoring.slos.get", "monitoring.slos.list"], "roles/servicemanagement.admin": ["monitoring.timeSeries.list", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceconsumermanagement.consumers.get", "serviceconsumermanagement.quota.get", "serviceconsumermanagement.quota.update", "serviceconsumermanagement.tenancyu.addResource", "serviceconsumermanagement.tenancyu.create", "serviceconsumermanagement.tenancyu.delete", "serviceconsumermanagement.tenancyu.list", "serviceconsumermanagement.tenancyu.removeResource", "servicemanagement.services.bind", "servicemanagement.services.check", "servicemanagement.services.create", "servicemanagement.services.delete", "servicemanagement.services.get", "servicemanagement.services.getIamPolicy", "servicemanagement.services.list", "servicemanagement.services.quota", "servicemanagement.services.report", "servicemanagement.services.setIamPolicy", "servicemanagement.services.update", "serviceusage.quotas.get", "serviceusage.services.get"], "roles/servicemanagement.quotaAdmin": ["monitoring.timeSeries.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.list", "servicemanagement.consumerSettings.get", "servicemanagement.consumerSettings.getIamPolicy", "servicemanagement.consumerSettings.list", "servicemanagement.consumerSettings.setIamPolicy", "servicemanagement.consumerSettings.update", "serviceusage.quotas.get", "serviceusage.quotas.update", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list"], "roles/servicemanagement.quotaViewer": ["monitoring.timeSeries.list", "servicemanagement.consumerSettings.get", "servicemanagement.consumerSettings.getIamPolicy", "servicemanagement.consumerSettings.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/serviceusage.serviceUsageAdmin": ["monitoring.timeSeries.list", "serviceusage.operations.cancel", "serviceusage.operations.delete", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.quotas.update", "serviceusage.services.disable", "serviceusage.services.enable", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use"], "roles/serviceusage.serviceUsageConsumer": ["monitoring.timeSeries.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list", "serviceusage.services.use"], "roles/serviceusage.serviceUsageViewer": ["monitoring.timeSeries.list", "serviceusage.operations.get", "serviceusage.operations.list", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/spanner.admin": ["monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "spanner.backupOperations.cancel", "spanner.backupOperations.get", "spanner.backupOperations.list", "spanner.backups.create", "spanner.backups.delete", "spanner.backups.get", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.backups.restoreDatabase", "spanner.backups.setIamPolicy", "spanner.backups.update", "spanner.databaseOperations.cancel", "spanner.databaseOperations.delete", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginPartitionedDmlTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.create", "spanner.databases.createBackup", "spanner.databases.drop", "spanner.databases.get", "spanner.databases.getDdl", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.databases.setIamPolicy", "spanner.databases.update", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instanceOperations.cancel", "spanner.instanceOperations.delete", "spanner.instanceOperations.get", "spanner.instanceOperations.list", "spanner.instances.create", "spanner.instances.delete", "spanner.instances.get", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.instances.setIamPolicy", "spanner.instances.update", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list"], "roles/spanner.backupAdmin": ["monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "spanner.backupOperations.cancel", "spanner.backupOperations.get", "spanner.backupOperations.list", "spanner.backups.create", "spanner.backups.delete", "spanner.backups.get", "spanner.backups.getIamPolicy", "spanner.backups.list", "spanner.backups.setIamPolicy", "spanner.backups.update", "spanner.databases.createBackup", "spanner.databases.get", "spanner.databases.list", "spanner.instances.get", "spanner.instances.list"], "roles/spanner.databaseAdmin": ["monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "spanner.databaseOperations.cancel", "spanner.databaseOperations.delete", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginPartitionedDmlTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.create", "spanner.databases.drop", "spanner.databases.get", "spanner.databases.getDdl", "spanner.databases.getIamPolicy", "spanner.databases.list", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.databases.setIamPolicy", "spanner.databases.update", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instances.get", "spanner.instances.getIamPolicy", "spanner.instances.list", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list"], "roles/spanner.restoreAdmin": ["monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "spanner.backups.get", "spanner.backups.list", "spanner.backups.restoreDatabase", "spanner.databaseOperations.cancel", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.create", "spanner.databases.get", "spanner.databases.list", "spanner.instances.get", "spanner.instances.list"], "roles/spanner.viewer": ["monitoring.timeSeries.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "spanner.databases.list", "spanner.instanceConfigs.get", "spanner.instanceConfigs.list", "spanner.instances.get", "spanner.instances.list"], "roles/monitoring.uptimeCheckConfigEditor": ["monitoring.uptimeCheckConfigs.create", "monitoring.uptimeCheckConfigs.delete", "monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list", "monitoring.uptimeCheckConfigs.update"], "roles/monitoring.uptimeCheckConfigViewer": ["monitoring.uptimeCheckConfigs.get", "monitoring.uptimeCheckConfigs.list"], "roles/networkmanagement.admin": ["networkmanagement.connectivitytests.create", "networkmanagement.connectivitytests.delete", "networkmanagement.connectivitytests.get", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.connectivitytests.rerun", "networkmanagement.connectivitytests.setIamPolicy", "networkmanagement.connectivitytests.update", "networkmanagement.locations.get", "networkmanagement.locations.list", "networkmanagement.operations.get", "networkmanagement.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/networkmanagement.viewer": ["networkmanagement.connectivitytests.get", "networkmanagement.connectivitytests.getIamPolicy", "networkmanagement.connectivitytests.list", "networkmanagement.locations.get", "networkmanagement.locations.list", "networkmanagement.operations.get", "networkmanagement.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/opsconfigmonitoring.resourceMetadata.writer": ["opsconfigmonitoring.resourceMetadata.write"], "roles/orgpolicy.policyAdmin": ["orgpolicy.policy.get", "orgpolicy.policy.set"], "roles/orgpolicy.policyViewer": ["orgpolicy.policy.get"], "roles/resourcemanager.folderAdmin": ["orgpolicy.policy.get", "resourcemanager.folders.create", "resourcemanager.folders.delete", "resourcemanager.folders.get", "resourcemanager.folders.getIamPolicy", "resourcemanager.folders.list", "resourcemanager.folders.move", "resourcemanager.folders.setIamPolicy", "resourcemanager.folders.undelete", "resourcemanager.folders.update", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "resourcemanager.projects.move", "resourcemanager.projects.setIamPolicy"], "roles/resourcemanager.folderCreator": ["orgpolicy.policy.get", "resourcemanager.folders.create", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/resourcemanager.folderEditor": ["orgpolicy.policy.get", "resourcemanager.folders.delete", "resourcemanager.folders.get", "resourcemanager.folders.getIamPolicy", "resourcemanager.folders.list", "resourcemanager.folders.undelete", "resourcemanager.folders.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/resourcemanager.folderViewer": ["orgpolicy.policy.get", "resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/resourcemanager.organizationAdmin": ["orgpolicy.policy.get", "resourcemanager.folders.get", "resourcemanager.folders.getIamPolicy", "resourcemanager.folders.list", "resourcemanager.folders.setIamPolicy", "resourcemanager.organizations.get", "resourcemanager.organizations.getIamPolicy", "resourcemanager.organizations.setIamPolicy", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list", "resourcemanager.projects.setIamPolicy"], "roles/osconfig.guestPolicyAdmin": ["osconfig.guestPolicies.create", "osconfig.guestPolicies.delete", "osconfig.guestPolicies.get", "osconfig.guestPolicies.list", "osconfig.guestPolicies.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/osconfig.guestPolicyEditor": ["osconfig.guestPolicies.get", "osconfig.guestPolicies.list", "osconfig.guestPolicies.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/osconfig.guestPolicyViewer": ["osconfig.guestPolicies.get", "osconfig.guestPolicies.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/osconfig.patchDeploymentAdmin": ["osconfig.patchDeployments.create", "osconfig.patchDeployments.delete", "osconfig.patchDeployments.execute", "osconfig.patchDeployments.get", "osconfig.patchDeployments.list", "osconfig.patchDeployments.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/osconfig.patchDeploymentViewer": ["osconfig.patchDeployments.get", "osconfig.patchDeployments.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/osconfig.patchJobExecutor": ["osconfig.patchJobs.exec", "osconfig.patchJobs.get", "osconfig.patchJobs.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/osconfig.patchJobViewer": ["osconfig.patchJobs.get", "osconfig.patchJobs.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/privateca.admin": ["privateca.certificateAuthorities.create", "privateca.certificateAuthorities.delete", "privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateAuthorities.setIamPolicy", "privateca.certificateAuthorities.update", "privateca.certificateRevocationLists.create", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificateRevocationLists.setIamPolicy", "privateca.certificateRevocationLists.update", "privateca.certificates.create", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.certificates.setIamPolicy", "privateca.certificates.update", "privateca.locations.get", "privateca.locations.list", "privateca.operations.cancel", "privateca.operations.delete", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.create", "privateca.reusableConfigs.delete", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "privateca.reusableConfigs.setIamPolicy", "privateca.reusableConfigs.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.buckets.create"], "roles/privateca.caManager": ["privateca.certificateAuthorities.create", "privateca.certificateAuthorities.delete", "privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateAuthorities.update", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificateRevocationLists.update", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.certificates.update", "privateca.locations.get", "privateca.locations.list", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.create", "privateca.reusableConfigs.delete", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "privateca.reusableConfigs.update", "resourcemanager.projects.get", "resourcemanager.projects.list", "storage.buckets.create"], "roles/privateca.auditor": ["privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.locations.get", "privateca.locations.list", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/privateca.certificateManager": ["privateca.certificateAuthorities.get", "privateca.certificateAuthorities.getIamPolicy", "privateca.certificateAuthorities.list", "privateca.certificateRevocationLists.get", "privateca.certificateRevocationLists.getIamPolicy", "privateca.certificateRevocationLists.list", "privateca.certificates.create", "privateca.certificates.get", "privateca.certificates.getIamPolicy", "privateca.certificates.list", "privateca.locations.get", "privateca.locations.list", "privateca.operations.get", "privateca.operations.list", "privateca.reusableConfigs.get", "privateca.reusableConfigs.getIamPolicy", "privateca.reusableConfigs.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/privateca.certificateRequester": ["privateca.certificates.create"], "roles/proximitybeacon.attachmentEditor": ["proximitybeacon.attachments.create", "proximitybeacon.attachments.delete", "proximitybeacon.attachments.get", "proximitybeacon.attachments.list", "proximitybeacon.beacons.get", "proximitybeacon.beacons.list", "proximitybeacon.namespaces.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/proximitybeacon.attachmentViewer": ["proximitybeacon.attachments.get", "proximitybeacon.attachments.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/proximitybeacon.attachmentPublisher": ["proximitybeacon.beacons.attach", "proximitybeacon.beacons.get", "proximitybeacon.beacons.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/proximitybeacon.beaconEditor": ["proximitybeacon.beacons.create", "proximitybeacon.beacons.get", "proximitybeacon.beacons.list", "proximitybeacon.beacons.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/pubsub.admin": ["pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.getIamPolicy", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.setIamPolicy", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.getIamPolicy", "pubsub.subscriptions.list", "pubsub.subscriptions.setIamPolicy", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.getIamPolicy", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.setIamPolicy", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/pubsub.editor": ["pubsub.snapshots.create", "pubsub.snapshots.delete", "pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.snapshots.seek", "pubsub.snapshots.update", "pubsub.subscriptions.consume", "pubsub.subscriptions.create", "pubsub.subscriptions.delete", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.subscriptions.update", "pubsub.topics.attachSubscription", "pubsub.topics.create", "pubsub.topics.delete", "pubsub.topics.detachSubscription", "pubsub.topics.get", "pubsub.topics.list", "pubsub.topics.publish", "pubsub.topics.update", "pubsub.topics.updateTag", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/pubsub.viewer": ["pubsub.snapshots.get", "pubsub.snapshots.list", "pubsub.subscriptions.get", "pubsub.subscriptions.list", "pubsub.topics.get", "pubsub.topics.list", "resourcemanager.projects.get", "serviceusage.quotas.get", "serviceusage.services.get", "serviceusage.services.list"], "roles/pubsub.subscriber": ["pubsub.snapshots.seek", "pubsub.subscriptions.consume", "pubsub.topics.attachSubscription"], "roles/artifactregistry.serviceAgent": ["pubsub.topics.publish"], "roles/containerregistry.ServiceAgent": ["pubsub.topics.publish", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list"], "roles/pubsub.publisher": ["pubsub.topics.publish"], "roles/securitycenter.notificationServiceAgent": ["pubsub.topics.publish"], "roles/pubsublite.admin": ["pubsublite.subscriptions.create", "pubsublite.subscriptions.delete", "pubsublite.subscriptions.get", "pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.list", "pubsublite.subscriptions.setCursor", "pubsublite.subscriptions.subscribe", "pubsublite.subscriptions.update", "pubsublite.topics.computeMessageStats", "pubsublite.topics.create", "pubsublite.topics.delete", "pubsublite.topics.get", "pubsublite.topics.getPartitions", "pubsublite.topics.list", "pubsublite.topics.listSubscriptions", "pubsublite.topics.publish", "pubsublite.topics.subscribe", "pubsublite.topics.update"], "roles/pubsublite.editor": ["pubsublite.subscriptions.create", "pubsublite.subscriptions.delete", "pubsublite.subscriptions.get", "pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.list", "pubsublite.subscriptions.setCursor", "pubsublite.subscriptions.subscribe", "pubsublite.subscriptions.update", "pubsublite.topics.computeMessageStats", "pubsublite.topics.create", "pubsublite.topics.delete", "pubsublite.topics.get", "pubsublite.topics.getPartitions", "pubsublite.topics.list", "pubsublite.topics.listSubscriptions", "pubsublite.topics.publish", "pubsublite.topics.subscribe", "pubsublite.topics.update"], "roles/pubsublite.viewer": ["pubsublite.subscriptions.get", "pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.list", "pubsublite.topics.get", "pubsublite.topics.getPartitions", "pubsublite.topics.list", "pubsublite.topics.listSubscriptions"], "roles/pubsublite.subscriber": ["pubsublite.subscriptions.getCursor", "pubsublite.subscriptions.setCursor", "pubsublite.subscriptions.subscribe", "pubsublite.topics.computeMessageStats", "pubsublite.topics.getPartitions", "pubsublite.topics.subscribe"], "roles/pubsublite.publisher": ["pubsublite.topics.getPartitions", "pubsublite.topics.publish"], "roles/recaptchaenterprise.agent": ["recaptchaenterprise.assessments.annotate", "recaptchaenterprise.assessments.create", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recaptchaenterprise.admin": ["recaptchaenterprise.keys.create", "recaptchaenterprise.keys.delete", "recaptchaenterprise.keys.get", "recaptchaenterprise.keys.list", "recaptchaenterprise.keys.update", "recaptchaenterprise.metrics.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recaptchaenterprise.viewer": ["recaptchaenterprise.keys.get", "recaptchaenterprise.keys.list", "recaptchaenterprise.metrics.get", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.projectCudAdmin": ["recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.commitmentUtilizationInsights.update", "recommender.locations.get", "recommender.locations.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "recommender.usageCommitmentRecommendations.update", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.projectCudViewer": ["recommender.commitmentUtilizationInsights.get", "recommender.commitmentUtilizationInsights.list", "recommender.locations.get", "recommender.locations.list", "recommender.usageCommitmentRecommendations.get", "recommender.usageCommitmentRecommendations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.computeAdmin": ["recommender.computeDiskIdleResourceInsights.get", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceInsights.update", "recommender.computeDiskIdleResourceRecommendations.get", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeDiskIdleResourceRecommendations.update", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update", "recommender.computeInstanceIdleResourceRecommendations.get", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.update", "recommender.computeInstanceMachineTypeRecommendations.get", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.update", "recommender.locations.get", "recommender.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.computeViewer": ["recommender.computeDiskIdleResourceInsights.get", "recommender.computeDiskIdleResourceInsights.list", "recommender.computeDiskIdleResourceRecommendations.get", "recommender.computeDiskIdleResourceRecommendations.list", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get", "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list", "recommender.computeInstanceIdleResourceRecommendations.get", "recommender.computeInstanceIdleResourceRecommendations.list", "recommender.computeInstanceMachineTypeRecommendations.get", "recommender.computeInstanceMachineTypeRecommendations.list", "recommender.locations.get", "recommender.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.firewallAdmin": ["recommender.computeFirewallInsights.get", "recommender.computeFirewallInsights.list", "recommender.computeFirewallInsights.update", "recommender.locations.get", "recommender.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.firewallViewer": ["recommender.computeFirewallInsights.get", "recommender.computeFirewallInsights.list", "recommender.locations.get", "recommender.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.iamAdmin": ["recommender.iamPolicyInsights.get", "recommender.iamPolicyInsights.list", "recommender.iamPolicyInsights.update", "recommender.iamPolicyRecommendations.get", "recommender.iamPolicyRecommendations.list", "recommender.iamPolicyRecommendations.update", "recommender.iamServiceAccountInsights.get", "recommender.iamServiceAccountInsights.list", "recommender.iamServiceAccountInsights.update", "recommender.locations.get", "recommender.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/recommender.iamViewer": ["recommender.iamPolicyInsights.get", "recommender.iamPolicyInsights.list", "recommender.iamPolicyRecommendations.get", "recommender.iamPolicyRecommendations.list", "recommender.iamServiceAccountInsights.get", "recommender.iamServiceAccountInsights.list", "recommender.locations.get", "recommender.locations.list", "resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/redis.viewer": ["redis.instances.get", "redis.instances.list", "redis.locations.get", "redis.locations.list", "redis.operations.get", "redis.operations.list", "resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.use"], "roles/remotebuildexecution.artifactAdmin": ["remotebuildexecution.actions.create", "remotebuildexecution.actions.delete", "remotebuildexecution.actions.get", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.get", "remotebuildexecution.logstreams.update"], "roles/remotebuildexecution.artifactCreator": ["remotebuildexecution.actions.create", "remotebuildexecution.actions.get", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.get", "remotebuildexecution.logstreams.update"], "roles/remotebuildexecution.reservationAdmin": ["remotebuildexecution.actions.create", "remotebuildexecution.actions.delete", "remotebuildexecution.actions.get"], "roles/remotebuildexecution.artifactViewer": ["remotebuildexecution.actions.get", "remotebuildexecution.blobs.get", "remotebuildexecution.logstreams.get"], "roles/remotebuildexecution.actionCacheWriter": ["remotebuildexecution.actions.set", "remotebuildexecution.blobs.create"], "roles/remotebuildexecution.serviceAgent": ["remotebuildexecution.actions.update", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.botsessions.create", "remotebuildexecution.botsessions.update", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.update"], "roles/remotebuildexecution.worker": ["remotebuildexecution.actions.update", "remotebuildexecution.blobs.create", "remotebuildexecution.blobs.get", "remotebuildexecution.botsessions.create", "remotebuildexecution.botsessions.update", "remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.update"], "roles/remotebuildexecution.configurationAdmin": ["remotebuildexecution.instances.create", "remotebuildexecution.instances.delete", "remotebuildexecution.instances.get", "remotebuildexecution.instances.list", "remotebuildexecution.workerpools.create", "remotebuildexecution.workerpools.delete", "remotebuildexecution.workerpools.get", "remotebuildexecution.workerpools.list", "remotebuildexecution.workerpools.update"], "roles/remotebuildexecution.configurationViewer": ["remotebuildexecution.instances.get", "remotebuildexecution.instances.list", "remotebuildexecution.workerpools.get", "remotebuildexecution.workerpools.list"], "roles/remotebuildexecution.logstreamWriter": ["remotebuildexecution.logstreams.create", "remotebuildexecution.logstreams.update"], "roles/browser": ["resourcemanager.folders.get", "resourcemanager.folders.list", "resourcemanager.organizations.get", "resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.list"], "roles/resourcemanager.folderIamAdmin": ["resourcemanager.folders.get", "resourcemanager.folders.getIamPolicy", "resourcemanager.folders.setIamPolicy"], "roles/resourcemanager.folderMover": ["resourcemanager.folders.move", "resourcemanager.projects.move"], "roles/resourcemanager.organizationViewer": ["resourcemanager.organizations.get"], "roles/resourcemanager.projectCreator": ["resourcemanager.organizations.get", "resourcemanager.projects.create"], "roles/securitycenter.assetsViewer": ["resourcemanager.organizations.get", "securitycenter.assets.group", "securitycenter.assets.list", "securitycenter.assets.listAssetPropertyNames"], "roles/securitycenter.findingsEditor": ["resourcemanager.organizations.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.findings.setState", "securitycenter.findings.update", "securitycenter.sources.get", "securitycenter.sources.list"], "roles/securitycenter.findingsViewer": ["resourcemanager.organizations.get", "securitycenter.findings.group", "securitycenter.findings.list", "securitycenter.findings.listFindingPropertyNames", "securitycenter.sources.get", "securitycenter.sources.list"], "roles/securitycenter.sourcesAdmin": ["resourcemanager.organizations.get", "securitycenter.sources.get", "securitycenter.sources.getIamPolicy", "securitycenter.sources.list", "securitycenter.sources.setIamPolicy", "securitycenter.sources.update"], "roles/securitycenter.sourcesEditor": ["resourcemanager.organizations.get", "securitycenter.sources.get", "securitycenter.sources.list", "securitycenter.sources.update"], "roles/securitycenter.sourcesViewer": ["resourcemanager.organizations.get", "securitycenter.sources.get", "securitycenter.sources.list"], "roles/billing.projectManager": ["resourcemanager.projects.createBillingAssignment", "resourcemanager.projects.deleteBillingAssignment"], "roles/resourcemanager.projectDeleter": ["resourcemanager.projects.delete"], "roles/codelabapikeys.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/codelabapikeys.editor": ["resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/codelabapikeys.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list"], "roles/resourcemanager.projectIamAdmin": ["resourcemanager.projects.get", "resourcemanager.projects.getIamPolicy", "resourcemanager.projects.setIamPolicy"], "roles/resourcemanager.projectMover": ["resourcemanager.projects.get", "resourcemanager.projects.move", "resourcemanager.projects.update"], "roles/run.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "run.configurations.get", "run.configurations.list", "run.locations.list", "run.revisions.delete", "run.revisions.get", "run.revisions.list", "run.routes.get", "run.routes.invoke", "run.routes.list", "run.services.create", "run.services.delete", "run.services.get", "run.services.getIamPolicy", "run.services.list", "run.services.setIamPolicy", "run.services.update"], "roles/run.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "run.configurations.get", "run.configurations.list", "run.locations.list", "run.revisions.get", "run.revisions.list", "run.routes.get", "run.routes.list", "run.services.get", "run.services.getIamPolicy", "run.services.list"], "roles/secretmanager.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "secretmanager.locations.get", "secretmanager.locations.list", "secretmanager.secrets.create", "secretmanager.secrets.delete", "secretmanager.secrets.get", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.secrets.setIamPolicy", "secretmanager.secrets.update", "secretmanager.versions.access", "secretmanager.versions.add", "secretmanager.versions.destroy", "secretmanager.versions.disable", "secretmanager.versions.enable", "secretmanager.versions.get", "secretmanager.versions.list"], "roles/secretmanager.secretAccessor": ["resourcemanager.projects.get", "resourcemanager.projects.list", "secretmanager.versions.access"], "roles/secretmanager.secretVersionAdder": ["resourcemanager.projects.get", "resourcemanager.projects.list", "secretmanager.versions.add"], "roles/secretmanager.secretVersionManager": ["resourcemanager.projects.get", "resourcemanager.projects.list", "secretmanager.versions.add", "secretmanager.versions.destroy", "secretmanager.versions.disable", "secretmanager.versions.enable", "secretmanager.versions.get", "secretmanager.versions.list"], "roles/secretmanager.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "secretmanager.locations.get", "secretmanager.locations.list", "secretmanager.secrets.get", "secretmanager.secrets.getIamPolicy", "secretmanager.secrets.list", "secretmanager.versions.get", "secretmanager.versions.list"], "roles/servicedirectory.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "servicedirectory.endpoints.create", "servicedirectory.endpoints.delete", "servicedirectory.endpoints.get", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.endpoints.setIamPolicy", "servicedirectory.endpoints.update", "servicedirectory.locations.get", "servicedirectory.locations.list", "servicedirectory.namespaces.associatePrivateZone", "servicedirectory.namespaces.create", "servicedirectory.namespaces.delete", "servicedirectory.namespaces.get", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.namespaces.setIamPolicy", "servicedirectory.namespaces.update", "servicedirectory.services.create", "servicedirectory.services.delete", "servicedirectory.services.get", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.resolve", "servicedirectory.services.setIamPolicy", "servicedirectory.services.update"], "roles/servicedirectory.editor": ["resourcemanager.projects.get", "resourcemanager.projects.list", "servicedirectory.endpoints.create", "servicedirectory.endpoints.delete", "servicedirectory.endpoints.get", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.endpoints.update", "servicedirectory.locations.get", "servicedirectory.locations.list", "servicedirectory.namespaces.associatePrivateZone", "servicedirectory.namespaces.create", "servicedirectory.namespaces.delete", "servicedirectory.namespaces.get", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.namespaces.update", "servicedirectory.services.create", "servicedirectory.services.delete", "servicedirectory.services.get", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.resolve", "servicedirectory.services.update"], "roles/servicedirectory.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "servicedirectory.endpoints.get", "servicedirectory.endpoints.getIamPolicy", "servicedirectory.endpoints.list", "servicedirectory.locations.get", "servicedirectory.locations.list", "servicedirectory.namespaces.get", "servicedirectory.namespaces.getIamPolicy", "servicedirectory.namespaces.list", "servicedirectory.services.get", "servicedirectory.services.getIamPolicy", "servicedirectory.services.list", "servicedirectory.services.resolve"], "roles/stackdriver.accounts.editor": ["resourcemanager.projects.get", "resourcemanager.projects.list", "serviceusage.services.enable", "stackdriver.projects.edit", "stackdriver.projects.get"], "roles/stackdriver.accounts.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "stackdriver.projects.get"], "roles/storage.objectAdmin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/storage.objectCreator": ["resourcemanager.projects.get", "resourcemanager.projects.list", "storage.objects.create"], "roles/storage.objectViewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "storage.objects.get", "storage.objects.list"], "roles/storagetransfer.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "storagetransfer.jobs.create", "storagetransfer.jobs.delete", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.jobs.update", "storagetransfer.operations.cancel", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.operations.pause", "storagetransfer.operations.resume", "storagetransfer.projects.getServiceAccount"], "roles/storagetransfer.user": ["resourcemanager.projects.get", "resourcemanager.projects.list", "storagetransfer.jobs.create", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.jobs.update", "storagetransfer.operations.cancel", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.operations.pause", "storagetransfer.operations.resume", "storagetransfer.projects.getServiceAccount"], "roles/storagetransfer.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "storagetransfer.jobs.get", "storagetransfer.jobs.list", "storagetransfer.operations.get", "storagetransfer.operations.list", "storagetransfer.projects.getServiceAccount"], "roles/subscribewithgoogledeveloper.developer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "subscribewithgoogledeveloper.tools.get"], "roles/tpu.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "tpu.acceleratortypes.get", "tpu.acceleratortypes.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.create", "tpu.nodes.delete", "tpu.nodes.get", "tpu.nodes.list", "tpu.nodes.reimage", "tpu.nodes.reset", "tpu.nodes.start", "tpu.nodes.stop", "tpu.operations.get", "tpu.operations.list", "tpu.tensorflowversions.get", "tpu.tensorflowversions.list"], "roles/tpu.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "tpu.acceleratortypes.get", "tpu.acceleratortypes.list", "tpu.locations.get", "tpu.locations.list", "tpu.nodes.get", "tpu.nodes.list", "tpu.operations.get", "tpu.operations.list", "tpu.tensorflowversions.get", "tpu.tensorflowversions.list"], "roles/transcoder.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "transcoder.jobTemplates.create", "transcoder.jobTemplates.delete", "transcoder.jobTemplates.get", "transcoder.jobTemplates.list", "transcoder.jobs.create", "transcoder.jobs.delete", "transcoder.jobs.get", "transcoder.jobs.list"], "roles/transcoder.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "transcoder.jobTemplates.get", "transcoder.jobTemplates.list", "transcoder.jobs.get", "transcoder.jobs.list"], "roles/vpcaccess.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "vpcaccess.connectors.create", "vpcaccess.connectors.delete", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.connectors.use", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list"], "roles/vpcaccess.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "vpcaccess.connectors.get", "vpcaccess.connectors.list", "vpcaccess.locations.list", "vpcaccess.operations.get", "vpcaccess.operations.list"], "roles/workflows.admin": ["resourcemanager.projects.get", "resourcemanager.projects.list", "workflows.executions.cancel", "workflows.executions.create", "workflows.executions.get", "workflows.executions.list", "workflows.locations.get", "workflows.locations.list", "workflows.operations.cancel", "workflows.operations.get", "workflows.operations.list", "workflows.workflows.create", "workflows.workflows.delete", "workflows.workflows.get", "workflows.workflows.getIamPolicy", "workflows.workflows.list", "workflows.workflows.setIamPolicy", "workflows.workflows.update"], "roles/workflows.editor": ["resourcemanager.projects.get", "resourcemanager.projects.list", "workflows.executions.cancel", "workflows.executions.create", "workflows.executions.get", "workflows.executions.list", "workflows.locations.get", "workflows.locations.list", "workflows.operations.cancel", "workflows.operations.get", "workflows.operations.list", "workflows.workflows.create", "workflows.workflows.delete", "workflows.workflows.get", "workflows.workflows.getIamPolicy", "workflows.workflows.list", "workflows.workflows.update"], "roles/workflows.invoker": ["resourcemanager.projects.get", "resourcemanager.projects.list", "workflows.executions.cancel", "workflows.executions.create", "workflows.executions.get", "workflows.executions.list"], "roles/workflows.viewer": ["resourcemanager.projects.get", "resourcemanager.projects.list", "workflows.executions.get", "workflows.executions.list", "workflows.locations.get", "workflows.locations.list", "workflows.operations.get", "workflows.operations.list", "workflows.workflows.get", "workflows.workflows.getIamPolicy", "workflows.workflows.list"], "roles/resourcemanager.lienModifier": ["resourcemanager.projects.updateLiens"], "roles/run.invoker": ["run.routes.invoke"], "roles/runtimeconfig.admin": ["runtimeconfig.configs.create", "runtimeconfig.configs.delete", "runtimeconfig.configs.get", "runtimeconfig.configs.getIamPolicy", "runtimeconfig.configs.list", "runtimeconfig.configs.setIamPolicy", "runtimeconfig.configs.update", "runtimeconfig.operations.get", "runtimeconfig.operations.list", "runtimeconfig.variables.create", "runtimeconfig.variables.delete", "runtimeconfig.variables.get", "runtimeconfig.variables.getIamPolicy", "runtimeconfig.variables.list", "runtimeconfig.variables.setIamPolicy", "runtimeconfig.variables.update", "runtimeconfig.variables.watch", "runtimeconfig.waiters.create", "runtimeconfig.waiters.delete", "runtimeconfig.waiters.get", "runtimeconfig.waiters.getIamPolicy", "runtimeconfig.waiters.list", "runtimeconfig.waiters.setIamPolicy", "runtimeconfig.waiters.update"], "roles/securitycenter.assetsDiscoveryRunner": ["securitycenter.assets.runDiscovery"], "roles/securitycenter.assetSecurityMarksWriter": ["securitycenter.assetsecuritymarks.update"], "roles/securitycenter.settingsAdmin": ["securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.containerthreatdetectionsettings.update", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.organizationsettings.update", "securitycenter.securitycentersettings.get", "securitycenter.securitycentersettings.update", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.securityhealthanalyticssettings.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "securitycenter.websecurityscannersettings.update"], "roles/securitycenter.settingsEditor": ["securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.containerthreatdetectionsettings.update", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.update", "securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update", "securitycenter.organizationsettings.get", "securitycenter.organizationsettings.update", "securitycenter.securitycentersettings.get", "securitycenter.securitycentersettings.update", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.securityhealthanalyticssettings.update", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get", "securitycenter.websecurityscannersettings.update"], "roles/securitycenter.settingsViewer": ["securitycenter.containerthreatdetectionsettings.calculate", "securitycenter.containerthreatdetectionsettings.get", "securitycenter.eventthreatdetectionsettings.calculate", "securitycenter.eventthreatdetectionsettings.get", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.organizationsettings.get", "securitycenter.securitycentersettings.get", "securitycenter.securityhealthanalyticssettings.calculate", "securitycenter.securityhealthanalyticssettings.get", "securitycenter.subscription.get", "securitycenter.websecurityscannersettings.calculate", "securitycenter.websecurityscannersettings.get"], "roles/securitycenter.findingsStateSetter": ["securitycenter.findings.setState"], "roles/securitycenter.findingsWorkflowStateSetter": ["securitycenter.findings.setWorkflowState"], "roles/securitycenter.findingSecurityMarksWriter": ["securitycenter.findingsecuritymarks.update"], "roles/securitycenter.notificationConfigEditor": ["securitycenter.notificationconfig.create", "securitycenter.notificationconfig.delete", "securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list", "securitycenter.notificationconfig.update"], "roles/securitycenter.notificationConfigViewer": ["securitycenter.notificationconfig.get", "securitycenter.notificationconfig.list"], "roles/servicebroker.admin": ["servicebroker.bindingoperations.get", "servicebroker.bindingoperations.list", "servicebroker.bindings.create", "servicebroker.bindings.delete", "servicebroker.bindings.get", "servicebroker.bindings.getIamPolicy", "servicebroker.bindings.list", "servicebroker.bindings.setIamPolicy", "servicebroker.catalogs.create", "servicebroker.catalogs.delete", "servicebroker.catalogs.get", "servicebroker.catalogs.getIamPolicy", "servicebroker.catalogs.list", "servicebroker.catalogs.setIamPolicy", "servicebroker.catalogs.validate", "servicebroker.instanceoperations.get", "servicebroker.instanceoperations.list", "servicebroker.instances.create", "servicebroker.instances.delete", "servicebroker.instances.get", "servicebroker.instances.getIamPolicy", "servicebroker.instances.list", "servicebroker.instances.setIamPolicy", "servicebroker.instances.update"], "roles/servicebroker.operator": ["servicebroker.bindingoperations.get", "servicebroker.bindingoperations.list", "servicebroker.bindings.create", "servicebroker.bindings.delete", "servicebroker.bindings.get", "servicebroker.bindings.list", "servicebroker.catalogs.create", "servicebroker.catalogs.delete", "servicebroker.catalogs.get", "servicebroker.catalogs.list", "servicebroker.instanceoperations.get", "servicebroker.instanceoperations.list", "servicebroker.instances.create", "servicebroker.instances.delete", "servicebroker.instances.get", "servicebroker.instances.list", "servicebroker.instances.update"], "roles/serviceconsumermanagement.tenancyUnitsAdmin": ["serviceconsumermanagement.tenancyu.addResource", "serviceconsumermanagement.tenancyu.create", "serviceconsumermanagement.tenancyu.delete", "serviceconsumermanagement.tenancyu.list", "serviceconsumermanagement.tenancyu.removeResource"], "roles/serviceconsumermanagement.": ["serviceconsumermanagement.tenancyu.list"], "roles/servicemanagement.serviceConsumer": ["servicemanagement.services.bind"], "roles/endpoints.serviceAgent": ["servicemanagement.services.check", "servicemanagement.services.get", "servicemanagement.services.quota", "servicemanagement.services.report"], "roles/servicemanagement.serviceController": ["servicemanagement.services.check", "servicemanagement.services.get", "servicemanagement.services.quota", "servicemanagement.services.report"], "roles/endpointsportal.serviceAgent": ["servicemanagement.services.get", "servicemanagement.services.list", "source.repos.get"], "roles/servicemanagement.configEditor": ["servicemanagement.services.get", "servicemanagement.services.update"], "roles/servicemanagement.reporter": ["servicemanagement.services.report"], "roles/servicenetworking.networksAdmin": ["servicenetworking.operations.cancel", "servicenetworking.operations.delete", "servicenetworking.operations.get", "servicenetworking.operations.list", "servicenetworking.services.addPeering", "servicenetworking.services.addSubnetwork", "servicenetworking.services.get"], "roles/monitoring.notificationServiceAgent": ["serviceusage.services.use"], "roles/source.admin": ["source.repos.create", "source.repos.delete", "source.repos.get", "source.repos.getIamPolicy", "source.repos.getProjectConfig", "source.repos.list", "source.repos.setIamPolicy", "source.repos.update", "source.repos.updateProjectConfig", "source.repos.updateRepoConfig"], "roles/source.reader": ["source.repos.get", "source.repos.list"], "roles/source.writer": ["source.repos.get", "source.repos.list", "source.repos.update"], "roles/spanner.backupWriter": ["spanner.backupOperations.get", "spanner.backupOperations.list", "spanner.backups.create", "spanner.backups.get", "spanner.backups.list", "spanner.databases.createBackup", "spanner.databases.get", "spanner.databases.list", "spanner.instances.get"], "roles/spanner.databaseUser": ["spanner.databaseOperations.cancel", "spanner.databaseOperations.delete", "spanner.databaseOperations.get", "spanner.databaseOperations.list", "spanner.databases.beginOrRollbackReadWriteTransaction", "spanner.databases.beginPartitionedDmlTransaction", "spanner.databases.beginReadOnlyTransaction", "spanner.databases.getDdl", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.databases.updateDdl", "spanner.databases.write", "spanner.instances.get", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list"], "roles/spanner.databaseReader": ["spanner.databases.beginReadOnlyTransaction", "spanner.databases.getDdl", "spanner.databases.partitionQuery", "spanner.databases.partitionRead", "spanner.databases.read", "spanner.databases.select", "spanner.instances.get", "spanner.sessions.create", "spanner.sessions.delete", "spanner.sessions.get", "spanner.sessions.list"], "roles/stackdriver.resourceMetadata.writer": ["stackdriver.resourceMetadata.write"], "roles/firebasestorage.serviceAgent": ["storage.buckets.get", "storage.buckets.getIamPolicy", "storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.list", "storage.objects.update"], "roles/storage.legacyBucketOwner": ["storage.buckets.get", "storage.buckets.getIamPolicy", "storage.buckets.setIamPolicy", "storage.buckets.update", "storage.objects.create", "storage.objects.delete", "storage.objects.list"], "roles/storage.legacyBucketReader": ["storage.buckets.get", "storage.objects.list"], "roles/storage.legacyBucketWriter": ["storage.buckets.get", "storage.objects.create", "storage.objects.delete", "storage.objects.list"], "roles/cloudmigration.storageaccess": ["storage.objects.create", "storage.objects.delete", "storage.objects.get", "storage.objects.list", "storage.objects.update"], "roles/storage.legacyObjectOwner": ["storage.objects.get", "storage.objects.getIamPolicy", "storage.objects.setIamPolicy", "storage.objects.update"], "roles/storage.legacyObjectReader": ["storage.objects.get"], "roles/threatdetection.editor": ["threatdetection.detectorSettings.clear", "threatdetection.detectorSettings.get", "threatdetection.detectorSettings.update", "threatdetection.sinkSettings.get", "threatdetection.sinkSettings.update", "threatdetection.sourceSettings.get", "threatdetection.sourceSettings.update"], "roles/threatdetection.viewer": ["threatdetection.detectorSettings.get", "threatdetection.sinkSettings.get", "threatdetection.sourceSettings.get"], "roles/trafficdirector.client": ["trafficdirector.networks.getConfigs", "trafficdirector.networks.reportMetrics"], "roles/vmmigration.admin": ["vmmigration.deployments.create", "vmmigration.deployments.get", "vmmigration.deployments.list"], "roles/vmmigration.viewer": ["vmmigration.deployments.get", "vmmigration.deployments.list"], "roles/vmwareengine.vmwareengineAdmin": ["vmwareengine.services.use", "vmwareengine.services.view"], "roles/vmwareengine.vmwareengineViewer": ["vmwareengine.services.view"]}